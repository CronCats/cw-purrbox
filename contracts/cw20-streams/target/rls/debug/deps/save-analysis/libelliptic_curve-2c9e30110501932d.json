{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3","program":"/Users/trevorclarke/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","elliptic_curve","--edition=2021","/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"arithmetic\"","--cfg","feature=\"digest\"","--cfg","feature=\"ff\"","--cfg","feature=\"group\"","--cfg","feature=\"hazmat\"","--cfg","feature=\"pkcs8\"","--cfg","feature=\"sec1\"","--cfg","feature=\"std\"","-C","metadata=2c9e30110501932d","-C","extra-filename=-2c9e30110501932d","--out-dir","/Users/trevorclarke/code/cron/cw-purrbox/contracts/cw20-streams/target/rls/debug/deps","-L","dependency=/Users/trevorclarke/code/cron/cw-purrbox/contracts/cw20-streams/target/rls/debug/deps","--extern","base16ct=/Users/trevorclarke/code/cron/cw-purrbox/contracts/cw20-streams/target/rls/debug/deps/libbase16ct-2f08dc106d921bd9.rmeta","--extern","crypto_bigint=/Users/trevorclarke/code/cron/cw-purrbox/contracts/cw20-streams/target/rls/debug/deps/libcrypto_bigint-60e0520fc9c2d4dc.rmeta","--extern","der=/Users/trevorclarke/code/cron/cw-purrbox/contracts/cw20-streams/target/rls/debug/deps/libder-00fc71fbd9e3f3f3.rmeta","--extern","digest=/Users/trevorclarke/code/cron/cw-purrbox/contracts/cw20-streams/target/rls/debug/deps/libdigest-d7ebc8039d9130cc.rmeta","--extern","ff=/Users/trevorclarke/code/cron/cw-purrbox/contracts/cw20-streams/target/rls/debug/deps/libff-e392d193814ea464.rmeta","--extern","generic_array=/Users/trevorclarke/code/cron/cw-purrbox/contracts/cw20-streams/target/rls/debug/deps/libgeneric_array-f3928be0c8722684.rmeta","--extern","group=/Users/trevorclarke/code/cron/cw-purrbox/contracts/cw20-streams/target/rls/debug/deps/libgroup-5b7fb1ee207769b3.rmeta","--extern","pkcs8=/Users/trevorclarke/code/cron/cw-purrbox/contracts/cw20-streams/target/rls/debug/deps/libpkcs8-f08786e3a95a7119.rmeta","--extern","rand_core=/Users/trevorclarke/code/cron/cw-purrbox/contracts/cw20-streams/target/rls/debug/deps/librand_core-75db2d0a7842c128.rmeta","--extern","sec1=/Users/trevorclarke/code/cron/cw-purrbox/contracts/cw20-streams/target/rls/debug/deps/libsec1-995175729910ce0b.rmeta","--extern","subtle=/Users/trevorclarke/code/cron/cw-purrbox/contracts/cw20-streams/target/rls/debug/deps/libsubtle-b97f54e6708d8225.rmeta","--extern","zeroize=/Users/trevorclarke/code/cron/cw-purrbox/contracts/cw20-streams/target/rls/debug/deps/libzeroize-a0003257de47f236.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/trevorclarke/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/trevorclarke/code/cron/cw-purrbox/contracts/cw20-streams/target/rls/debug/deps/libelliptic_curve-2c9e30110501932d.rmeta"},"prelude":{"crate_id":{"name":"elliptic_curve","disambiguator":[5097989422678828800,0]},"crate_root":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src","external_crates":[{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[16249227214258238047,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[13791225915815425008,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[455111089362928276,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[740641686899810413,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","num":5,"id":{"name":"std","disambiguator":[9602236740471282608,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1452182208797737205,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4474361821197688885,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11146593528668201643,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7026141623111916022,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[11096207044195207047,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[16946906222655600942,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[9670608472714711915,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[3075685271658393714,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[7553277853646633394,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[5387634511767759158,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[10401181353817371068,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14296571408058143832,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","num":18,"id":{"name":"crypto_bigint","disambiguator":[13828368939363800264,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","num":19,"id":{"name":"generic_array","disambiguator":[7899941157077680329,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","num":20,"id":{"name":"typenum","disambiguator":[14585012641457782044,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","num":21,"id":{"name":"subtle","disambiguator":[10187600383036868428,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","num":22,"id":{"name":"rand_core","disambiguator":[41299114264952942,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","num":23,"id":{"name":"getrandom","disambiguator":[7826760453764783728,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","num":24,"id":{"name":"cfg_if","disambiguator":[13037983282529128945,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","num":25,"id":{"name":"libc","disambiguator":[12525383312641221777,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","num":26,"id":{"name":"zeroize","disambiguator":[6111263756857440635,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","num":27,"id":{"name":"group","disambiguator":[4059414381887118030,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/weierstrass.rs","num":28,"id":{"name":"ff","disambiguator":[6689642643876023332,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","num":29,"id":{"name":"digest","disambiguator":[15049202732038179696,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","num":30,"id":{"name":"crypto_common","disambiguator":[14089165646673226514,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","num":31,"id":{"name":"block_buffer","disambiguator":[5185094059600351175,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","num":32,"id":{"name":"sec1","disambiguator":[18833169689429462,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","num":33,"id":{"name":"base16ct","disambiguator":[11517450063084463904,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key/pkcs8.rs","num":34,"id":{"name":"der","disambiguator":[17124280930950120561,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","num":35,"id":{"name":"const_oid","disambiguator":[3453305132763655898,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","num":36,"id":{"name":"pkcs8","disambiguator":[5259636068201448400,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","num":37,"id":{"name":"spki","disambiguator":[17120857976118901835,0]}}],"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":0,"byte_end":7318,"line_start":1,"line_end":220,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":1,"index":3091},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":20952,"byte_end":20955,"line_start":3,"line_end":3,"column_start":21,"column_end":24},"alias_span":null,"name":"Add","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":1,"index":3122},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":20957,"byte_end":20966,"line_start":3,"line_end":3,"column_start":26,"column_end":35},"alias_span":null,"name":"AddAssign","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":1,"index":3101},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":20968,"byte_end":20971,"line_start":3,"line_end":3,"column_start":37,"column_end":40},"alias_span":null,"name":"Mul","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":1,"index":3118},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":20973,"byte_end":20976,"line_start":3,"line_end":3,"column_start":42,"column_end":45},"alias_span":null,"name":"Neg","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":1,"index":3096},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":20978,"byte_end":20981,"line_start":3,"line_end":3,"column_start":47,"column_end":50},"alias_span":null,"name":"Sub","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":1,"index":3126},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":20983,"byte_end":20992,"line_start":3,"line_end":3,"column_start":52,"column_end":61},"alias_span":null,"name":"SubAssign","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":32,"index":390},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":24126,"byte_end":24137,"line_start":5,"line_end":5,"column_start":23,"column_end":34},"alias_span":null,"name":"Coordinates","value":"","parent":{"krate":0,"index":70}},{"kind":"Use","ref_id":{"krate":32,"index":69},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":24139,"byte_end":24150,"line_start":5,"line_end":5,"column_start":36,"column_end":47},"alias_span":null,"name":"ModulusSize","value":"","parent":{"krate":0,"index":70}},{"kind":"Use","ref_id":{"krate":32,"index":429},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":24152,"byte_end":24155,"line_start":5,"line_end":5,"column_start":49,"column_end":52},"alias_span":null,"name":"Tag","value":"","parent":{"krate":0,"index":70}},{"kind":"Use","ref_id":{"krate":0,"index":1064},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":3340,"byte_end":3345,"line_start":108,"line_end":108,"column_start":13,"column_end":18},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1065},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":3340,"byte_end":3345,"line_start":108,"line_end":108,"column_start":13,"column_end":18},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":159},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":3347,"byte_end":3353,"line_start":108,"line_end":108,"column_start":20,"column_end":26},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":185},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":3377,"byte_end":3394,"line_start":110,"line_end":110,"column_start":9,"column_end":26},"alias_span":null,"name":"AffineXCoordinate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":191},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":3396,"byte_end":3410,"line_start":110,"line_end":110,"column_start":28,"column_end":42},"alias_span":null,"name":"DecompactPoint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":188},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":3412,"byte_end":3427,"line_start":110,"line_end":110,"column_start":44,"column_end":59},"alias_span":null,"name":"DecompressPoint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":196},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":3429,"byte_end":3444,"line_start":110,"line_end":110,"column_start":61,"column_end":76},"alias_span":null,"name":"PointCompaction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":194},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":3446,"byte_end":3462,"line_start":110,"line_end":110,"column_start":78,"column_end":94},"alias_span":null,"name":"PointCompression","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1077},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":3490,"byte_end":3500,"line_start":112,"line_end":112,"column_start":20,"column_end":30},"alias_span":null,"name":"ScalarCore","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":602},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":3502,"byte_end":3508,"line_start":112,"line_end":112,"column_start":32,"column_end":38},"alias_span":null,"name":"IsHigh","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1097},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":3527,"byte_end":3536,"line_start":113,"line_end":113,"column_start":17,"column_end":26},"alias_span":null,"name":"SecretKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":0},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":3549,"byte_end":3562,"line_start":115,"line_end":115,"column_start":9,"column_end":22},"alias_span":null,"name":"bigint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":0},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":3582,"byte_end":3595,"line_start":116,"line_end":116,"column_start":9,"column_end":22},"alias_span":null,"name":"generic_array","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":2827},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":3613,"byte_end":3619,"line_start":116,"line_end":116,"column_start":40,"column_end":46},"alias_span":null,"name":"consts","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":0},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":3630,"byte_end":3639,"line_start":117,"line_end":117,"column_start":9,"column_end":18},"alias_span":null,"name":"rand_core","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":0},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":3649,"byte_end":3655,"line_start":118,"line_end":118,"column_start":9,"column_end":15},"alias_span":null,"name":"subtle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":0},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":3665,"byte_end":3672,"line_start":119,"line_end":119,"column_start":9,"column_end":16},"alias_span":null,"name":"zeroize","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":820},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":3763,"byte_end":3779,"line_start":125,"line_end":125,"column_start":13,"column_end":29},"alias_span":null,"name":"AffineArithmetic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":822},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":3781,"byte_end":3801,"line_start":125,"line_end":125,"column_start":31,"column_end":51},"alias_span":null,"name":"PrimeCurveArithmetic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":824},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":3803,"byte_end":3823,"line_start":125,"line_end":125,"column_start":53,"column_end":73},"alias_span":null,"name":"ProjectiveArithmetic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":826},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":3825,"byte_end":3841,"line_start":125,"line_end":125,"column_start":75,"column_end":91},"alias_span":null,"name":"ScalarArithmetic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1103},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":3874,"byte_end":3883,"line_start":127,"line_end":127,"column_start":21,"column_end":30},"alias_span":null,"name":"PublicKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1091},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":3911,"byte_end":3924,"line_start":128,"line_end":128,"column_start":27,"column_end":40},"alias_span":null,"name":"NonZeroScalar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":600},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":3926,"byte_end":3932,"line_start":128,"line_end":128,"column_start":42,"column_end":48},"alias_span":null,"name":"Scalar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":0},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":3946,"byte_end":3948,"line_start":130,"line_end":130,"column_start":5,"column_end":7},"alias_span":null,"name":"ff","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":62},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":3957,"byte_end":3962,"line_start":130,"line_end":130,"column_start":16,"column_end":21},"alias_span":null,"name":"Field","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":82},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":3964,"byte_end":3974,"line_start":130,"line_end":130,"column_start":23,"column_end":33},"alias_span":null,"name":"PrimeField","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":0},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":3981,"byte_end":3986,"line_start":131,"line_end":131,"column_start":5,"column_end":10},"alias_span":null,"name":"group","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":176},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":3995,"byte_end":4000,"line_start":131,"line_end":131,"column_start":19,"column_end":24},"alias_span":null,"name":"Group","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":36,"index":0},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":4174,"byte_end":4179,"line_start":141,"line_end":141,"column_start":9,"column_end":14},"alias_span":null,"name":"pkcs8","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":0,"byte_end":7318,"line_start":1,"line_end":220,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":70},{"krate":0,"index":134},{"krate":0,"index":148},{"krate":0,"index":170},{"krate":0,"index":198},{"krate":0,"index":604},{"krate":0,"index":784},{"krate":0,"index":828},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":952},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":959},{"krate":0,"index":962},{"krate":0,"index":965},{"krate":0,"index":968},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":975},{"krate":0,"index":978},{"krate":0,"index":981},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":988},{"krate":0,"index":991},{"krate":0,"index":994},{"krate":0,"index":997},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1006},{"krate":0,"index":1009},{"krate":0,"index":1012},{"krate":0,"index":1015},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1022},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1029},{"krate":0,"index":1032},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1039},{"krate":0,"index":1042},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1048},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1058},{"krate":0,"index":1060},{"krate":0,"index":1062}],"decl_id":null,"docs":"# RustCrypto: Elliptic Curve Traits","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":0,"byte_end":10,"line_start":1,"line_end":1,"column_start":1,"column_end":11}},{"value":"forbid(unsafe_code, clippy :: unwrap_used)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":286,"byte_end":330,"line_start":8,"line_end":8,"column_start":1,"column_end":45}},{"value":"warn(missing_docs, rust_2018_idioms, unused_qualifications)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":331,"byte_end":394,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ ## Usage","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":396,"byte_end":408,"line_start":11,"line_end":11,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":409,"byte_end":412,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This crate provides traits for describing elliptic curves, along with","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":413,"byte_end":486,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/ types which are generic over elliptic curves which can be used as the","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":487,"byte_end":560,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ basis of curve-agnostic code.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":561,"byte_end":594,"line_start":15,"line_end":15,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":595,"byte_end":598,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ It's intended to be used with the following concrete elliptic curve","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":599,"byte_end":670,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/ implementations from the [`RustCrypto/elliptic-curves`] project:","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":671,"byte_end":739,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":740,"byte_end":743,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ - [`bp256`]: brainpoolP256r1 and brainpoolP256t1","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":744,"byte_end":796,"line_start":20,"line_end":20,"column_start":1,"column_end":53}},{"value":"/ - [`bp384`]: brainpoolP384r1 and brainpoolP384t1","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":797,"byte_end":849,"line_start":21,"line_end":21,"column_start":1,"column_end":53}},{"value":"/ - [`k256`]: secp256k1 a.k.a. K-256","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":850,"byte_end":888,"line_start":22,"line_end":22,"column_start":1,"column_end":39}},{"value":"/ - [`p256`]: NIST P-256 a.k.a secp256r1, prime256v1","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":889,"byte_end":943,"line_start":23,"line_end":23,"column_start":1,"column_end":55}},{"value":"/ - [`p384`]: NIST P-384 a.k.a. secp384r1","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":944,"byte_end":987,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":988,"byte_end":991,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The [`ecdsa`] crate provides a generic implementation of the","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":992,"byte_end":1056,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/ Elliptic Curve Digital Signature Algorithm which can be used with any of","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":1057,"byte_end":1133,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/ the above crates, either via an external ECDSA implementation, or","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":1134,"byte_end":1203,"line_start":28,"line_end":28,"column_start":1,"column_end":70}},{"value":"/ using native curve arithmetic where applicable.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":1204,"byte_end":1255,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":1256,"byte_end":1259,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ## Type conversions","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":1260,"byte_end":1283,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":1284,"byte_end":1287,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ The following chart illustrates the various conversions possible between","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":1288,"byte_end":1364,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"/ the various types defined by this crate.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":1365,"byte_end":1409,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":1410,"byte_end":1413,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ![Type Conversion Map](https://raw.githubusercontent.com/RustCrypto/media/master/img/elliptic-curve/type-transforms.svg)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":1414,"byte_end":1538,"line_start":36,"line_end":36,"column_start":1,"column_end":125}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":1539,"byte_end":1542,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ## `serde` support","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":1543,"byte_end":1565,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":1566,"byte_end":1569,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the `serde` feature of this crate is enabled, `Serialize` and","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":1570,"byte_end":1640,"line_start":40,"line_end":40,"column_start":1,"column_end":71}},{"value":"/ `Deserialize` impls are provided for the following types:","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":1641,"byte_end":1702,"line_start":41,"line_end":41,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":1703,"byte_end":1706,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ - [`JwkEcKey`]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":1707,"byte_end":1725,"line_start":43,"line_end":43,"column_start":1,"column_end":19}},{"value":"/ - [`PublicKey`]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":1726,"byte_end":1745,"line_start":44,"line_end":44,"column_start":1,"column_end":20}},{"value":"/ - [`ScalarCore`]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":1746,"byte_end":1766,"line_start":45,"line_end":45,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":1767,"byte_end":1770,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Please see type-specific documentation for more information.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":1771,"byte_end":1835,"line_start":47,"line_end":47,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":1836,"byte_end":1839,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ [`RustCrypto/elliptic-curves`]: https://github.com/RustCrypto/elliptic-curves","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":1840,"byte_end":1921,"line_start":49,"line_end":49,"column_start":1,"column_end":82}},{"value":"/ [`bp256`]: https://github.com/RustCrypto/elliptic-curves/tree/master/bp256","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":1922,"byte_end":2000,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"/ [`bp384`]: https://github.com/RustCrypto/elliptic-curves/tree/master/bp384","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":2001,"byte_end":2079,"line_start":51,"line_end":51,"column_start":1,"column_end":79}},{"value":"/ [`k256`]: https://github.com/RustCrypto/elliptic-curves/tree/master/k256","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":2080,"byte_end":2156,"line_start":52,"line_end":52,"column_start":1,"column_end":77}},{"value":"/ [`p256`]: https://github.com/RustCrypto/elliptic-curves/tree/master/p256","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":2157,"byte_end":2233,"line_start":53,"line_end":53,"column_start":1,"column_end":77}},{"value":"/ [`p384`]: https://github.com/RustCrypto/elliptic-curves/tree/master/p384","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":2234,"byte_end":2310,"line_start":54,"line_end":54,"column_start":1,"column_end":77}},{"value":"/ [`ecdsa`]: https://github.com/RustCrypto/signatures/tree/master/ecdsa","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":2311,"byte_end":2384,"line_start":55,"line_end":55,"column_start":1,"column_end":74}}]},{"kind":"Mod","id":{"krate":0,"index":9},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ops","qualname":"::ops","value":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":67}],"decl_id":null,"docs":" Traits for arithmetic operations on elliptic curve field elements.\n","sig":null,"attributes":[{"value":"/ Traits for arithmetic operations on elliptic curve field elements.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":20860,"byte_end":20930,"line_start":1,"line_end":1,"column_start":1,"column_end":71}}]},{"kind":"Trait","id":{"krate":0,"index":49},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":21266,"byte_end":21272,"line_start":14,"line_end":14,"column_start":11,"column_end":17},"name":"Invert","qualname":"::ops::Invert","value":"Invert","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51}],"decl_id":null,"docs":" Perform an inversion on a field element (i.e. base field element or scalar)\n","sig":null,"attributes":[{"value":"/ Perform an inversion on a field element (i.e. base field element or scalar)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":21176,"byte_end":21255,"line_start":13,"line_end":13,"column_start":1,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":50},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":21311,"byte_end":21317,"line_start":16,"line_end":16,"column_start":10,"column_end":16},"name":"Output","qualname":"::ops::Invert::Output","value":"type Output;","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Field element type\n","sig":null,"attributes":[{"value":"/ Field element type","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":21279,"byte_end":21301,"line_start":15,"line_end":15,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":21359,"byte_end":21365,"line_start":19,"line_end":19,"column_start":8,"column_end":14},"name":"invert","qualname":"::ops::Invert::invert","value":"pub fn invert(&Self) -> Self::Output","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Invert a field element.\n","sig":null,"attributes":[{"value":"/ Invert a field element.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":21324,"byte_end":21351,"line_start":18,"line_end":18,"column_start":5,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":56},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":21970,"byte_end":21987,"line_start":39,"line_end":39,"column_start":11,"column_end":28},"name":"LinearCombination","qualname":"::ops::LinearCombination","value":"LinearCombination: Group","parent":null,"children":[{"krate":0,"index":57}],"decl_id":null,"docs":" Linear combination.","sig":null,"attributes":[{"value":"/ Linear combination.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":21569,"byte_end":21592,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":21593,"byte_end":21596,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This trait enables crates to provide an optimized implementation of","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":21597,"byte_end":21668,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/ linear combinations (e.g. Shamir's Trick), or otherwise provides a default","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":21669,"byte_end":21747,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ non-optimized implementation.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":21748,"byte_end":21781,"line_start":35,"line_end":35,"column_start":1,"column_end":34}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":21875,"byte_end":21905,"line_start":37,"line_end":37,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":22040,"byte_end":22047,"line_start":41,"line_end":41,"column_start":8,"column_end":15},"name":"lincomb","qualname":"::ops::LinearCombination::lincomb","value":"pub fn lincomb(&Self, &Self::Scalar, &Self, &Self::Scalar) -> Self","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" Calculates `x * k + y * l`.\n","sig":null,"attributes":[{"value":"/ Calculates `x * k + y * l`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":22001,"byte_end":22032,"line_start":40,"line_end":40,"column_start":5,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":58},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":22184,"byte_end":22190,"line_start":47,"line_end":47,"column_start":11,"column_end":17},"name":"Reduce","qualname":"::ops::Reduce","value":"Reduce<UInt: Integer + ArrayEncoding>: Sized","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":65}],"decl_id":null,"docs":" Modular reduction.\n","sig":null,"attributes":[{"value":"/ Modular reduction.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":22151,"byte_end":22173,"line_start":46,"line_end":46,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":22302,"byte_end":22319,"line_start":49,"line_end":49,"column_start":8,"column_end":25},"name":"from_uint_reduced","qualname":"::ops::Reduce::from_uint_reduced","value":"pub fn from_uint_reduced(UInt) -> Self","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" Perform a modular reduction, returning a field element.\n","sig":null,"attributes":[{"value":"/ Perform a modular reduction, returning a field element.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":22235,"byte_end":22294,"line_start":48,"line_end":48,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":22450,"byte_end":22471,"line_start":53,"line_end":53,"column_start":8,"column_end":29},"name":"from_be_bytes_reduced","qualname":"::ops::Reduce::from_be_bytes_reduced","value":"pub fn from_be_bytes_reduced(ByteArray<UInt>) -> Self","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" Interpret the given byte array as a big endian integer and perform\n a modular reduction.\n","sig":null,"attributes":[{"value":"/ Interpret the given byte array as a big endian integer and perform","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":22343,"byte_end":22413,"line_start":51,"line_end":51,"column_start":5,"column_end":75}},{"value":"/ a modular reduction.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":22418,"byte_end":22442,"line_start":52,"line_end":52,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":22692,"byte_end":22713,"line_start":59,"line_end":59,"column_start":8,"column_end":29},"name":"from_le_bytes_reduced","qualname":"::ops::Reduce::from_le_bytes_reduced","value":"pub fn from_le_bytes_reduced(ByteArray<UInt>) -> Self","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" Interpret the given byte array as a little endian integer and perform a\n modular reduction.\n","sig":null,"attributes":[{"value":"/ Interpret the given byte array as a little endian integer and perform a","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":22582,"byte_end":22657,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ modular reduction.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":22662,"byte_end":22684,"line_start":58,"line_end":58,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":23004,"byte_end":23026,"line_start":67,"line_end":67,"column_start":8,"column_end":30},"name":"from_be_digest_reduced","qualname":"::ops::Reduce::from_be_digest_reduced","value":"pub fn from_be_digest_reduced<D>(D) -> Self where D: FixedOutput<OutputSize =\nUInt::ByteSize>","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" Interpret a digest as a big endian integer and perform a modular\n reduction.\n","sig":null,"attributes":[{"value":"/ Interpret a digest as a big endian integer and perform a modular","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":22824,"byte_end":22892,"line_start":63,"line_end":63,"column_start":5,"column_end":73}},{"value":"/ reduction.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":22897,"byte_end":22911,"line_start":64,"line_end":64,"column_start":5,"column_end":19}},{"value":"cfg(feature = \"digest\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":22916,"byte_end":22942,"line_start":65,"line_end":65,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":23373,"byte_end":23395,"line_start":78,"line_end":78,"column_start":8,"column_end":30},"name":"from_le_digest_reduced","qualname":"::ops::Reduce::from_le_digest_reduced","value":"pub fn from_le_digest_reduced<D>(D) -> Self where D: FixedOutput<OutputSize =\nUInt::ByteSize>","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" Interpret a digest as a little endian integer and perform a modular\n reduction.\n","sig":null,"attributes":[{"value":"/ Interpret a digest as a little endian integer and perform a modular","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":23190,"byte_end":23261,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ reduction.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":23266,"byte_end":23280,"line_start":75,"line_end":75,"column_start":5,"column_end":19}},{"value":"cfg(feature = \"digest\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":23285,"byte_end":23311,"line_start":76,"line_end":76,"column_start":5,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":67},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":23834,"byte_end":23847,"line_start":93,"line_end":93,"column_start":11,"column_end":24},"name":"ReduceNonZero","qualname":"::ops::ReduceNonZero","value":"ReduceNonZero<UInt: Integer + ArrayEncoding>: Sized","parent":null,"children":[{"krate":0,"index":69}],"decl_id":null,"docs":" Modular reduction to a non-zero output.","sig":null,"attributes":[{"value":"/ Modular reduction to a non-zero output.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":23557,"byte_end":23600,"line_start":86,"line_end":86,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":23601,"byte_end":23604,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ This trait is primarily intended for use by curve implementations such","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":23605,"byte_end":23679,"line_start":88,"line_end":88,"column_start":1,"column_end":75}},{"value":"/ as the `k256` and `p256` crates.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":23680,"byte_end":23716,"line_start":89,"line_end":89,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":23717,"byte_end":23720,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ End users should use the [`Reduce`] impl on","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":23721,"byte_end":23768,"line_start":91,"line_end":91,"column_start":1,"column_end":48}},{"value":"/ [`NonZeroScalar`][`crate::NonZeroScalar`] instead.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":23769,"byte_end":23823,"line_start":92,"line_end":92,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":23959,"byte_end":23984,"line_start":95,"line_end":95,"column_start":8,"column_end":33},"name":"from_uint_reduced_nonzero","qualname":"::ops::ReduceNonZero::from_uint_reduced_nonzero","value":"pub fn from_uint_reduced_nonzero(UInt) -> Self","parent":{"krate":0,"index":67},"children":[],"decl_id":null,"docs":" Perform a modular reduction, returning a field element.\n","sig":null,"attributes":[{"value":"/ Perform a modular reduction, returning a field element.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":23892,"byte_end":23951,"line_start":94,"line_end":94,"column_start":5,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":70},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sec1","qualname":"::sec1","value":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":131}],"decl_id":null,"docs":" Support for SEC1 elliptic curve encoding formats.","sig":null,"attributes":[{"value":"cfg(feature = \"sec1\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":2936,"byte_end":2960,"line_start":86,"line_end":86,"column_start":1,"column_end":25}},{"value":"/ Support for SEC1 elliptic curve encoding formats.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":24006,"byte_end":24059,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":24060,"byte_end":24063,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ <https://www.secg.org/sec1-v2.pdf>","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":24064,"byte_end":24102,"line_start":3,"line_end":3,"column_start":1,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":110},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":24418,"byte_end":24433,"line_start":15,"line_end":15,"column_start":10,"column_end":25},"name":"CompressedPoint","qualname":"::sec1::CompressedPoint","value":"GenericArray<u8, CompressedPointSize<C>>","parent":null,"children":[],"decl_id":null,"docs":" Encoded elliptic curve point with point compression.\n","sig":null,"attributes":[{"value":"/ Encoded elliptic curve point with point compression.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":24352,"byte_end":24408,"line_start":14,"line_end":14,"column_start":1,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":112},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":24538,"byte_end":24557,"line_start":18,"line_end":18,"column_start":10,"column_end":29},"name":"CompressedPointSize","qualname":"::sec1::CompressedPointSize","value":"<FieldSize<C> as ModulusSize>::CompressedPointSize","parent":null,"children":[],"decl_id":null,"docs":" Size of a compressed elliptic curve point.\n","sig":null,"attributes":[{"value":"/ Size of a compressed elliptic curve point.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":24482,"byte_end":24528,"line_start":17,"line_end":17,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":114},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":24697,"byte_end":24709,"line_start":21,"line_end":21,"column_start":10,"column_end":22},"name":"EncodedPoint","qualname":"::sec1::EncodedPoint","value":"sec1::point::EncodedPoint<FieldSize<C>>","parent":null,"children":[],"decl_id":null,"docs":" Encoded elliptic curve point sized appropriately for a given curve.\n","sig":null,"attributes":[{"value":"/ Encoded elliptic curve point sized appropriately for a given curve.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":24616,"byte_end":24687,"line_start":20,"line_end":20,"column_start":1,"column_end":72}}]},{"kind":"Type","id":{"krate":0,"index":116},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":24828,"byte_end":24845,"line_start":24,"line_end":24,"column_start":10,"column_end":27},"name":"UncompressedPoint","qualname":"::sec1::UncompressedPoint","value":"GenericArray<u8, UncompressedPointSize<C>>","parent":null,"children":[],"decl_id":null,"docs":" Encoded elliptic curve point *without* point compression.\n","sig":null,"attributes":[{"value":"/ Encoded elliptic curve point *without* point compression.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":24757,"byte_end":24818,"line_start":23,"line_end":23,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":118},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":24955,"byte_end":24976,"line_start":27,"line_end":27,"column_start":10,"column_end":31},"name":"UncompressedPointSize","qualname":"::sec1::UncompressedPointSize","value":"<FieldSize<C> as ModulusSize>::UncompressedPointSize","parent":null,"children":[],"decl_id":null,"docs":" Size of an uncompressed elliptic curve point.\n","sig":null,"attributes":[{"value":"/ Size of an uncompressed elliptic curve point.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":24896,"byte_end":24945,"line_start":26,"line_end":26,"column_start":1,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":120},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":25205,"byte_end":25221,"line_start":32,"line_end":32,"column_start":11,"column_end":27},"name":"FromEncodedPoint","qualname":"::sec1::FromEncodedPoint","value":"FromEncodedPoint<C>","parent":null,"children":[{"krate":0,"index":122}],"decl_id":null,"docs":" Trait for deserializing a value from a SEC1 encoded curve point.","sig":null,"attributes":[{"value":"/ Trait for deserializing a value from a SEC1 encoded curve point.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":25037,"byte_end":25105,"line_start":29,"line_end":29,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":25106,"byte_end":25109,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This is intended for use with the `AffinePoint` type for a given elliptic curve.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":25110,"byte_end":25194,"line_start":31,"line_end":31,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":25381,"byte_end":25399,"line_start":39,"line_end":39,"column_start":8,"column_end":26},"name":"from_encoded_point","qualname":"::sec1::FromEncodedPoint::from_encoded_point","value":"pub fn from_encoded_point(&EncodedPoint<C>) -> CtOption<Self>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Deserialize the type this trait is impl'd on from an [`EncodedPoint`].\n","sig":null,"attributes":[{"value":"/ Deserialize the type this trait is impl'd on from an [`EncodedPoint`].","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":25299,"byte_end":25373,"line_start":38,"line_end":38,"column_start":5,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":123},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":25611,"byte_end":25625,"line_start":45,"line_end":45,"column_start":11,"column_end":25},"name":"ToEncodedPoint","qualname":"::sec1::ToEncodedPoint","value":"ToEncodedPoint<C>","parent":null,"children":[{"krate":0,"index":125}],"decl_id":null,"docs":" Trait for serializing a value to a SEC1 encoded curve point.","sig":null,"attributes":[{"value":"/ Trait for serializing a value to a SEC1 encoded curve point.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":25447,"byte_end":25511,"line_start":42,"line_end":42,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":25512,"byte_end":25515,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ This is intended for use with the `AffinePoint` type for a given elliptic curve.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":25516,"byte_end":25600,"line_start":44,"line_end":44,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":25793,"byte_end":25809,"line_start":52,"line_end":52,"column_start":8,"column_end":24},"name":"to_encoded_point","qualname":"::sec1::ToEncodedPoint::to_encoded_point","value":"pub fn to_encoded_point(&Self, bool) -> EncodedPoint<C>","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" Serialize this value as a SEC1 [`EncodedPoint`], optionally applying\n point compression.\n","sig":null,"attributes":[{"value":"/ Serialize this value as a SEC1 [`EncodedPoint`], optionally applying","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":25686,"byte_end":25758,"line_start":50,"line_end":50,"column_start":5,"column_end":77}},{"value":"/ point compression.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":25763,"byte_end":25785,"line_start":51,"line_end":51,"column_start":5,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":126},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":26036,"byte_end":26057,"line_start":58,"line_end":58,"column_start":11,"column_end":32},"name":"ToCompactEncodedPoint","qualname":"::sec1::ToCompactEncodedPoint","value":"ToCompactEncodedPoint<C>","parent":null,"children":[{"krate":0,"index":128}],"decl_id":null,"docs":" Trait for serializing a value to a SEC1 encoded curve point with compaction.","sig":null,"attributes":[{"value":"/ Trait for serializing a value to a SEC1 encoded curve point with compaction.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":25856,"byte_end":25936,"line_start":55,"line_end":55,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":25937,"byte_end":25940,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ This is intended for use with the `AffinePoint` type for a given elliptic curve.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":25941,"byte_end":26025,"line_start":57,"line_end":57,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":26225,"byte_end":26249,"line_start":65,"line_end":65,"column_start":8,"column_end":32},"name":"to_compact_encoded_point","qualname":"::sec1::ToCompactEncodedPoint::to_compact_encoded_point","value":"pub fn to_compact_encoded_point(&Self) -> CtOption<EncodedPoint<C>>","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Serialize this value as a SEC1 [`EncodedPoint`], optionally applying\n point compression.\n","sig":null,"attributes":[{"value":"/ Serialize this value as a SEC1 [`EncodedPoint`], optionally applying","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":26118,"byte_end":26190,"line_start":63,"line_end":63,"column_start":5,"column_end":77}},{"value":"/ point compression.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":26195,"byte_end":26217,"line_start":64,"line_end":64,"column_start":5,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":129},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":26536,"byte_end":26553,"line_start":73,"line_end":73,"column_start":11,"column_end":28},"name":"ValidatePublicKey","qualname":"::sec1::ValidatePublicKey","value":"ValidatePublicKey","parent":null,"children":[{"krate":0,"index":130}],"decl_id":null,"docs":" Validate that the given [`EncodedPoint`] represents the encoded public key\n value of the given secret.","sig":null,"attributes":[{"value":"/ Validate that the given [`EncodedPoint`] represents the encoded public key","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":26290,"byte_end":26368,"line_start":68,"line_end":68,"column_start":1,"column_end":79}},{"value":"/ value of the given secret.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":26369,"byte_end":26399,"line_start":69,"line_end":69,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":26400,"byte_end":26403,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Curve implementations which also impl [`ProjectiveArithmetic`] will receive","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":26404,"byte_end":26483,"line_start":71,"line_end":71,"column_start":1,"column_end":80}},{"value":"/ a blanket default impl of this trait.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":26484,"byte_end":26525,"line_start":72,"line_end":72,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":26761,"byte_end":26780,"line_start":81,"line_end":81,"column_start":8,"column_end":27},"name":"validate_public_key","qualname":"::sec1::ValidatePublicKey::validate_public_key","value":"pub fn validate_public_key(&SecretKey<Self>, &EncodedPoint<Self>)\n-> Result<()>","parent":{"krate":0,"index":129},"children":[],"decl_id":null,"docs":" Validate that the given [`EncodedPoint`] is a valid public key for the\n provided secret value.\n","sig":null,"attributes":[{"value":"/ Validate that the given [`EncodedPoint`] is a valid public key for the","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":26617,"byte_end":26691,"line_start":78,"line_end":78,"column_start":5,"column_end":79}},{"value":"/ provided secret value.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":26696,"byte_end":26722,"line_start":79,"line_end":79,"column_start":5,"column_end":31}},{"value":"allow(unused_variables)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":26727,"byte_end":26753,"line_start":80,"line_end":80,"column_start":5,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":134},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/weierstrass.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"weierstrass","qualname":"::weierstrass","value":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/weierstrass.rs","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":146}],"decl_id":null,"docs":" Complete projective formulas for prime order elliptic curves as described\n in [Renes-Costello-Batina 2015].","sig":null,"attributes":[{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":3024,"byte_end":3054,"line_start":90,"line_end":90,"column_start":1,"column_end":31}},{"value":"/ Complete projective formulas for prime order elliptic curves as described","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/weierstrass.rs","byte_start":27792,"byte_end":27869,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ in [Renes-Costello-Batina 2015].","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/weierstrass.rs","byte_start":27870,"byte_end":27906,"line_start":2,"line_end":2,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/weierstrass.rs","byte_start":27907,"byte_end":27910,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ [Renes-Costello-Batina 2015]: https://eprint.iacr.org/2015/1060","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/weierstrass.rs","byte_start":27911,"byte_end":27978,"line_start":4,"line_end":4,"column_start":1,"column_end":68}},{"value":"allow(clippy :: op_ref)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/weierstrass.rs","byte_start":27980,"byte_end":28005,"line_start":6,"line_end":6,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":138},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/weierstrass.rs","byte_start":28111,"byte_end":28122,"line_start":11,"line_end":11,"column_start":10,"column_end":21},"name":"AffinePoint","qualname":"::weierstrass::AffinePoint","value":"(Fe, Fe)","parent":null,"children":[],"decl_id":null,"docs":" Affine point whose coordinates are represented by the given field element.\n","sig":null,"attributes":[{"value":"/ Affine point whose coordinates are represented by the given field element.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/weierstrass.rs","byte_start":28023,"byte_end":28101,"line_start":10,"line_end":10,"column_start":1,"column_end":79}}]},{"kind":"Type","id":{"krate":0,"index":140},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/weierstrass.rs","byte_start":28232,"byte_end":28247,"line_start":14,"line_end":14,"column_start":10,"column_end":25},"name":"ProjectivePoint","qualname":"::weierstrass::ProjectivePoint","value":"(Fe, Fe, Fe)","parent":null,"children":[],"decl_id":null,"docs":" Projective point whose coordinates are represented by the given field element.\n","sig":null,"attributes":[{"value":"/ Projective point whose coordinates are represented by the given field element.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/weierstrass.rs","byte_start":28140,"byte_end":28222,"line_start":13,"line_end":13,"column_start":1,"column_end":83}}]},{"kind":"Function","id":{"krate":0,"index":142},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/weierstrass.rs","byte_start":28464,"byte_end":28467,"line_start":21,"line_end":21,"column_start":8,"column_end":11},"name":"add","qualname":"::weierstrass::add","value":"pub fn add<Fe>(ProjectivePoint<Fe>, ProjectivePoint<Fe>, Fe)\n-> ProjectivePoint<Fe> where Fe: Field","parent":null,"children":[],"decl_id":null,"docs":" Implements the complete addition formula from [Renes-Costello-Batina 2015]\n (Algorithm 4).","sig":null,"attributes":[{"value":"/ Implements the complete addition formula from [Renes-Costello-Batina 2015]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/weierstrass.rs","byte_start":28269,"byte_end":28347,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ (Algorithm 4).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/weierstrass.rs","byte_start":28348,"byte_end":28366,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/weierstrass.rs","byte_start":28367,"byte_end":28370,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [Renes-Costello-Batina 2015]: https://eprint.iacr.org/2015/1060","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/weierstrass.rs","byte_start":28371,"byte_end":28438,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"inline(always)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/weierstrass.rs","byte_start":28439,"byte_end":28456,"line_start":20,"line_end":20,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":144},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/weierstrass.rs","byte_start":29939,"byte_end":29948,"line_start":60,"line_end":60,"column_start":8,"column_end":17},"name":"add_mixed","qualname":"::weierstrass::add_mixed","value":"pub fn add_mixed<Fe>(ProjectivePoint<Fe>, AffinePoint<Fe>, Fe)\n-> ProjectivePoint<Fe> where Fe: Field","parent":null,"children":[],"decl_id":null,"docs":" Implements the complete mixed addition formula from\n [Renes-Costello-Batina 2015] (Algorithm 5).","sig":null,"attributes":[{"value":"/ Implements the complete mixed addition formula from","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/weierstrass.rs","byte_start":29738,"byte_end":29793,"line_start":55,"line_end":55,"column_start":1,"column_end":56}},{"value":"/ [Renes-Costello-Batina 2015] (Algorithm 5).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/weierstrass.rs","byte_start":29794,"byte_end":29841,"line_start":56,"line_end":56,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/weierstrass.rs","byte_start":29842,"byte_end":29845,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ [Renes-Costello-Batina 2015]: https://eprint.iacr.org/2015/1060","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/weierstrass.rs","byte_start":29846,"byte_end":29913,"line_start":58,"line_end":58,"column_start":1,"column_end":68}},{"value":"inline(always)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/weierstrass.rs","byte_start":29914,"byte_end":29931,"line_start":59,"line_end":59,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":146},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/weierstrass.rs","byte_start":31327,"byte_end":31333,"line_start":98,"line_end":98,"column_start":8,"column_end":14},"name":"double","qualname":"::weierstrass::double","value":"pub fn double<Fe>(ProjectivePoint<Fe>, Fe) -> ProjectivePoint<Fe> where\nFe: Field","parent":null,"children":[],"decl_id":null,"docs":" Implements the exception-free point doubling formula from\n [Renes-Costello-Batina 2015] (Algorithm 6).","sig":null,"attributes":[{"value":"/ Implements the exception-free point doubling formula from","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/weierstrass.rs","byte_start":31120,"byte_end":31181,"line_start":93,"line_end":93,"column_start":1,"column_end":62}},{"value":"/ [Renes-Costello-Batina 2015] (Algorithm 6).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/weierstrass.rs","byte_start":31182,"byte_end":31229,"line_start":94,"line_end":94,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/weierstrass.rs","byte_start":31230,"byte_end":31233,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ [Renes-Costello-Batina 2015]: https://eprint.iacr.org/2015/1060","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/weierstrass.rs","byte_start":31234,"byte_end":31301,"line_start":96,"line_end":96,"column_start":1,"column_end":68}},{"value":"inline(always)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/weierstrass.rs","byte_start":31302,"byte_end":31319,"line_start":97,"line_end":97,"column_start":1,"column_end":18}}]},{"kind":"Type","id":{"krate":0,"index":159},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/error.rs","byte_start":32649,"byte_end":32655,"line_start":9,"line_end":9,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"core::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Result type with the `elliptic-curve` crate's [`Error`] type.\n","sig":null,"attributes":[{"value":"/ Result type with the `elliptic-curve` crate's [`Error`] type.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/error.rs","byte_start":32574,"byte_end":32639,"line_start":8,"line_end":8,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1064},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/error.rs","byte_start":32777,"byte_end":32782,"line_start":13,"line_end":13,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" Elliptic curve errors.\n","sig":null,"attributes":[{"value":"/ Elliptic curve errors.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/error.rs","byte_start":32694,"byte_end":32720,"line_start":11,"line_end":11,"column_start":1,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":185},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/point.rs","byte_start":33508,"byte_end":33525,"line_start":7,"line_end":7,"column_start":11,"column_end":28},"name":"AffineXCoordinate","qualname":"::point::AffineXCoordinate","value":"AffineXCoordinate<C: Curve>","parent":null,"children":[{"krate":0,"index":187}],"decl_id":null,"docs":" Obtain the affine x-coordinate of an elliptic curve point.\n","sig":null,"attributes":[{"value":"/ Obtain the affine x-coordinate of an elliptic curve point.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/point.rs","byte_start":33435,"byte_end":33497,"line_start":6,"line_end":6,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/point.rs","byte_start":33612,"byte_end":33613,"line_start":9,"line_end":9,"column_start":8,"column_end":9},"name":"x","qualname":"::point::AffineXCoordinate::x","value":"pub fn x(&Self) -> FieldBytes<C>","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":" Get the affine x-coordinate as a serialized field element.\n","sig":null,"attributes":[{"value":"/ Get the affine x-coordinate as a serialized field element.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/point.rs","byte_start":33542,"byte_end":33604,"line_start":8,"line_end":8,"column_start":5,"column_end":67}}]},{"kind":"Trait","id":{"krate":0,"index":188},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/point.rs","byte_start":33849,"byte_end":33864,"line_start":16,"line_end":16,"column_start":11,"column_end":26},"name":"DecompressPoint","qualname":"::point::DecompressPoint","value":"DecompressPoint<C: Curve>: Sized","parent":null,"children":[{"krate":0,"index":190}],"decl_id":null,"docs":" Decompress an elliptic curve point.","sig":null,"attributes":[{"value":"/ Decompress an elliptic curve point.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/point.rs","byte_start":33642,"byte_end":33681,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/point.rs","byte_start":33682,"byte_end":33685,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Point decompression recovers an original curve point from its x-coordinate","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/point.rs","byte_start":33686,"byte_end":33764,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ and a boolean flag indicating whether or not the y-coordinate is odd.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/point.rs","byte_start":33765,"byte_end":33838,"line_start":15,"line_end":15,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/point.rs","byte_start":33946,"byte_end":33956,"line_start":18,"line_end":18,"column_start":8,"column_end":18},"name":"decompress","qualname":"::point::DecompressPoint::decompress","value":"pub fn decompress(&FieldBytes<C>, Choice) -> CtOption<Self>","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Attempt to decompress an elliptic curve point.\n","sig":null,"attributes":[{"value":"/ Attempt to decompress an elliptic curve point.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/point.rs","byte_start":33888,"byte_end":33938,"line_start":17,"line_end":17,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":191},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/point.rs","byte_start":34236,"byte_end":34250,"line_start":25,"line_end":25,"column_start":11,"column_end":25},"name":"DecompactPoint","qualname":"::point::DecompactPoint","value":"DecompactPoint<C: Curve>: Sized","parent":null,"children":[{"krate":0,"index":193}],"decl_id":null,"docs":" Decompact an elliptic curve point from an x-coordinate.","sig":null,"attributes":[{"value":"/ Decompact an elliptic curve point from an x-coordinate.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/point.rs","byte_start":34016,"byte_end":34075,"line_start":21,"line_end":21,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/point.rs","byte_start":34076,"byte_end":34079,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Decompaction relies on properties of specially-generated keys but provides","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/point.rs","byte_start":34080,"byte_end":34158,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ a more compact representation than standard point compression.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/point.rs","byte_start":34159,"byte_end":34225,"line_start":24,"line_end":24,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/point.rs","byte_start":34330,"byte_end":34339,"line_start":27,"line_end":27,"column_start":8,"column_end":17},"name":"decompact","qualname":"::point::DecompactPoint::decompact","value":"pub fn decompact(&FieldBytes<C>) -> CtOption<Self>","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":" Attempt to decompact an elliptic curve point\n","sig":null,"attributes":[{"value":"/ Attempt to decompact an elliptic curve point","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/point.rs","byte_start":34274,"byte_end":34322,"line_start":26,"line_end":26,"column_start":5,"column_end":53}}]},{"kind":"Trait","id":{"krate":0,"index":194},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/point.rs","byte_start":34423,"byte_end":34439,"line_start":31,"line_end":31,"column_start":11,"column_end":27},"name":"PointCompression","qualname":"::point::PointCompression","value":"PointCompression","parent":null,"children":[{"krate":0,"index":195}],"decl_id":null,"docs":" Point compression settings.\n","sig":null,"attributes":[{"value":"/ Point compression settings.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/point.rs","byte_start":34381,"byte_end":34412,"line_start":30,"line_end":30,"column_start":1,"column_end":32}}]},{"kind":"Const","id":{"krate":0,"index":195},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/point.rs","byte_start":34508,"byte_end":34523,"line_start":33,"line_end":33,"column_start":11,"column_end":26},"name":"COMPRESS_POINTS","qualname":"::point::PointCompression::COMPRESS_POINTS","value":"bool","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":" Should point compression be applied by default?\n","sig":null,"attributes":[{"value":"/ Should point compression be applied by default?","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/point.rs","byte_start":34446,"byte_end":34497,"line_start":32,"line_end":32,"column_start":5,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":196},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/point.rs","byte_start":34575,"byte_end":34590,"line_start":37,"line_end":37,"column_start":11,"column_end":26},"name":"PointCompaction","qualname":"::point::PointCompaction","value":"PointCompaction","parent":null,"children":[{"krate":0,"index":197}],"decl_id":null,"docs":" Point compaction settings.\n","sig":null,"attributes":[{"value":"/ Point compaction settings.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/point.rs","byte_start":34534,"byte_end":34564,"line_start":36,"line_end":36,"column_start":1,"column_end":31}}]},{"kind":"Const","id":{"krate":0,"index":197},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/point.rs","byte_start":34658,"byte_end":34672,"line_start":39,"line_end":39,"column_start":11,"column_end":25},"name":"COMPACT_POINTS","qualname":"::point::PointCompaction::COMPACT_POINTS","value":"bool","parent":{"krate":0,"index":196},"children":[],"decl_id":null,"docs":" Should point compaction be applied by default?\n","sig":null,"attributes":[{"value":"/ Should point compaction be applied by default?","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/point.rs","byte_start":34597,"byte_end":34647,"line_start":38,"line_end":38,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":1077},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":37017,"byte_end":37027,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"ScalarCore","qualname":"::scalar::core::ScalarCore","value":"ScalarCore {  }","parent":null,"children":[{"krate":0,"index":1079}],"decl_id":null,"docs":" Generic scalar type with core functionality.","sig":null,"attributes":[{"value":"/ Generic scalar type with core functionality.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":36277,"byte_end":36325,"line_start":31,"line_end":31,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":36326,"byte_end":36329,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This type provides a baseline level of scalar arithmetic functionality","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":36330,"byte_end":36404,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ which is always available for all curves, regardless of if they implement","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":36405,"byte_end":36482,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ any arithmetic traits.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":36483,"byte_end":36509,"line_start":35,"line_end":35,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":36510,"byte_end":36513,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # `serde` support","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":36514,"byte_end":36535,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":36536,"byte_end":36539,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ When the optional `serde` feature of this create is enabled, [`Serialize`]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":36540,"byte_end":36618,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ and [`Deserialize`] impls are provided for this type.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":36619,"byte_end":36676,"line_start":40,"line_end":40,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":36677,"byte_end":36680,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ The serialization is a fixed-width big endian encoding. When used with","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":36681,"byte_end":36755,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ textual formats, the binary data is encoded as hexadecimal.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":36756,"byte_end":36819,"line_start":43,"line_end":43,"column_start":1,"column_end":64}}]},{"kind":"Const","id":{"krate":0,"index":301},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":37179,"byte_end":37183,"line_start":57,"line_end":57,"column_start":15,"column_end":19},"name":"ZERO","qualname":"::scalar::core::ScalarCore::<C>::ZERO","value":"Self","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" Zero scalar.\n","sig":null,"attributes":[{"value":"/ Zero scalar.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":37148,"byte_end":37164,"line_start":56,"line_end":56,"column_start":5,"column_end":21}}]},{"kind":"Const","id":{"krate":0,"index":302},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":37284,"byte_end":37287,"line_start":62,"line_end":62,"column_start":15,"column_end":18},"name":"ONE","qualname":"::scalar::core::ScalarCore::<C>::ONE","value":"Self","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" Multiplicative identity.\n","sig":null,"attributes":[{"value":"/ Multiplicative identity.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":37241,"byte_end":37269,"line_start":61,"line_end":61,"column_start":5,"column_end":33}}]},{"kind":"Const","id":{"krate":0,"index":303},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":37378,"byte_end":37385,"line_start":67,"line_end":67,"column_start":15,"column_end":22},"name":"MODULUS","qualname":"::scalar::core::ScalarCore::<C>::MODULUS","value":"C::UInt","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" Scalar modulus.\n","sig":null,"attributes":[{"value":"/ Scalar modulus.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":37344,"byte_end":37363,"line_start":66,"line_end":66,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":37461,"byte_end":37467,"line_start":70,"line_end":70,"column_start":12,"column_end":18},"name":"random","qualname":"<ScalarCore<C>>::random","value":"pub fn random<impl CryptoRng + RngCore: CryptoRng +\nRngCore>(impl CryptoRng + RngCore) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generate a random [`ScalarCore`].\n","sig":null,"attributes":[{"value":"/ Generate a random [`ScalarCore`].","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":37412,"byte_end":37449,"line_start":69,"line_end":69,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":37686,"byte_end":37689,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"new","qualname":"<ScalarCore<C>>::new","value":"pub fn new(C::UInt) -> CtOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new scalar from [`Curve::UInt`].\n","sig":null,"attributes":[{"value":"/ Create a new scalar from [`Curve::UInt`].","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":37629,"byte_end":37674,"line_start":76,"line_end":76,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":37868,"byte_end":37881,"line_start":82,"line_end":82,"column_start":12,"column_end":25},"name":"from_be_bytes","qualname":"<ScalarCore<C>>::from_be_bytes","value":"pub fn from_be_bytes(FieldBytes<C>) -> CtOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Decode [`ScalarCore`] from big endian bytes.\n","sig":null,"attributes":[{"value":"/ Decode [`ScalarCore`] from big endian bytes.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":37808,"byte_end":37856,"line_start":81,"line_end":81,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":38056,"byte_end":38069,"line_start":87,"line_end":87,"column_start":12,"column_end":25},"name":"from_be_slice","qualname":"<ScalarCore<C>>::from_be_slice","value":"pub fn from_be_slice(&[u8]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Decode [`ScalarCore`] from a big endian byte slice.\n","sig":null,"attributes":[{"value":"/ Decode [`ScalarCore`] from a big endian byte slice.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":37989,"byte_end":38044,"line_start":86,"line_end":86,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":38371,"byte_end":38384,"line_start":96,"line_end":96,"column_start":12,"column_end":25},"name":"from_le_bytes","qualname":"<ScalarCore<C>>::from_le_bytes","value":"pub fn from_le_bytes(FieldBytes<C>) -> CtOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Decode [`ScalarCore`] from little endian bytes.\n","sig":null,"attributes":[{"value":"/ Decode [`ScalarCore`] from little endian bytes.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":38308,"byte_end":38359,"line_start":95,"line_end":95,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":38562,"byte_end":38575,"line_start":101,"line_end":101,"column_start":12,"column_end":25},"name":"from_le_slice","qualname":"<ScalarCore<C>>::from_le_slice","value":"pub fn from_le_slice(&[u8]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Decode [`ScalarCore`] from a little endian byte slice.\n","sig":null,"attributes":[{"value":"/ Decode [`ScalarCore`] from a little endian byte slice.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":38492,"byte_end":38550,"line_start":100,"line_end":100,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":38857,"byte_end":38864,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"as_uint","qualname":"<ScalarCore<C>>::as_uint","value":"pub fn as_uint(&Self) -> &C::UInt","parent":null,"children":[],"decl_id":null,"docs":" Borrow the inner `C::UInt`.\n","sig":null,"attributes":[{"value":"/ Borrow the inner `C::UInt`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":38814,"byte_end":38845,"line_start":109,"line_end":109,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":38967,"byte_end":38975,"line_start":115,"line_end":115,"column_start":12,"column_end":20},"name":"as_limbs","qualname":"<ScalarCore<C>>::as_limbs","value":"pub fn as_limbs(&Self) -> &[Limb]","parent":null,"children":[],"decl_id":null,"docs":" Borrow the inner limbs as a slice.\n","sig":null,"attributes":[{"value":"/ Borrow the inner limbs as a slice.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":38917,"byte_end":38955,"line_start":114,"line_end":114,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":39094,"byte_end":39101,"line_start":120,"line_end":120,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<ScalarCore<C>>::is_zero","value":"pub fn is_zero(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Is this [`ScalarCore`] value equal to zero?\n","sig":null,"attributes":[{"value":"/ Is this [`ScalarCore`] value equal to zero?","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":39035,"byte_end":39082,"line_start":119,"line_end":119,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":39211,"byte_end":39218,"line_start":125,"line_end":125,"column_start":12,"column_end":19},"name":"is_even","qualname":"<ScalarCore<C>>::is_even","value":"pub fn is_even(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Is this [`ScalarCore`] value even?\n","sig":null,"attributes":[{"value":"/ Is this [`ScalarCore`] value even?","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":39161,"byte_end":39199,"line_start":124,"line_end":124,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":39327,"byte_end":39333,"line_start":130,"line_end":130,"column_start":12,"column_end":18},"name":"is_odd","qualname":"<ScalarCore<C>>::is_odd","value":"pub fn is_odd(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Is this [`ScalarCore`] value odd?\n","sig":null,"attributes":[{"value":"/ Is this [`ScalarCore`] value odd?","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":39278,"byte_end":39315,"line_start":129,"line_end":129,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":39450,"byte_end":39461,"line_start":135,"line_end":135,"column_start":12,"column_end":23},"name":"to_be_bytes","qualname":"<ScalarCore<C>>::to_be_bytes","value":"pub fn to_be_bytes(Self) -> FieldBytes<C>","parent":null,"children":[],"decl_id":null,"docs":" Encode [`ScalarCore`] as big endian bytes.\n","sig":null,"attributes":[{"value":"/ Encode [`ScalarCore`] as big endian bytes.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":39392,"byte_end":39438,"line_start":134,"line_end":134,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":39597,"byte_end":39608,"line_start":140,"line_end":140,"column_start":12,"column_end":23},"name":"to_le_bytes","qualname":"<ScalarCore<C>>::to_le_bytes","value":"pub fn to_le_bytes(Self) -> FieldBytes<C>","parent":null,"children":[],"decl_id":null,"docs":" Encode [`ScalarCore`] as little endian bytes.\n","sig":null,"attributes":[{"value":"/ Encode [`ScalarCore`] as little endian bytes.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":39536,"byte_end":39585,"line_start":139,"line_end":139,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1091},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":46312,"byte_end":46325,"line_start":32,"line_end":32,"column_start":12,"column_end":25},"name":"NonZeroScalar","qualname":"::scalar::nonzero::NonZeroScalar","value":"NonZeroScalar {  }","parent":null,"children":[{"krate":0,"index":1093}],"decl_id":null,"docs":" Non-zero scalar type.","sig":null,"attributes":[{"value":"/ Non-zero scalar type.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":45856,"byte_end":45881,"line_start":22,"line_end":22,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":45882,"byte_end":45885,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This type ensures that its value is not zero, ala `core::num::NonZero*`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":45886,"byte_end":45962,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/ To do this, the generic `S` type must impl both `Default` and","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":45963,"byte_end":46028,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/ `ConstantTimeEq`, with the requirement that `S::default()` returns 0.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":46029,"byte_end":46102,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":46103,"byte_end":46106,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the context of ECC, it's useful for ensuring that scalar multiplication","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":46107,"byte_end":46185,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/ cannot result in the point at infinity.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":46186,"byte_end":46229,"line_start":29,"line_end":29,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":46516,"byte_end":46522,"line_start":44,"line_end":44,"column_start":12,"column_end":18},"name":"random","qualname":"<NonZeroScalar<C>>::random","value":"pub fn random<impl CryptoRng + RngCore: CryptoRng +\nRngCore>(impl CryptoRng + RngCore) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generate a random `NonZeroScalar`.\n","sig":null,"attributes":[{"value":"/ Generate a random `NonZeroScalar`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":46466,"byte_end":46504,"line_start":43,"line_end":43,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":47008,"byte_end":47011,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"new","qualname":"<NonZeroScalar<C>>::new","value":"pub fn new(Scalar<C>) -> CtOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a [`NonZeroScalar`] from a scalar.\n","sig":null,"attributes":[{"value":"/ Create a [`NonZeroScalar`] from a scalar.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":46951,"byte_end":46996,"line_start":55,"line_end":55,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":47206,"byte_end":47215,"line_start":61,"line_end":61,"column_start":12,"column_end":21},"name":"from_repr","qualname":"<NonZeroScalar<C>>::from_repr","value":"pub fn from_repr(FieldBytes<C>) -> CtOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Decode a [`NonZeroScalar`] from a big endian-serialized field element.\n","sig":null,"attributes":[{"value":"/ Decode a [`NonZeroScalar`] from a big endian-serialized field element.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":47120,"byte_end":47194,"line_start":60,"line_end":60,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":47385,"byte_end":47394,"line_start":66,"line_end":66,"column_start":12,"column_end":21},"name":"from_uint","qualname":"<NonZeroScalar<C>>::from_uint","value":"pub fn from_uint(C::UInt) -> CtOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a [`NonZeroScalar`] from a `C::UInt`.\n","sig":null,"attributes":[{"value":"/ Create a [`NonZeroScalar`] from a `C::UInt`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":47325,"byte_end":47373,"line_start":65,"line_end":65,"column_start":5,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":600},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar.rs","byte_start":35014,"byte_end":35020,"line_start":16,"line_end":16,"column_start":10,"column_end":16},"name":"Scalar","qualname":"::scalar::Scalar","value":"<C as ScalarArithmetic>::Scalar","parent":null,"children":[],"decl_id":null,"docs":" Scalar field element for a particular elliptic curve.\n","sig":null,"attributes":[{"value":"/ Scalar field element for a particular elliptic curve.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar.rs","byte_start":34862,"byte_end":34919,"line_start":13,"line_end":13,"column_start":1,"column_end":58}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar.rs","byte_start":34920,"byte_end":34950,"line_start":14,"line_end":14,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":602},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar.rs","byte_start":35473,"byte_end":35479,"line_start":29,"line_end":29,"column_start":11,"column_end":17},"name":"IsHigh","qualname":"::scalar::IsHigh","value":"IsHigh","parent":null,"children":[{"krate":0,"index":603}],"decl_id":null,"docs":" Is this scalar greater than n / 2?","sig":null,"attributes":[{"value":"/ Is this scalar greater than n / 2?","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar.rs","byte_start":35286,"byte_end":35324,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar.rs","byte_start":35325,"byte_end":35328,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Returns","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar.rs","byte_start":35329,"byte_end":35342,"line_start":25,"line_end":25,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar.rs","byte_start":35343,"byte_end":35346,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ - For scalars 0 through n / 2: `Choice::from(0)`","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar.rs","byte_start":35347,"byte_end":35399,"line_start":27,"line_end":27,"column_start":1,"column_end":53}},{"value":"/ - For scalars (n / 2) + 1 through n - 1: `Choice::from(1)`","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar.rs","byte_start":35400,"byte_end":35462,"line_start":28,"line_end":28,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar.rs","byte_start":35544,"byte_end":35551,"line_start":31,"line_end":31,"column_start":8,"column_end":15},"name":"is_high","qualname":"::scalar::IsHigh::is_high","value":"pub fn is_high(&Self) -> Choice","parent":{"krate":0,"index":602},"children":[],"decl_id":null,"docs":" Is this scalar greater than or equal to n / 2?\n","sig":null,"attributes":[{"value":"/ Is this scalar greater than or equal to n / 2?","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar.rs","byte_start":35486,"byte_end":35536,"line_start":30,"line_end":30,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":1097},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":56584,"byte_end":56593,"line_start":84,"line_end":84,"column_start":12,"column_end":21},"name":"SecretKey","qualname":"::secret_key::SecretKey","value":"SecretKey {  }","parent":null,"children":[{"krate":0,"index":1099}],"decl_id":null,"docs":" Elliptic curve secret keys.","sig":null,"attributes":[{"value":"/ Elliptic curve secret keys.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":55678,"byte_end":55709,"line_start":60,"line_end":60,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":55710,"byte_end":55713,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ This type wraps a secret scalar value, helping to prevent accidental","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":55714,"byte_end":55786,"line_start":62,"line_end":62,"column_start":1,"column_end":73}},{"value":"/ exposure and securely erasing the value from memory when dropped.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":55787,"byte_end":55856,"line_start":63,"line_end":63,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":55857,"byte_end":55860,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # Parsing PKCS#8 Keys","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":55861,"byte_end":55886,"line_start":65,"line_end":65,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":55887,"byte_end":55890,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ PKCS#8 is a commonly used format for encoding secret keys (especially ones","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":55891,"byte_end":55969,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ generated by OpenSSL).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":55970,"byte_end":55996,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":55997,"byte_end":56000,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ Keys in PKCS#8 format are either binary (ASN.1 BER/DER), or PEM encoded","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":56001,"byte_end":56076,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ (ASCII) and begin with the following:","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":56077,"byte_end":56118,"line_start":71,"line_end":71,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":56119,"byte_end":56122,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":56123,"byte_end":56134,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/ -----BEGIN PRIVATE KEY-----","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":56135,"byte_end":56166,"line_start":74,"line_end":74,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":56167,"byte_end":56174,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":56175,"byte_end":56178,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ To decode an elliptic curve private key from PKCS#8, enable the `pkcs8`","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":56179,"byte_end":56254,"line_start":77,"line_end":77,"column_start":1,"column_end":76}},{"value":"/ feature of this crate (or the `pkcs8` feature of a specific RustCrypto","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":56255,"byte_end":56329,"line_start":78,"line_end":78,"column_start":1,"column_end":75}},{"value":"/ elliptic curve crate) and use the [`DecodePrivateKey`]  trait to parse it.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":56330,"byte_end":56408,"line_start":79,"line_end":79,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":56409,"byte_end":56412,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ When the `pem` feature of this crate (or a specific RustCrypto elliptic","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":56413,"byte_end":56488,"line_start":81,"line_end":81,"column_start":1,"column_end":76}},{"value":"/ curve crate) is enabled, a [`FromStr`] impl is also available.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":56489,"byte_end":56555,"line_start":82,"line_end":82,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":56844,"byte_end":56850,"line_start":96,"line_end":96,"column_start":12,"column_end":18},"name":"random","qualname":"<SecretKey<C>>::random","value":"pub fn random<impl CryptoRng + RngCore: CryptoRng +\nRngCore>(impl CryptoRng + RngCore) -> Self where C: ProjectiveArithmetic","parent":null,"children":[],"decl_id":null,"docs":" Generate a random [`SecretKey`].\n","sig":null,"attributes":[{"value":"/ Generate a random [`SecretKey`].","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":56703,"byte_end":56739,"line_start":93,"line_end":93,"column_start":5,"column_end":41}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":56744,"byte_end":56774,"line_start":94,"line_end":94,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":57094,"byte_end":57097,"line_start":106,"line_end":106,"column_start":12,"column_end":15},"name":"new","qualname":"<SecretKey<C>>::new","value":"pub fn new(ScalarCore<C>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new secret key from a scalar value.\n","sig":null,"attributes":[{"value":"/ Create a new secret key from a scalar value.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":57034,"byte_end":57082,"line_start":105,"line_end":105,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":57370,"byte_end":57384,"line_start":117,"line_end":117,"column_start":12,"column_end":26},"name":"as_scalar_core","qualname":"<SecretKey<C>>::as_scalar_core","value":"pub fn as_scalar_core(&Self) -> &ScalarCore<C>","parent":null,"children":[],"decl_id":null,"docs":" Borrow the inner secret [`ScalarCore`] value.","sig":null,"attributes":[{"value":"/ Borrow the inner secret [`ScalarCore`] value.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":57173,"byte_end":57222,"line_start":110,"line_end":110,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":57227,"byte_end":57230,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # ⚠️ Warning","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":57235,"byte_end":57255,"line_start":112,"line_end":112,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":57260,"byte_end":57263,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ This value is key material.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":57268,"byte_end":57299,"line_start":114,"line_end":114,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":57304,"byte_end":57307,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Please treat it with the care it deserves!","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":57312,"byte_end":57358,"line_start":116,"line_end":116,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":57740,"byte_end":57757,"line_start":130,"line_end":130,"column_start":12,"column_end":29},"name":"to_nonzero_scalar","qualname":"<SecretKey<C>>::to_nonzero_scalar","value":"pub fn to_nonzero_scalar(&Self) -> NonZeroScalar<C> where C: Curve +\nProjectiveArithmetic","parent":null,"children":[],"decl_id":null,"docs":" Get the secret [`NonZeroScalar`] value for this key.","sig":null,"attributes":[{"value":"/ Get the secret [`NonZeroScalar`] value for this key.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":57443,"byte_end":57499,"line_start":121,"line_end":121,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":57504,"byte_end":57507,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # ⚠️ Warning","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":57512,"byte_end":57532,"line_start":123,"line_end":123,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":57537,"byte_end":57540,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ This value is key material.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":57545,"byte_end":57576,"line_start":125,"line_end":125,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":57581,"byte_end":57584,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ Please treat it with the care it deserves!","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":57589,"byte_end":57635,"line_start":127,"line_end":127,"column_start":5,"column_end":51}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":57640,"byte_end":57670,"line_start":128,"line_end":128,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":58040,"byte_end":58050,"line_start":140,"line_end":140,"column_start":12,"column_end":22},"name":"public_key","qualname":"<SecretKey<C>>::public_key","value":"pub fn public_key(&Self) -> PublicKey<C> where C: Curve + ProjectiveArithmetic","parent":null,"children":[],"decl_id":null,"docs":" Get the [`PublicKey`] which corresponds to this secret key\n","sig":null,"attributes":[{"value":"/ Get the [`PublicKey`] which corresponds to this secret key","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":57873,"byte_end":57935,"line_start":137,"line_end":137,"column_start":5,"column_end":67}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":57940,"byte_end":57970,"line_start":138,"line_end":138,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":58277,"byte_end":58290,"line_start":148,"line_end":148,"column_start":12,"column_end":25},"name":"from_be_bytes","qualname":"<SecretKey<C>>::from_be_bytes","value":"pub fn from_be_bytes(&[u8]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize raw secret scalar as a big endian integer.\n","sig":null,"attributes":[{"value":"/ Deserialize raw secret scalar as a big endian integer.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":58207,"byte_end":58265,"line_start":147,"line_end":147,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":58758,"byte_end":58769,"line_start":166,"line_end":166,"column_start":12,"column_end":23},"name":"to_be_bytes","qualname":"<SecretKey<C>>::to_be_bytes","value":"pub fn to_be_bytes(&Self) -> FieldBytes<C>","parent":null,"children":[],"decl_id":null,"docs":" Serialize raw secret scalar as a big endian integer.\n","sig":null,"attributes":[{"value":"/ Serialize raw secret scalar as a big endian integer.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":58690,"byte_end":58746,"line_start":165,"line_end":165,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":59017,"byte_end":59030,"line_start":173,"line_end":173,"column_start":12,"column_end":25},"name":"from_sec1_der","qualname":"<SecretKey<C>>::from_sec1_der","value":"pub fn from_sec1_der(&[u8]) -> Result<Self> where C: Curve +\nValidatePublicKey, FieldSize<C>: ModulusSize","parent":null,"children":[],"decl_id":null,"docs":" Deserialize secret key encoded in the SEC1 ASN.1 DER `ECPrivateKey` format.\n","sig":null,"attributes":[{"value":"/ Deserialize secret key encoded in the SEC1 ASN.1 DER `ECPrivateKey` format.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":58840,"byte_end":58919,"line_start":170,"line_end":170,"column_start":5,"column_end":84}},{"value":"cfg(all(feature = \"sec1\"))","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":58924,"byte_end":58953,"line_start":171,"line_end":171,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":59550,"byte_end":59561,"line_start":189,"line_end":189,"column_start":12,"column_end":23},"name":"to_sec1_der","qualname":"<SecretKey<C>>::to_sec1_der","value":"pub fn to_sec1_der(&Self) -> der::Result<Zeroizing<Vec<u8>>> where C: Curve +\nProjectiveArithmetic, AffinePoint<C>: FromEncodedPoint<C> + ToEncodedPoint<C>,\nFieldSize<C>: ModulusSize","parent":null,"children":[],"decl_id":null,"docs":" Serialize secret key in the SEC1 ASN.1 DER `ECPrivateKey` format.\n","sig":null,"attributes":[{"value":"/ Serialize secret key in the SEC1 ASN.1 DER `ECPrivateKey` format.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":59270,"byte_end":59339,"line_start":183,"line_end":183,"column_start":5,"column_end":74}},{"value":"cfg(all(feature = \"alloc\", feature = \"arithmetic\", feature = \"sec1\"))","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":59344,"byte_end":59416,"line_start":184,"line_end":184,"column_start":5,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":820},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":68917,"byte_end":68933,"line_start":12,"line_end":12,"column_start":11,"column_end":27},"name":"AffineArithmetic","qualname":"::arithmetic::AffineArithmetic","value":"AffineArithmetic: Curve + ScalarArithmetic","parent":null,"children":[{"krate":0,"index":821}],"decl_id":null,"docs":" Elliptic curve with affine arithmetic implementation.\n","sig":null,"attributes":[{"value":"/ Elliptic curve with affine arithmetic implementation.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":68795,"byte_end":68852,"line_start":10,"line_end":10,"column_start":1,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":821},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":69023,"byte_end":69034,"line_start":14,"line_end":14,"column_start":10,"column_end":21},"name":"AffinePoint","qualname":"::arithmetic::AffineArithmetic::AffinePoint","value":"type AffinePoint: 'static\n        + AffineXCoordinate<Self>\n        + Copy\n        + Clone\n        + ConditionallySelectable\n        + ConstantTimeEq\n        + Debug\n        + Default\n        + DefaultIsZeroes\n        + Eq\n        + PartialEq\n        + Sized\n        + Send\n        + Sync;","parent":{"krate":0,"index":820},"children":[],"decl_id":null,"docs":" Elliptic curve point in affine coordinates.\n","sig":null,"attributes":[{"value":"/ Elliptic curve point in affine coordinates.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":68966,"byte_end":69013,"line_start":13,"line_end":13,"column_start":5,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":822},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":69449,"byte_end":69469,"line_start":32,"line_end":32,"column_start":11,"column_end":31},"name":"PrimeCurveArithmetic","qualname":"::arithmetic::PrimeCurveArithmetic","value":"PrimeCurveArithmetic: PrimeCurve + ProjectiveArithmetic<ProjectivePoint = Self::CurveGroup>","parent":null,"children":[{"krate":0,"index":823}],"decl_id":null,"docs":" Prime order elliptic curve with projective arithmetic implementation.\n","sig":null,"attributes":[{"value":"/ Prime order elliptic curve with projective arithmetic implementation.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":69311,"byte_end":69384,"line_start":30,"line_end":30,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":823},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":69598,"byte_end":69608,"line_start":36,"line_end":36,"column_start":10,"column_end":20},"name":"CurveGroup","qualname":"::arithmetic::PrimeCurveArithmetic::CurveGroup","value":"type CurveGroup: group::prime::PrimeCurve<Affine = <Self as AffineArithmetic>::AffinePoint>;","parent":{"krate":0,"index":822},"children":[],"decl_id":null,"docs":" Prime order elliptic curve group.\n","sig":null,"attributes":[{"value":"/ Prime order elliptic curve group.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":69551,"byte_end":69588,"line_start":35,"line_end":35,"column_start":5,"column_end":42}}]},{"kind":"Trait","id":{"krate":0,"index":824},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":69815,"byte_end":69835,"line_start":41,"line_end":41,"column_start":11,"column_end":31},"name":"ProjectiveArithmetic","qualname":"::arithmetic::ProjectiveArithmetic","value":"ProjectiveArithmetic: Curve + AffineArithmetic","parent":null,"children":[{"krate":0,"index":825}],"decl_id":null,"docs":" Elliptic curve with projective arithmetic implementation.\n","sig":null,"attributes":[{"value":"/ Elliptic curve with projective arithmetic implementation.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":69689,"byte_end":69750,"line_start":39,"line_end":39,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":825},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":70160,"byte_end":70175,"line_start":53,"line_end":53,"column_start":10,"column_end":25},"name":"ProjectivePoint","qualname":"::arithmetic::ProjectiveArithmetic::ProjectivePoint","value":"type ProjectivePoint: ConditionallySelectable\n        + ConstantTimeEq\n        + Default\n        + DefaultIsZeroes\n        + From<Self::AffinePoint>\n        + Into<Self::AffinePoint>\n        + LinearCombination\n        + group::Curve<AffineRepr = Self::AffinePoint>\n        + group::Group<Scalar = Self::Scalar>;","parent":{"krate":0,"index":824},"children":[],"decl_id":null,"docs":" Elliptic curve point in projective coordinates.","sig":null,"attributes":[{"value":"/ Elliptic curve point in projective coordinates.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":69868,"byte_end":69919,"line_start":42,"line_end":42,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":69924,"byte_end":69927,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Note: the following bounds are provided by [`group::Group`]:","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":69932,"byte_end":69996,"line_start":44,"line_end":44,"column_start":5,"column_end":69}},{"value":"/ - `'static`","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":70001,"byte_end":70016,"line_start":45,"line_end":45,"column_start":5,"column_end":20}},{"value":"/ - [`Copy`]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":70021,"byte_end":70035,"line_start":46,"line_end":46,"column_start":5,"column_end":19}},{"value":"/ - [`Clone`]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":70040,"byte_end":70055,"line_start":47,"line_end":47,"column_start":5,"column_end":20}},{"value":"/ - [`Debug`]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":70060,"byte_end":70075,"line_start":48,"line_end":48,"column_start":5,"column_end":20}},{"value":"/ - [`Eq`]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":70080,"byte_end":70092,"line_start":49,"line_end":49,"column_start":5,"column_end":17}},{"value":"/ - [`Sized`]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":70097,"byte_end":70112,"line_start":50,"line_end":50,"column_start":5,"column_end":20}},{"value":"/ - [`Send`]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":70117,"byte_end":70131,"line_start":51,"line_end":51,"column_start":5,"column_end":19}},{"value":"/ - [`Sync`]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":70136,"byte_end":70150,"line_start":52,"line_end":52,"column_start":5,"column_end":19}}]},{"kind":"Trait","id":{"krate":0,"index":826},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":70589,"byte_end":70605,"line_start":67,"line_end":67,"column_start":11,"column_end":27},"name":"ScalarArithmetic","qualname":"::arithmetic::ScalarArithmetic","value":"ScalarArithmetic: Curve","parent":null,"children":[{"krate":0,"index":827}],"decl_id":null,"docs":" Scalar arithmetic.\n","sig":null,"attributes":[{"value":"/ Scalar arithmetic.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":70471,"byte_end":70493,"line_start":64,"line_end":64,"column_start":1,"column_end":23}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":70494,"byte_end":70524,"line_start":65,"line_end":65,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":827},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":70931,"byte_end":70937,"line_start":80,"line_end":80,"column_start":10,"column_end":16},"name":"Scalar","qualname":"::arithmetic::ScalarArithmetic::Scalar","value":"type Scalar: DefaultIsZeroes\n        + From<ScalarCore<Self>>\n        + Into<FieldBytes<Self>>\n        + Into<Self::UInt>\n        + IsHigh\n        + ff::Field\n        + ff::PrimeField<Repr = FieldBytes<Self>>;","parent":{"krate":0,"index":826},"children":[],"decl_id":null,"docs":" Scalar field type.","sig":null,"attributes":[{"value":"/ Scalar field type.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":70619,"byte_end":70641,"line_start":68,"line_end":68,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":70646,"byte_end":70649,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Note: the following bounds are provided by [`ff::Field`]:","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":70654,"byte_end":70715,"line_start":70,"line_end":70,"column_start":5,"column_end":66}},{"value":"/ - `'static`","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":70720,"byte_end":70735,"line_start":71,"line_end":71,"column_start":5,"column_end":20}},{"value":"/ - [`Copy`]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":70740,"byte_end":70754,"line_start":72,"line_end":72,"column_start":5,"column_end":19}},{"value":"/ - [`Clone`]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":70759,"byte_end":70774,"line_start":73,"line_end":73,"column_start":5,"column_end":20}},{"value":"/ - [`ConditionallySelectable`]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":70779,"byte_end":70812,"line_start":74,"line_end":74,"column_start":5,"column_end":38}},{"value":"/ - [`ConstantTimeEq`]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":70817,"byte_end":70841,"line_start":75,"line_end":75,"column_start":5,"column_end":29}},{"value":"/ - [`Debug`]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":70846,"byte_end":70861,"line_start":76,"line_end":76,"column_start":5,"column_end":20}},{"value":"/ - [`Default`]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":70866,"byte_end":70883,"line_start":77,"line_end":77,"column_start":5,"column_end":22}},{"value":"/ - [`Send`]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":70888,"byte_end":70902,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/ - [`Sync`]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":70907,"byte_end":70921,"line_start":79,"line_end":79,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":1103},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":73555,"byte_end":73564,"line_start":78,"line_end":78,"column_start":12,"column_end":21},"name":"PublicKey","qualname":"::public_key::PublicKey","value":"PublicKey {  }","parent":null,"children":[{"krate":0,"index":1105}],"decl_id":null,"docs":" Elliptic curve public keys.","sig":null,"attributes":[{"value":"/ Elliptic curve public keys.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":72047,"byte_end":72078,"line_start":40,"line_end":40,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":72079,"byte_end":72082,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This is a wrapper type for [`AffinePoint`] which ensures an inner","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":72083,"byte_end":72152,"line_start":42,"line_end":42,"column_start":1,"column_end":70}},{"value":"/ non-identity point and provides a common place to handle encoding/decoding.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":72153,"byte_end":72232,"line_start":43,"line_end":43,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":72233,"byte_end":72236,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # Parsing \"SPKI\" Keys","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":72237,"byte_end":72262,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":72263,"byte_end":72266,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ X.509 `SubjectPublicKeyInfo` (SPKI) is a commonly used format for encoding","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":72267,"byte_end":72345,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"/ public keys, notably public keys corresponding to PKCS#8 private keys.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":72346,"byte_end":72420,"line_start":48,"line_end":48,"column_start":1,"column_end":75}},{"value":"/ (especially ones generated by OpenSSL).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":72421,"byte_end":72464,"line_start":49,"line_end":49,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":72465,"byte_end":72468,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Keys in SPKI format are either binary (ASN.1 BER/DER), or PEM encoded","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":72469,"byte_end":72542,"line_start":51,"line_end":51,"column_start":1,"column_end":74}},{"value":"/ (ASCII) and begin with the following:","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":72543,"byte_end":72584,"line_start":52,"line_end":52,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":72585,"byte_end":72588,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":72589,"byte_end":72600,"line_start":54,"line_end":54,"column_start":1,"column_end":12}},{"value":"/ -----BEGIN PUBLIC KEY-----","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":72601,"byte_end":72631,"line_start":55,"line_end":55,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":72632,"byte_end":72639,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":72640,"byte_end":72643,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ To decode an elliptic curve public key from SPKI, enable the `pkcs8`","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":72644,"byte_end":72716,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/ feature of this crate (or the `pkcs8` feature of a specific RustCrypto","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":72717,"byte_end":72791,"line_start":59,"line_end":59,"column_start":1,"column_end":75}},{"value":"/ elliptic curve crate) and use the","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":72792,"byte_end":72829,"line_start":60,"line_end":60,"column_start":1,"column_end":38}},{"value":"/ [`elliptic_curve::pkcs8::DecodePublicKey`][`pkcs8::DecodePublicKey`]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":72830,"byte_end":72902,"line_start":61,"line_end":61,"column_start":1,"column_end":73}},{"value":"/ trait to parse it.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":72903,"byte_end":72925,"line_start":62,"line_end":62,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":72926,"byte_end":72929,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ When the `pem` feature of this crate (or a specific RustCrypto elliptic","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":72930,"byte_end":73005,"line_start":64,"line_end":64,"column_start":1,"column_end":76}},{"value":"/ curve crate) is enabled, a [`FromStr`] impl is also available.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":73006,"byte_end":73072,"line_start":65,"line_end":65,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":73073,"byte_end":73076,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # `serde` support","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":73077,"byte_end":73098,"line_start":67,"line_end":67,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":73099,"byte_end":73102,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ When the optional `serde` feature of this create is enabled, [`Serialize`]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":73103,"byte_end":73181,"line_start":69,"line_end":69,"column_start":1,"column_end":79}},{"value":"/ and [`Deserialize`] impls are provided for this type.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":73182,"byte_end":73239,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":73240,"byte_end":73243,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ The serialization is binary-oriented and supports ASN.1 DER","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":73244,"byte_end":73307,"line_start":72,"line_end":72,"column_start":1,"column_end":64}},{"value":"/ Subject Public Key Info (SPKI) as the encoding format.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":73308,"byte_end":73366,"line_start":73,"line_end":73,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":73367,"byte_end":73370,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ For a more text-friendly encoding of public keys, use [`JwkEcKey`] instead.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":73371,"byte_end":73450,"line_start":75,"line_end":75,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":73776,"byte_end":73787,"line_start":90,"line_end":90,"column_start":12,"column_end":23},"name":"from_affine","qualname":"<PublicKey<C>>::from_affine","value":"pub fn from_affine(AffinePoint<C>) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Convert an [`AffinePoint`] into a [`PublicKey`]\n","sig":null,"attributes":[{"value":"/ Convert an [`AffinePoint`] into a [`PublicKey`]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":73713,"byte_end":73764,"line_start":89,"line_end":89,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":74128,"byte_end":74146,"line_start":100,"line_end":100,"column_start":12,"column_end":30},"name":"from_secret_scalar","qualname":"<PublicKey<C>>::from_secret_scalar","value":"pub fn from_secret_scalar(&NonZeroScalar<C>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Compute a [`PublicKey`] from a secret [`NonZeroScalar`] value\n (i.e. a secret key represented as a raw scalar value)\n","sig":null,"attributes":[{"value":"/ Compute a [`PublicKey`] from a secret [`NonZeroScalar`] value","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":73989,"byte_end":74054,"line_start":98,"line_end":98,"column_start":5,"column_end":70}},{"value":"/ (i.e. a secret key represented as a raw scalar value)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":74059,"byte_end":74116,"line_start":99,"line_end":99,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":909},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":74691,"byte_end":74706,"line_start":114,"line_end":114,"column_start":12,"column_end":27},"name":"from_sec1_bytes","qualname":"<PublicKey<C>>::from_sec1_bytes","value":"pub fn from_sec1_bytes(&[u8]) -> Result<Self> where C: Curve,\nFieldSize<C>: ModulusSize, AffinePoint<C>: FromEncodedPoint<C> +\nToEncodedPoint<C>","parent":null,"children":[],"decl_id":null,"docs":" Decode [`PublicKey`] (compressed or uncompressed) from the\n `Elliptic-Curve-Point-to-Octet-String` encoding described in\n SEC 1: Elliptic Curve Cryptography (Version 2.0) section\n 2.3.3 (page 10).","sig":null,"attributes":[{"value":"/ Decode [`PublicKey`] (compressed or uncompressed) from the","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":74379,"byte_end":74441,"line_start":107,"line_end":107,"column_start":5,"column_end":67}},{"value":"/ `Elliptic-Curve-Point-to-Octet-String` encoding described in","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":74446,"byte_end":74510,"line_start":108,"line_end":108,"column_start":5,"column_end":69}},{"value":"/ SEC 1: Elliptic Curve Cryptography (Version 2.0) section","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":74515,"byte_end":74575,"line_start":109,"line_end":109,"column_start":5,"column_end":65}},{"value":"/ 2.3.3 (page 10).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":74580,"byte_end":74600,"line_start":110,"line_end":110,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":74605,"byte_end":74608,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ <http://www.secg.org/sec1-v2.pdf>","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":74613,"byte_end":74650,"line_start":112,"line_end":112,"column_start":5,"column_end":42}},{"value":"cfg(feature = \"sec1\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":74655,"byte_end":74679,"line_start":113,"line_end":113,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":75164,"byte_end":75173,"line_start":127,"line_end":127,"column_start":12,"column_end":21},"name":"as_affine","qualname":"<PublicKey<C>>::as_affine","value":"pub fn as_affine(&Self) -> &AffinePoint<C>","parent":null,"children":[],"decl_id":null,"docs":" Borrow the inner [`AffinePoint`] from this [`PublicKey`].","sig":null,"attributes":[{"value":"/ Borrow the inner [`AffinePoint`] from this [`PublicKey`].","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":75028,"byte_end":75089,"line_start":124,"line_end":124,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":75094,"byte_end":75097,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ In ECC, public keys are elliptic curve points.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":75102,"byte_end":75152,"line_start":126,"line_end":126,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":75320,"byte_end":75333,"line_start":132,"line_end":132,"column_start":12,"column_end":25},"name":"to_projective","qualname":"<PublicKey<C>>::to_projective","value":"pub fn to_projective(&Self) -> ProjectivePoint<C>","parent":null,"children":[],"decl_id":null,"docs":" Convert this [`PublicKey`] to a [`ProjectivePoint`] for the given curve\n","sig":null,"attributes":[{"value":"/ Convert this [`PublicKey`] to a [`ProjectivePoint`] for the given curve","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":75233,"byte_end":75308,"line_start":131,"line_end":131,"column_start":5,"column_end":80}}]},{"kind":"Const","id":{"krate":0,"index":1051},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":4504,"byte_end":4517,"line_start":152,"line_end":152,"column_start":11,"column_end":24},"name":"ALGORITHM_OID","qualname":"::ALGORITHM_OID","value":"pkcs8::ObjectIdentifier","parent":null,"children":[],"decl_id":null,"docs":" Algorithm [`ObjectIdentifier`][`pkcs8::ObjectIdentifier`] for elliptic\n curve public key cryptography (`id-ecPublicKey`).","sig":null,"attributes":[{"value":"/ Algorithm [`ObjectIdentifier`][`pkcs8::ObjectIdentifier`] for elliptic","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":4238,"byte_end":4312,"line_start":146,"line_end":146,"column_start":1,"column_end":75}},{"value":"/ curve public key cryptography (`id-ecPublicKey`).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":4313,"byte_end":4366,"line_start":147,"line_end":147,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":4367,"byte_end":4370,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ <http://oid-info.com/get/1.2.840.10045.2.1>","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":4371,"byte_end":4418,"line_start":149,"line_end":149,"column_start":1,"column_end":48}},{"value":"cfg(feature = \"pkcs8\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":4419,"byte_end":4444,"line_start":150,"line_end":150,"column_start":1,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":1052},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":4934,"byte_end":4939,"line_start":163,"line_end":163,"column_start":11,"column_end":16},"name":"Curve","qualname":"::Curve","value":"Curve: 'static + Copy + Clone + Debug + Default + Eq + Ord + Send + Sync","parent":null,"children":[{"krate":0,"index":1053},{"krate":0,"index":1054}],"decl_id":null,"docs":" Elliptic curve.","sig":null,"attributes":[{"value":"/ Elliptic curve.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":4608,"byte_end":4627,"line_start":155,"line_end":155,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":4628,"byte_end":4631,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ This trait is intended to be impl'd by a ZST which represents a concrete","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":4632,"byte_end":4708,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"/ elliptic curve.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":4709,"byte_end":4728,"line_start":158,"line_end":158,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":4729,"byte_end":4732,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ Other traits in this crate which are bounded by [`Curve`] are intended to","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":4733,"byte_end":4810,"line_start":160,"line_end":160,"column_start":1,"column_end":78}},{"value":"/ be impl'd by these ZSTs, facilitating types which are generic over elliptic","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":4811,"byte_end":4890,"line_start":161,"line_end":161,"column_start":1,"column_end":80}},{"value":"/ curves (e.g. [`SecretKey`]).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":4891,"byte_end":4923,"line_start":162,"line_end":162,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":1053},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":5246,"byte_end":5250,"line_start":167,"line_end":167,"column_start":10,"column_end":14},"name":"UInt","qualname":"::Curve::UInt","value":"type UInt: bigint::AddMod<Output = Self::UInt>\n        + bigint::ArrayEncoding\n        + bigint::Encoding\n        + bigint::Integer\n        + bigint::NegMod<Output = Self::UInt>\n        + bigint::Random\n        + bigint::RandomMod\n        + bigint::SubMod<Output = Self::UInt>\n        + zeroize::Zeroize;","parent":{"krate":0,"index":1052},"children":[],"decl_id":null,"docs":" Integer type used to represent field elements of this elliptic curve.\n","sig":null,"attributes":[{"value":"/ Integer type used to represent field elements of this elliptic curve.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":5013,"byte_end":5086,"line_start":164,"line_end":164,"column_start":5,"column_end":78}}]},{"kind":"Const","id":{"krate":0,"index":1054},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":5738,"byte_end":5743,"line_start":181,"line_end":181,"column_start":11,"column_end":16},"name":"ORDER","qualname":"::Curve::ORDER","value":"Self::UInt","parent":{"krate":0,"index":1052},"children":[],"decl_id":null,"docs":" Order constant.","sig":null,"attributes":[{"value":"/ Order constant.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":5551,"byte_end":5570,"line_start":177,"line_end":177,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":5575,"byte_end":5578,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ Subdivided into either 32-bit or 64-bit \"limbs\" (depending on the","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":5583,"byte_end":5652,"line_start":179,"line_end":179,"column_start":5,"column_end":74}},{"value":"/ target CPU's word size), specified from least to most significant.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":5657,"byte_end":5727,"line_start":180,"line_end":180,"column_start":5,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":1055},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":5825,"byte_end":5835,"line_start":185,"line_end":185,"column_start":11,"column_end":21},"name":"PrimeCurve","qualname":"::PrimeCurve","value":"PrimeCurve: Curve","parent":null,"children":[],"decl_id":null,"docs":" Marker trait for elliptic curves with prime order.\n","sig":null,"attributes":[{"value":"/ Marker trait for elliptic curves with prime order.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":5760,"byte_end":5814,"line_start":184,"line_end":184,"column_start":1,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":1056},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":5907,"byte_end":5916,"line_start":188,"line_end":188,"column_start":10,"column_end":19},"name":"FieldSize","qualname":"::FieldSize","value":"<<C as Curve>::UInt as bigint::ArrayEncoding>::ByteSize","parent":null,"children":[],"decl_id":null,"docs":" Size of field elements of this elliptic curve.\n","sig":null,"attributes":[{"value":"/ Size of field elements of this elliptic curve.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":5847,"byte_end":5897,"line_start":187,"line_end":187,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":1058},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":6062,"byte_end":6072,"line_start":191,"line_end":191,"column_start":10,"column_end":20},"name":"FieldBytes","qualname":"::FieldBytes","value":"GenericArray<u8, FieldSize<C>>","parent":null,"children":[],"decl_id":null,"docs":" Byte representation of a base/scalar field element of a given curve.\n","sig":null,"attributes":[{"value":"/ Byte representation of a base/scalar field element of a given curve.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":5980,"byte_end":6052,"line_start":190,"line_end":190,"column_start":1,"column_end":73}}]},{"kind":"Type","id":{"krate":0,"index":1060},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":6297,"byte_end":6308,"line_start":197,"line_end":197,"column_start":10,"column_end":21},"name":"AffinePoint","qualname":"::AffinePoint","value":"<C as AffineArithmetic>::AffinePoint","parent":null,"children":[],"decl_id":null,"docs":" Affine point type for a given curve with a [`ProjectiveArithmetic`]\n implementation.\n","sig":null,"attributes":[{"value":"/ Affine point type for a given curve with a [`ProjectiveArithmetic`]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":6111,"byte_end":6182,"line_start":193,"line_end":193,"column_start":1,"column_end":72}},{"value":"/ implementation.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":6183,"byte_end":6202,"line_start":194,"line_end":194,"column_start":1,"column_end":20}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":6257,"byte_end":6287,"line_start":196,"line_end":196,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":1062},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":6543,"byte_end":6558,"line_start":203,"line_end":203,"column_start":10,"column_end":25},"name":"ProjectivePoint","qualname":"::ProjectivePoint","value":"<C as ProjectiveArithmetic>::ProjectivePoint","parent":null,"children":[],"decl_id":null,"docs":" Projective point type for a given curve with a [`ProjectiveArithmetic`]\n implementation.\n","sig":null,"attributes":[{"value":"/ Projective point type for a given curve with a [`ProjectiveArithmetic`]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":6353,"byte_end":6428,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ implementation.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":6429,"byte_end":6448,"line_start":200,"line_end":200,"column_start":1,"column_end":20}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":6449,"byte_end":6479,"line_start":201,"line_end":201,"column_start":1,"column_end":31}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":21454,"byte_end":21455,"line_start":23,"line_end":23,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":27330,"byte_end":27331,"line_start":97,"line_end":97,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/error.rs","byte_start":32802,"byte_end":32807,"line_start":15,"line_end":15,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/error.rs","byte_start":32949,"byte_end":32954,"line_start":21,"line_end":21,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/error.rs","byte_start":33077,"byte_end":33082,"line_start":28,"line_end":28,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/error.rs","byte_start":33200,"byte_end":33205,"line_start":35,"line_end":35,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/error.rs","byte_start":33321,"byte_end":33326,"line_start":42,"line_end":42,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":37108,"byte_end":37118,"line_start":52,"line_end":52,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":39720,"byte_end":39730,"line_start":146,"line_end":146,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":40099,"byte_end":40109,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":40238,"byte_end":40248,"line_start":167,"line_end":167,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":40483,"byte_end":40493,"line_start":178,"line_end":178,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":40642,"byte_end":40652,"line_start":187,"line_end":187,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":40804,"byte_end":40814,"line_start":196,"line_end":196,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":40969,"byte_end":40979,"line_start":205,"line_end":205,"column_start":36,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":41009,"byte_end":41019,"line_start":207,"line_end":207,"column_start":23,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":41049,"byte_end":41059,"line_start":209,"line_end":209,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":41191,"byte_end":41201,"line_start":218,"line_end":218,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":41344,"byte_end":41354,"line_start":227,"line_end":227,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":41494,"byte_end":41504,"line_start":236,"line_end":236,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":41662,"byte_end":41672,"line_start":247,"line_end":247,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":354},{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":41829,"byte_end":41839,"line_start":258,"line_end":258,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":42071,"byte_end":42081,"line_start":271,"line_end":271,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":42229,"byte_end":42239,"line_start":280,"line_end":280,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":42381,"byte_end":42391,"line_start":289,"line_end":289,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":368},{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":42548,"byte_end":42558,"line_start":300,"line_end":300,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":372},{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":42790,"byte_end":42800,"line_start":313,"line_end":313,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":42948,"byte_end":42958,"line_start":322,"line_end":322,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":43085,"byte_end":43095,"line_start":331,"line_end":331,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":43428,"byte_end":43438,"line_start":355,"line_end":355,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":43596,"byte_end":43606,"line_start":365,"line_end":365,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":43762,"byte_end":43772,"line_start":374,"line_end":374,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":43955,"byte_end":43965,"line_start":383,"line_end":383,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":44147,"byte_end":44157,"line_start":392,"line_end":392,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":46404,"byte_end":46417,"line_start":39,"line_end":39,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":511},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":47542,"byte_end":47555,"line_start":71,"line_end":71,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":47703,"byte_end":47716,"line_start":80,"line_end":80,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":47977,"byte_end":47990,"line_start":91,"line_end":91,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":48148,"byte_end":48161,"line_start":100,"line_end":100,"column_start":18,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":48221,"byte_end":48234,"line_start":102,"line_end":102,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":530},{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":48410,"byte_end":48420,"line_start":113,"line_end":113,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":48595,"byte_end":48605,"line_start":122,"line_end":122,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":48777,"byte_end":48787,"line_start":131,"line_end":131,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":48995,"byte_end":49005,"line_start":140,"line_end":140,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":49209,"byte_end":49222,"line_start":149,"line_end":149,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":49384,"byte_end":49397,"line_start":158,"line_end":158,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":49655,"byte_end":49668,"line_start":169,"line_end":169,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":552},{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":49955,"byte_end":49968,"line_start":183,"line_end":183,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":50102,"byte_end":50115,"line_start":192,"line_end":192,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":559},{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":50401,"byte_end":50414,"line_start":205,"line_end":205,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":50619,"byte_end":50632,"line_start":217,"line_end":217,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":567},{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":51087,"byte_end":51100,"line_start":233,"line_end":233,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":51335,"byte_end":51348,"line_start":244,"line_end":244,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":51696,"byte_end":51709,"line_start":257,"line_end":257,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":579},{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":52100,"byte_end":52113,"line_start":275,"line_end":275,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":52462,"byte_end":52475,"line_start":289,"line_end":289,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":52650,"byte_end":52663,"line_start":298,"line_end":298,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":52861,"byte_end":52874,"line_start":307,"line_end":307,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":53070,"byte_end":53083,"line_start":316,"line_end":316,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key/pkcs8.rs","byte_start":66558,"byte_end":66567,"line_start":31,"line_end":31,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":644},{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key/pkcs8.rs","byte_start":67092,"byte_end":67101,"line_start":49,"line_end":49,"column_start":30,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":56664,"byte_end":56673,"line_start":89,"line_end":89,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":745},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":63510,"byte_end":63519,"line_start":305,"line_end":305,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":63657,"byte_end":63666,"line_start":314,"line_end":314,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":761}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":63936,"byte_end":63945,"line_start":324,"line_end":324,"column_start":27,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":63985,"byte_end":63994,"line_start":326,"line_end":326,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":64106,"byte_end":64115,"line_start":335,"line_end":335,"column_start":23,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":64145,"byte_end":64154,"line_start":337,"line_end":337,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":64385,"byte_end":64394,"line_start":348,"line_end":348,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":774},{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":65279,"byte_end":65288,"line_start":375,"line_end":375,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":780}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":65556,"byte_end":65565,"line_start":386,"line_end":386,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":73651,"byte_end":73660,"line_start":85,"line_end":85,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":911},{"krate":0,"index":912}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":76997,"byte_end":77006,"line_start":185,"line_end":185,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":915}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":77148,"byte_end":77157,"line_start":194,"line_end":194,"column_start":18,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":77308,"byte_end":77317,"line_start":198,"line_end":198,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":77937,"byte_end":77946,"line_start":215,"line_end":215,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":924}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":78425,"byte_end":78437,"line_start":230,"line_end":230,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":927}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":78815,"byte_end":78827,"line_start":243,"line_end":243,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":79208,"byte_end":79217,"line_start":256,"line_end":256,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":933}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":79548,"byte_end":79557,"line_start":269,"line_end":269,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":80149,"byte_end":80158,"line_start":285,"line_end":285,"column_start":54,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":939},{"krate":0,"index":940}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":80779,"byte_end":80788,"line_start":302,"line_end":302,"column_start":29,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":81099,"byte_end":81108,"line_start":312,"line_end":312,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":2651,"byte_end":2654,"line_start":72,"line_end":72,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":9}},{"kind":"Mod","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":3017,"byte_end":3021,"line_start":88,"line_end":88,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":70}},{"kind":"Mod","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":3117,"byte_end":3128,"line_start":92,"line_end":92,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":134}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":21454,"byte_end":21455,"line_start":23,"line_end":23,"column_start":31,"column_end":32},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":53},"to":{"krate":0,"index":49}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":21989,"byte_end":21994,"line_start":39,"line_end":39,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":27,"index":176},"to":{"krate":0,"index":56}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":22223,"byte_end":22228,"line_start":47,"line_end":47,"column_start":50,"column_end":55},"kind":"SuperTrait","from":{"krate":1,"index":3029},"to":{"krate":0,"index":58}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/ops.rs","byte_start":23880,"byte_end":23885,"line_start":93,"line_end":93,"column_start":57,"column_end":62},"kind":"SuperTrait","from":{"krate":1,"index":3029},"to":{"krate":0,"index":67}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/sec1.rs","byte_start":27330,"byte_end":27331,"line_start":97,"line_end":97,"column_start":31,"column_end":32},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":132},"to":{"krate":0,"index":129}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/error.rs","byte_start":32802,"byte_end":32807,"line_start":15,"line_end":15,"column_start":18,"column_end":23},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1064},"to":{"krate":1,"index":9611}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/error.rs","byte_start":32949,"byte_end":32954,"line_start":21,"line_end":21,"column_start":32,"column_end":37},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1064},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/error.rs","byte_start":33077,"byte_end":33082,"line_start":28,"line_end":28,"column_start":29,"column_end":34},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1064},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/error.rs","byte_start":33200,"byte_end":33205,"line_start":35,"line_end":35,"column_start":28,"column_end":33},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1064},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/error.rs","byte_start":33321,"byte_end":33326,"line_start":42,"line_end":42,"column_start":28,"column_end":33},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1064},"to":{"krate":5,"index":2452}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/point.rs","byte_start":33876,"byte_end":33881,"line_start":16,"line_end":16,"column_start":38,"column_end":43},"kind":"SuperTrait","from":{"krate":1,"index":3029},"to":{"krate":0,"index":188}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/point.rs","byte_start":34262,"byte_end":34267,"line_start":25,"line_end":25,"column_start":37,"column_end":42},"kind":"SuperTrait","from":{"krate":1,"index":3029},"to":{"krate":0,"index":191}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":37108,"byte_end":37118,"line_start":52,"line_end":52,"column_start":9,"column_end":19},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1077},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":39720,"byte_end":39730,"line_start":146,"line_end":146,"column_start":9,"column_end":19},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1077},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":40099,"byte_end":40109,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1077},"to":{"krate":1,"index":2921}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":40238,"byte_end":40248,"line_start":167,"line_end":167,"column_start":37,"column_end":47},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1077},"to":{"krate":21,"index":65}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":40483,"byte_end":40493,"line_start":178,"line_end":178,"column_start":28,"column_end":38},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1077},"to":{"krate":21,"index":57}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":40642,"byte_end":40652,"line_start":187,"line_end":187,"column_start":30,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1077},"to":{"krate":21,"index":108}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":40804,"byte_end":40814,"line_start":196,"line_end":196,"column_start":33,"column_end":43},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1077},"to":{"krate":21,"index":105}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":40969,"byte_end":40979,"line_start":205,"line_end":205,"column_start":36,"column_end":46},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1077},"to":{"krate":26,"index":86}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":41009,"byte_end":41019,"line_start":207,"line_end":207,"column_start":23,"column_end":33},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1077},"to":{"krate":1,"index":2680}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":41049,"byte_end":41059,"line_start":209,"line_end":209,"column_start":23,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1077},"to":{"krate":1,"index":2675}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":41191,"byte_end":41201,"line_start":218,"line_end":218,"column_start":24,"column_end":34},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1077},"to":{"krate":1,"index":2722}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":41344,"byte_end":41354,"line_start":227,"line_end":227,"column_start":17,"column_end":27},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1077},"to":{"krate":1,"index":2711}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":41494,"byte_end":41504,"line_start":236,"line_end":236,"column_start":23,"column_end":33},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1077},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":41662,"byte_end":41672,"line_start":247,"line_end":247,"column_start":32,"column_end":42},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1077},"to":{"krate":1,"index":3091}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":41829,"byte_end":41839,"line_start":258,"line_end":258,"column_start":33,"column_end":43},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1077},"to":{"krate":1,"index":3091}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":42071,"byte_end":42081,"line_start":271,"line_end":271,"column_start":38,"column_end":48},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1077},"to":{"krate":1,"index":3122}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":42229,"byte_end":42239,"line_start":280,"line_end":280,"column_start":39,"column_end":49},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1077},"to":{"krate":1,"index":3122}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":42381,"byte_end":42391,"line_start":289,"line_end":289,"column_start":32,"column_end":42},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1077},"to":{"krate":1,"index":3096}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":42548,"byte_end":42558,"line_start":300,"line_end":300,"column_start":33,"column_end":43},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1077},"to":{"krate":1,"index":3096}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":42790,"byte_end":42800,"line_start":313,"line_end":313,"column_start":38,"column_end":48},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1077},"to":{"krate":1,"index":3126}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":42948,"byte_end":42958,"line_start":322,"line_end":322,"column_start":39,"column_end":49},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1077},"to":{"krate":1,"index":3126}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":43085,"byte_end":43095,"line_start":331,"line_end":331,"column_start":17,"column_end":27},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1077},"to":{"krate":1,"index":3118}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":43428,"byte_end":43438,"line_start":355,"line_end":355,"column_start":20,"column_end":30},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1077},"to":{"krate":0,"index":602}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":43596,"byte_end":43606,"line_start":365,"line_end":365,"column_start":26,"column_end":36},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1077},"to":{"krate":1,"index":9611}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":43762,"byte_end":43772,"line_start":374,"line_end":374,"column_start":27,"column_end":37},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1077},"to":{"krate":1,"index":9617}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":43955,"byte_end":43965,"line_start":383,"line_end":383,"column_start":27,"column_end":37},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1077},"to":{"krate":1,"index":9619}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/core.rs","byte_start":44147,"byte_end":44157,"line_start":392,"line_end":392,"column_start":26,"column_end":36},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1077},"to":{"krate":1,"index":12197}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":46404,"byte_end":46417,"line_start":39,"line_end":39,"column_start":9,"column_end":22},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1091},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":47542,"byte_end":47555,"line_start":71,"line_end":71,"column_start":30,"column_end":43},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1091},"to":{"krate":1,"index":2921}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":47703,"byte_end":47716,"line_start":80,"line_end":80,"column_start":37,"column_end":50},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1091},"to":{"krate":21,"index":65}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":47977,"byte_end":47990,"line_start":91,"line_end":91,"column_start":28,"column_end":41},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1091},"to":{"krate":21,"index":57}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":48148,"byte_end":48161,"line_start":100,"line_end":100,"column_start":18,"column_end":31},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1091},"to":{"krate":1,"index":3034}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":48221,"byte_end":48234,"line_start":102,"line_end":102,"column_start":19,"column_end":32},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1091},"to":{"krate":1,"index":3242}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":48410,"byte_end":48420,"line_start":113,"line_end":113,"column_start":36,"column_end":46},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1058},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":48595,"byte_end":48605,"line_start":122,"line_end":122,"column_start":37,"column_end":47},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1058},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":48777,"byte_end":48787,"line_start":131,"line_end":131,"column_start":36,"column_end":46},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1077},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":48995,"byte_end":49005,"line_start":140,"line_end":140,"column_start":37,"column_end":47},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1077},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":49209,"byte_end":49222,"line_start":149,"line_end":149,"column_start":32,"column_end":45},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1091},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":49384,"byte_end":49397,"line_start":158,"line_end":158,"column_start":33,"column_end":46},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1091},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":49655,"byte_end":49668,"line_start":169,"line_end":169,"column_start":20,"column_end":33},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1091},"to":{"krate":0,"index":49}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":49955,"byte_end":49968,"line_start":183,"line_end":183,"column_start":20,"column_end":33},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1091},"to":{"krate":0,"index":602}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":50102,"byte_end":50115,"line_start":192,"line_end":192,"column_start":17,"column_end":30},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1091},"to":{"krate":1,"index":3118}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":50401,"byte_end":50414,"line_start":205,"line_end":205,"column_start":35,"column_end":48},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1091},"to":{"krate":1,"index":3101}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":50619,"byte_end":50632,"line_start":217,"line_end":217,"column_start":36,"column_end":49},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1091},"to":{"krate":1,"index":3101}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":51087,"byte_end":51100,"line_start":233,"line_end":233,"column_start":26,"column_end":39},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1091},"to":{"krate":0,"index":58}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":51335,"byte_end":51348,"line_start":244,"line_end":244,"column_start":33,"column_end":46},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1091},"to":{"krate":0,"index":67}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":51696,"byte_end":51709,"line_start":257,"line_end":257,"column_start":28,"column_end":41},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1091},"to":{"krate":1,"index":2937}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":52100,"byte_end":52113,"line_start":275,"line_end":275,"column_start":21,"column_end":34},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1091},"to":{"krate":26,"index":83}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":52462,"byte_end":52475,"line_start":289,"line_end":289,"column_start":26,"column_end":39},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1091},"to":{"krate":1,"index":9611}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":52650,"byte_end":52663,"line_start":298,"line_end":298,"column_start":27,"column_end":40},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1091},"to":{"krate":1,"index":9617}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":52861,"byte_end":52874,"line_start":307,"line_end":307,"column_start":27,"column_end":40},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1091},"to":{"krate":1,"index":9619}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/scalar/nonzero.rs","byte_start":53070,"byte_end":53083,"line_start":316,"line_end":316,"column_start":26,"column_end":39},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1091},"to":{"krate":1,"index":12197}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key/pkcs8.rs","byte_start":66558,"byte_end":66567,"line_start":31,"line_end":31,"column_start":48,"column_end":57},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1097},"to":{"krate":1,"index":2937}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key/pkcs8.rs","byte_start":67092,"byte_end":67101,"line_start":49,"line_end":49,"column_start":30,"column_end":39},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1097},"to":{"krate":36,"index":124}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":56664,"byte_end":56673,"line_start":89,"line_end":89,"column_start":9,"column_end":18},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":63510,"byte_end":63519,"line_start":305,"line_end":305,"column_start":28,"column_end":37},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1097},"to":{"krate":21,"index":57}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":63657,"byte_end":63666,"line_start":314,"line_end":314,"column_start":19,"column_end":28},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1097},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":63936,"byte_end":63945,"line_start":324,"line_end":324,"column_start":27,"column_end":36},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1097},"to":{"krate":26,"index":85}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":63985,"byte_end":63994,"line_start":326,"line_end":326,"column_start":18,"column_end":27},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1097},"to":{"krate":1,"index":3266}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":64106,"byte_end":64115,"line_start":335,"line_end":335,"column_start":23,"column_end":32},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1097},"to":{"krate":1,"index":2680}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":64145,"byte_end":64154,"line_start":337,"line_end":337,"column_start":23,"column_end":32},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1097},"to":{"krate":1,"index":2675}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":64385,"byte_end":64394,"line_start":348,"line_end":348,"column_start":45,"column_end":54},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1097},"to":{"krate":1,"index":2937}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":65279,"byte_end":65288,"line_start":375,"line_end":375,"column_start":36,"column_end":45},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1097},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/secret_key.rs","byte_start":65556,"byte_end":65565,"line_start":386,"line_end":386,"column_start":37,"column_end":46},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1097},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":68935,"byte_end":68940,"line_start":12,"line_end":12,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":1052},"to":{"krate":0,"index":820}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":68943,"byte_end":68959,"line_start":12,"line_end":12,"column_start":37,"column_end":53},"kind":"SuperTrait","from":{"krate":0,"index":826},"to":{"krate":0,"index":820}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":69475,"byte_end":69485,"line_start":33,"line_end":33,"column_start":5,"column_end":15},"kind":"SuperTrait","from":{"krate":0,"index":1055},"to":{"krate":0,"index":822}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":69488,"byte_end":69508,"line_start":33,"line_end":33,"column_start":18,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":824},"to":{"krate":0,"index":822}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":69837,"byte_end":69842,"line_start":41,"line_end":41,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":1052},"to":{"krate":0,"index":824}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":69845,"byte_end":69861,"line_start":41,"line_end":41,"column_start":41,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":820},"to":{"krate":0,"index":824}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/arithmetic.rs","byte_start":70607,"byte_end":70612,"line_start":67,"line_end":67,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":1052},"to":{"krate":0,"index":826}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":73651,"byte_end":73660,"line_start":85,"line_end":85,"column_start":9,"column_end":18},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":76997,"byte_end":77006,"line_start":185,"line_end":185,"column_start":35,"column_end":44},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1103},"to":{"krate":1,"index":2921}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":77148,"byte_end":77157,"line_start":194,"line_end":194,"column_start":18,"column_end":27},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1103},"to":{"krate":1,"index":3034}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":77308,"byte_end":77317,"line_start":198,"line_end":198,"column_start":33,"column_end":42},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1103},"to":{"krate":0,"index":120}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":77937,"byte_end":77946,"line_start":215,"line_end":215,"column_start":31,"column_end":40},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1103},"to":{"krate":0,"index":123}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":78425,"byte_end":78437,"line_start":230,"line_end":230,"column_start":32,"column_end":44},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":114},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":78815,"byte_end":78827,"line_start":243,"line_end":243,"column_start":33,"column_end":45},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":114},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":79208,"byte_end":79217,"line_start":256,"line_end":256,"column_start":24,"column_end":33},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1103},"to":{"krate":1,"index":2722}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":79548,"byte_end":79557,"line_start":269,"line_end":269,"column_start":17,"column_end":26},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1103},"to":{"krate":1,"index":2711}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":80149,"byte_end":80158,"line_start":285,"line_end":285,"column_start":54,"column_end":63},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1103},"to":{"krate":1,"index":2937}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":80779,"byte_end":80788,"line_start":302,"line_end":302,"column_start":29,"column_end":38},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1103},"to":{"krate":37,"index":170}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/public_key.rs","byte_start":81099,"byte_end":81108,"line_start":312,"line_end":312,"column_start":29,"column_end":38},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1103},"to":{"krate":37,"index":173}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":4951,"byte_end":4955,"line_start":163,"line_end":163,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":1,"index":3034},"to":{"krate":0,"index":1052}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":4958,"byte_end":4963,"line_start":163,"line_end":163,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":1,"index":2645},"to":{"krate":0,"index":1052}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":4966,"byte_end":4971,"line_start":163,"line_end":163,"column_start":43,"column_end":48},"kind":"SuperTrait","from":{"krate":1,"index":9604},"to":{"krate":0,"index":1052}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":4974,"byte_end":4981,"line_start":163,"line_end":163,"column_start":51,"column_end":58},"kind":"SuperTrait","from":{"krate":1,"index":3002},"to":{"krate":0,"index":1052}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":4984,"byte_end":4986,"line_start":163,"line_end":163,"column_start":61,"column_end":63},"kind":"SuperTrait","from":{"krate":1,"index":2680},"to":{"krate":0,"index":1052}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":4989,"byte_end":4992,"line_start":163,"line_end":163,"column_start":66,"column_end":69},"kind":"SuperTrait","from":{"krate":1,"index":2711},"to":{"krate":0,"index":1052}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":4995,"byte_end":4999,"line_start":163,"line_end":163,"column_start":72,"column_end":76},"kind":"SuperTrait","from":{"krate":1,"index":3024},"to":{"krate":0,"index":1052}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":5002,"byte_end":5006,"line_start":163,"line_end":163,"column_start":79,"column_end":83},"kind":"SuperTrait","from":{"krate":1,"index":3036},"to":{"krate":0,"index":1052}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.3/src/lib.rs","byte_start":5837,"byte_end":5842,"line_start":185,"line_end":185,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":1052},"to":{"krate":0,"index":1055}}]}