{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11","program":"/Users/trevorclarke/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","schemars","--edition=2018","/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"derive\"","--cfg","feature=\"schemars_derive\"","-C","metadata=f7aae436d19369a8","-C","extra-filename=-f7aae436d19369a8","--out-dir","/Users/trevorclarke/code/cron/cw-purrbox/contracts/cw20-streams/target/rls/debug/deps","-L","dependency=/Users/trevorclarke/code/cron/cw-purrbox/contracts/cw20-streams/target/rls/debug/deps","--extern","dyn_clone=/Users/trevorclarke/code/cron/cw-purrbox/contracts/cw20-streams/target/rls/debug/deps/libdyn_clone-c284df82eeb771bc.rmeta","--extern","schemars_derive=/Users/trevorclarke/code/cron/cw-purrbox/contracts/cw20-streams/target/rls/debug/deps/libschemars_derive-bed02ab5790be4f1.dylib","--extern","serde=/Users/trevorclarke/code/cron/cw-purrbox/contracts/cw20-streams/target/rls/debug/deps/libserde-2036ba6eb090c8d1.rmeta","--extern","serde_json=/Users/trevorclarke/code/cron/cw-purrbox/contracts/cw20-streams/target/rls/debug/deps/libserde_json-818cb4d3b4ad9b91.rmeta","--cap-lints","allow","--cfg","std_atomic64","--cfg","std_atomic","--error-format=json","--sysroot","/Users/trevorclarke/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/trevorclarke/code/cron/cw-purrbox/contracts/cw20-streams/target/rls/debug/deps/libschemars-f7aae436d19369a8.rmeta"},"prelude":{"crate_id":{"name":"schemars","disambiguator":[7997999724516670068,0]},"crate_root":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src","external_crates":[{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9602236740471282608,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[16249227214258238047,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13791225915815425008,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[455111089362928276,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[740641686899810413,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1452182208797737205,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4474361821197688885,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11146593528668201643,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7026141623111916022,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[11096207044195207047,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[16946906222655600942,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[9670608472714711915,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[3075685271658393714,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[7553277853646633394,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[5387634511767759158,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[10401181353817371068,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14296571408058143832,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","num":18,"id":{"name":"schemars_derive","disambiguator":[12158405920072145054,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/json_schema_impls/core.rs","num":19,"id":{"name":"serde_json","disambiguator":[1908215773447981276,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","num":20,"id":{"name":"serde","disambiguator":[5727982145564189251,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","num":21,"id":{"name":"serde_derive","disambiguator":[6005655599024246725,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/json_schema_impls/core.rs","num":22,"id":{"name":"itoa","disambiguator":[4616050707793390338,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/json_schema_impls/core.rs","num":23,"id":{"name":"ryu","disambiguator":[16073521324321269628,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","num":24,"id":{"name":"dyn_clone","disambiguator":[1693628512300680272,0]}}],"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":0,"byte_end":12726,"line_start":1,"line_end":409,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":10204,"byte_end":10205,"line_start":328,"line_end":328,"column_start":26,"column_end":27},"alias_span":null,"name":"*","value":"JsonSchema","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":0},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":10282,"byte_end":10292,"line_start":332,"line_end":332,"column_start":9,"column_end":19},"alias_span":null,"name":"_serde_json","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":0,"byte_end":12726,"line_start":1,"line_end":409,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":12},{"krate":0,"index":51},{"krate":0,"index":288},{"krate":0,"index":415},{"krate":0,"index":418},{"krate":0,"index":459},{"krate":0,"index":543},{"krate":0,"index":597},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":642},{"krate":0,"index":645}],"decl_id":null,"docs":"Generate JSON Schema documents from Rust code","sig":null,"attributes":[{"value":"forbid(unsafe_code)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":0,"byte_end":23,"line_start":1,"line_end":1,"column_start":1,"column_end":24}},{"value":"*\nGenerate JSON Schema documents from Rust code\n\n## Basic Usage\n\nIf you don't really care about the specifics, the easiest way to generate a JSON schema for your types is to `#[derive(JsonSchema)]` and use the `schema_for!` macro. All fields of the type must also implement `JsonSchema` - Schemars implements this for many standard library types.\n\n```rust\nuse schemars::{schema_for, JsonSchema};\n\n#[derive(JsonSchema)]\npub struct MyStruct {\n    pub my_int: i32,\n    pub my_bool: bool,\n    pub my_nullable_enum: Option<MyEnum>,\n}\n\n#[derive(JsonSchema)]\npub enum MyEnum {\n    StringNewType(String),\n    StructVariant { floats: Vec<f32> },\n}\n\nlet schema = schema_for!(MyStruct);\nprintln!(\"{}\", serde_json::to_string_pretty(&schema).unwrap());\n```\n\n<details>\n<summary>Click to see the output JSON schema...</summary>\n\n```json\n{\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"title\": \"MyStruct\",\n    \"type\": \"object\",\n    \"required\": [\n        \"my_bool\",\n        \"my_int\"\n    ],\n    \"properties\": {\n        \"my_bool\": {\n            \"type\": \"boolean\"\n        },\n        \"my_int\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n        },\n        \"my_nullable_enum\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/definitions/MyEnum\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ]\n        }\n    },\n    \"definitions\": {\n        \"MyEnum\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"StringNewType\"\n                    ],\n                    \"properties\": {\n                        \"StringNewType\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"additionalProperties\": false\n                },\n                {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"StructVariant\"\n                    ],\n                    \"properties\": {\n                        \"StructVariant\": {\n                            \"type\": \"object\",\n                            \"required\": [\n                                \"floats\"\n                            ],\n                            \"properties\": {\n                                \"floats\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"type\": \"number\",\n                                        \"format\": \"float\"\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"additionalProperties\": false\n                }\n            ]\n        }\n    }\n}\n```\n</details>\n\n### Serde Compatibility\n\nOne of the main aims of this library is compatibility with [Serde](https://github.com/serde-rs/serde). Any generated schema *should* match how [serde_json](https://github.com/serde-rs/json) would serialize/deserialize to/from JSON. To support this, Schemars will check for any `#[serde(...)]` attributes on types that derive `JsonSchema`, and adjust the generated schema accordingly.\n\n```rust\nuse schemars::{schema_for, JsonSchema};\nuse serde::{Deserialize, Serialize};\n\n#[derive(Deserialize, Serialize, JsonSchema)]\n#[serde(rename_all = \"camelCase\", deny_unknown_fields)]\npub struct MyStruct {\n    #[serde(rename = \"myNumber\")]\n    pub my_int: i32,\n    pub my_bool: bool,\n    #[serde(default)]\n    pub my_nullable_enum: Option<MyEnum>,\n}\n\n#[derive(Deserialize, Serialize, JsonSchema)]\n#[serde(untagged)]\npub enum MyEnum {\n    StringNewType(String),\n    StructVariant { floats: Vec<f32> },\n}\n\nlet schema = schema_for!(MyStruct);\nprintln!(\"{}\", serde_json::to_string_pretty(&schema).unwrap());\n```\n\n<details>\n<summary>Click to see the output JSON schema...</summary>\n\n```json\n{\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"title\": \"MyStruct\",\n    \"type\": \"object\",\n    \"required\": [\n        \"myBool\",\n        \"myNumber\"\n    ],\n    \"properties\": {\n        \"myBool\": {\n            \"type\": \"boolean\"\n        },\n        \"myNullableEnum\": {\n            \"default\": null,\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/definitions/MyEnum\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ]\n        },\n        \"myNumber\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n        }\n    },\n    \"additionalProperties\": false,\n    \"definitions\": {\n        \"MyEnum\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\"\n                },\n                {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"floats\"\n                    ],\n                    \"properties\": {\n                        \"floats\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"number\",\n                                \"format\": \"float\"\n                            }\n                        }\n                    }\n                }\n            ]\n        }\n    }\n}\n```\n</details>\n\n`#[serde(...)]` attributes can be overriden using `#[schemars(...)]` attributes, which behave identically (e.g. `#[schemars(rename_all = \"camelCase\")]`). You may find this useful if you want to change the generated schema without affecting Serde's behaviour, or if you're just not using Serde.\n\n### Schema from Example Value\n\nIf you want a schema for a type that can't/doesn't implement `JsonSchema`, but does implement `serde::Serialize`, then you can generate a JSON schema from a value of that type. However, this schema will generally be less precise than if the type implemented `JsonSchema` - particularly when it involves enums, since schemars will not make any assumptions about the structure of an enum based on a single variant.\n\n```rust\nuse schemars::schema_for_value;\nuse serde::Serialize;\n\n#[derive(Serialize)]\npub struct MyStruct {\n    pub my_int: i32,\n    pub my_bool: bool,\n    pub my_nullable_enum: Option<MyEnum>,\n}\n\n#[derive(Serialize)]\npub enum MyEnum {\n    StringNewType(String),\n    StructVariant { floats: Vec<f32> },\n}\n\nlet schema = schema_for_value!(MyStruct {\n    my_int: 123,\n    my_bool: true,\n    my_nullable_enum: Some(MyEnum::StringNewType(\"foo\".to_string()))\n});\nprintln!(\"{}\", serde_json::to_string_pretty(&schema).unwrap());\n```\n\n<details>\n<summary>Click to see the output JSON schema...</summary>\n\n```json\n{\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"title\": \"MyStruct\",\n    \"examples\": [\n        {\n            \"my_bool\": true,\n            \"my_int\": 123,\n            \"my_nullable_enum\": {\n                \"StringNewType\": \"foo\"\n            }\n        }\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"my_bool\": {\n            \"type\": \"boolean\"\n        },\n        \"my_int\": {\n            \"type\": \"integer\"\n        },\n        \"my_nullable_enum\": true\n    }\n}\n```\n</details>\n\n## Feature Flags\n- `derive` (enabled by default) - provides `#[derive(JsonSchema)]` macro\n- `impl_json_schema` - implements `JsonSchema` for Schemars types themselves\n- `preserve_order` - keep the order of struct fields in `Schema` and `SchemaObject`\n\nSchemars can implement `JsonSchema` on types from several popular crates, enabled via feature flags (dependency versions are shown in brackets):\n- `chrono` - [chrono](https://crates.io/crates/chrono) (^0.4)\n- `indexmap1` - [indexmap](https://crates.io/crates/indexmap) (^1.2)\n- `either` - [either](https://crates.io/crates/either) (^1.3)\n- `uuid08` - [uuid](https://crates.io/crates/uuid) (^0.8)\n- `uuid1` - [uuid](https://crates.io/crates/uuid) (^1.0)\n- `smallvec` - [smallvec](https://crates.io/crates/smallvec) (^1.0)\n- `arrayvec05` - [arrayvec](https://crates.io/crates/arrayvec) (^0.5)\n- `arrayvec07` - [arrayvec](https://crates.io/crates/arrayvec) (^0.7)\n- `url` - [url](https://crates.io/crates/url) (^2.0)\n- `bytes` - [bytes](https://crates.io/crates/bytes) (^1.0)\n- `enumset` - [enumset](https://crates.io/crates/enumset) (^1.0)\n- `rust_decimal` - [rust_decimal](https://crates.io/crates/rust_decimal) (^1.0)\n- `bigdecimal` - [bigdecimal](https://crates.io/crates/bigdecimal) (^0.3)\n\nFor example, to implement `JsonSchema` on types from `chrono`, enable it as a feature in the `schemars` dependency in your `Cargo.toml` like so:\n\n```toml\n[dependencies]\nschemars = { version = \"0.8\", features = [\"chrono\"] }\n```\n\n```\n*/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":24,"byte_end":8603,"line_start":2,"line_end":285,"column_start":1,"column_end":3}}]},{"kind":"Type","id":{"krate":0,"index":3},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":8944,"byte_end":8947,"line_start":293,"line_end":293,"column_start":10,"column_end":13},"name":"Map","qualname":"::Map","value":"std::collections::BTreeMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":" The map type used by schemars types.","sig":null,"attributes":[{"value":"/ The map type used by schemars types.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":8605,"byte_end":8645,"line_start":287,"line_end":287,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":8646,"byte_end":8649,"line_start":288,"line_end":288,"column_start":1,"column_end":4}},{"value":"/ Currently a `BTreeMap` or `IndexMap` can be used, but this may change to a different implementation","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":8650,"byte_end":8753,"line_start":289,"line_end":289,"column_start":1,"column_end":104}},{"value":"/ with a similar interface in a future version of schemars.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":8754,"byte_end":8815,"line_start":290,"line_end":290,"column_start":1,"column_end":62}},{"value":"/ The `IndexMap` will be used when the `preserve_order` feature flag is set.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":8816,"byte_end":8894,"line_start":291,"line_end":291,"column_start":1,"column_end":79}},{"value":"cfg(not(feature = \"preserve_order\"))","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":8895,"byte_end":8934,"line_start":292,"line_end":292,"column_start":1,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":6},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":9266,"byte_end":9269,"line_start":300,"line_end":300,"column_start":10,"column_end":13},"name":"Set","qualname":"::Set","value":"std::collections::BTreeSet<T>","parent":null,"children":[],"decl_id":null,"docs":" The set type used by schemars types.","sig":null,"attributes":[{"value":"/ The set type used by schemars types.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":9072,"byte_end":9112,"line_start":296,"line_end":296,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":9113,"byte_end":9116,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Currently a `BTreeSet`, but this may change to a different implementation","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":9117,"byte_end":9194,"line_start":298,"line_end":298,"column_start":1,"column_end":78}},{"value":"/ with a similar interface in a future version of schemars.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":9195,"byte_end":9256,"line_start":299,"line_end":299,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":8},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":9584,"byte_end":9592,"line_start":307,"line_end":307,"column_start":10,"column_end":18},"name":"MapEntry","qualname":"::MapEntry","value":"std::collections::btree_map::Entry","parent":null,"children":[],"decl_id":null,"docs":" A view into a single entry in a map, which may either be vacant or occupied.\n This is constructed from the `entry` method on `BTreeMap` or `IndexMap`,\n depending on whether the `preserve_order` feature flag is set.\n","sig":null,"attributes":[{"value":"/ A view into a single entry in a map, which may either be vacant or occupied.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":9307,"byte_end":9387,"line_start":302,"line_end":302,"column_start":1,"column_end":81}},{"value":"/ This is constructed from the `entry` method on `BTreeMap` or `IndexMap`,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":9391,"byte_end":9467,"line_start":304,"line_end":304,"column_start":1,"column_end":77}},{"value":"/ depending on whether the `preserve_order` feature flag is set.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":9468,"byte_end":9534,"line_start":305,"line_end":305,"column_start":1,"column_end":67}},{"value":"cfg(not(feature = \"preserve_order\"))","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":9535,"byte_end":9574,"line_start":306,"line_end":306,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/flatten.rs","byte_start":12951,"byte_end":12958,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"flatten","qualname":"<Schema>::flatten","value":"pub fn flatten(Self, Self) -> Schema","parent":null,"children":[],"decl_id":null,"docs":" This function is only public for use by schemars_derive.","sig":null,"attributes":[{"value":"/ This function is only public for use by schemars_derive.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/flatten.rs","byte_start":12792,"byte_end":12852,"line_start":5,"line_end":5,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/flatten.rs","byte_start":12857,"byte_end":12860,"line_start":6,"line_end":6,"column_start":5,"column_end":8}},{"value":"/ It should not be considered part of the public API.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/flatten.rs","byte_start":12865,"byte_end":12920,"line_start":7,"line_end":7,"column_start":5,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":418},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/_private.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"_private","qualname":"::_private","value":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/_private.rs","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":422},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":429},{"krate":0,"index":432},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":441},{"krate":0,"index":444},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":452},{"krate":0,"index":454},{"krate":0,"index":456}],"decl_id":null,"docs":" This module is only public for use by `schemars_derive`. It should not need to be used by code\n outside of `schemars`, and should not be considered part of the public API.\n","sig":null,"attributes":[{"value":"/ This module is only public for use by `schemars_derive`. It should not need to be used by code","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":9820,"byte_end":9918,"line_start":317,"line_end":317,"column_start":1,"column_end":99}},{"value":"/ outside of `schemars`, and should not be considered part of the public API.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":9919,"byte_end":9998,"line_start":318,"line_end":318,"column_start":1,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":444},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/_private.rs","byte_start":63593,"byte_end":63616,"line_start":9,"line_end":9,"column_start":8,"column_end":31},"name":"json_schema_for_flatten","qualname":"::_private::json_schema_for_flatten","value":"pub fn json_schema_for_flatten<T: ?Sized +\nJsonSchema>(&mut SchemaGenerator, bool) -> Schema","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":446},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/_private.rs","byte_start":64065,"byte_end":64079,"line_start":28,"line_end":28,"column_start":8,"column_end":22},"name":"apply_metadata","qualname":"::_private::apply_metadata","value":"pub fn apply_metadata(Schema, Metadata) -> Schema","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":448},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/_private.rs","byte_start":64953,"byte_end":64974,"line_start":53,"line_end":53,"column_start":12,"column_end":33},"name":"MaybeSerializeWrapper","qualname":"::_private::MaybeSerializeWrapper","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":451},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/_private.rs","byte_start":64978,"byte_end":64983,"line_start":53,"line_end":53,"column_start":37,"column_end":42},"name":"0","qualname":"::_private::MaybeSerializeWrapper::0","value":"T","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":452},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/_private.rs","byte_start":64997,"byte_end":65008,"line_start":55,"line_end":55,"column_start":11,"column_end":22},"name":"NoSerialize","qualname":"::_private::NoSerialize","value":"NoSerialize: Sized","parent":null,"children":[{"krate":0,"index":453}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/_private.rs","byte_start":65025,"byte_end":65039,"line_start":56,"line_end":56,"column_start":8,"column_end":22},"name":"maybe_to_value","qualname":"::_private::NoSerialize::maybe_to_value","value":"pub fn maybe_to_value(Self) -> Option<Value>","parent":{"krate":0,"index":452},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/_private.rs","byte_start":65174,"byte_end":65188,"line_start":64,"line_end":64,"column_start":12,"column_end":26},"name":"maybe_to_value","qualname":"<MaybeSerializeWrapper<T>>::maybe_to_value","value":"pub fn maybe_to_value(Self) -> Option<Value>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":459},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gen","qualname":"::gen","value":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":466},{"krate":0,"index":469},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":479},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":1489},{"krate":0,"index":1497},{"krate":0,"index":1499},{"krate":0,"index":485},{"krate":0,"index":487},{"krate":0,"index":1501},{"krate":0,"index":1505},{"krate":0,"index":1507},{"krate":0,"index":496},{"krate":0,"index":498},{"krate":0,"index":500},{"krate":0,"index":538},{"krate":0,"index":1509},{"krate":0,"index":1512},{"krate":0,"index":1515},{"krate":0,"index":1518},{"krate":0,"index":540}],"decl_id":null,"docs":"JSON Schema generator and settings.","sig":null,"attributes":[{"value":"*\nJSON Schema generator and settings.\n\nThis module is useful if you want more control over how the schema generated than the [`schema_for!`] macro gives you.\nThere are two main types in this module:\n* [`SchemaSettings`], which defines what JSON Schema features should be used when generating schemas (for example, how `Option`s should be represented).\n* [`SchemaGenerator`], which manages the generation of a schema document.\n*/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":65272,"byte_end":65702,"line_start":1,"line_end":8,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":1489},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":66322,"byte_end":66336,"line_start":21,"line_end":21,"column_start":12,"column_end":26},"name":"SchemaSettings","qualname":"::gen::SchemaSettings","value":"SchemaSettings { option_nullable, option_add_null_type, definitions_path, meta_schema, visitors, inline_subschemas }","parent":null,"children":[{"krate":0,"index":1490},{"krate":0,"index":1491},{"krate":0,"index":1492},{"krate":0,"index":1493},{"krate":0,"index":1494},{"krate":0,"index":1495},{"krate":0,"index":1496}],"decl_id":null,"docs":" Settings to customize how Schemas are generated.","sig":null,"attributes":[{"value":"/ Settings to customize how Schemas are generated.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":65869,"byte_end":65921,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":65922,"byte_end":65925,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The default settings currently conform to [JSON Schema Draft 7](https://json-schema.org/specification-links.html#draft-7), but this is liable to change in a future version of Schemars if support for other JSON Schema versions is added.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":65926,"byte_end":66165,"line_start":18,"line_end":18,"column_start":1,"column_end":240}},{"value":"/ If you require your generated schemas to conform to draft 7, consider using the [`draft07`](#method.draft07) method.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":66166,"byte_end":66286,"line_start":19,"line_end":19,"column_start":1,"column_end":121}}]},{"kind":"Field","id":{"krate":0,"index":1490},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":66571,"byte_end":66586,"line_start":27,"line_end":27,"column_start":9,"column_end":24},"name":"option_nullable","qualname":"::gen::SchemaSettings::option_nullable","value":"bool","parent":{"krate":0,"index":1489},"children":[],"decl_id":null,"docs":" If `true`, schemas for [`Option<T>`](Option) will include a `nullable` property.","sig":null,"attributes":[{"value":"/ If `true`, schemas for [`Option<T>`](Option) will include a `nullable` property.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":66343,"byte_end":66427,"line_start":22,"line_end":22,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":66432,"byte_end":66435,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This is not part of the JSON Schema spec, but is used in Swagger/OpenAPI schemas.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":66440,"byte_end":66525,"line_start":24,"line_end":24,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":66530,"byte_end":66533,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ Defaults to `false`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":66538,"byte_end":66562,"line_start":26,"line_end":26,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1491},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":66795,"byte_end":66815,"line_start":31,"line_end":31,"column_start":9,"column_end":29},"name":"option_add_null_type","qualname":"::gen::SchemaSettings::option_add_null_type","value":"bool","parent":{"krate":0,"index":1489},"children":[],"decl_id":null,"docs":" If `true`, schemas for [`Option<T>`](Option) will have `null` added to their [`type`](../schema/struct.SchemaObject.html#structfield.instance_type).","sig":null,"attributes":[{"value":"/ If `true`, schemas for [`Option<T>`](Option) will have `null` added to their [`type`](../schema/struct.SchemaObject.html#structfield.instance_type).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":66598,"byte_end":66750,"line_start":28,"line_end":28,"column_start":5,"column_end":157}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":66755,"byte_end":66758,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Defaults to `true`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":66763,"byte_end":66786,"line_start":30,"line_end":30,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":1492},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":66989,"byte_end":67005,"line_start":35,"line_end":35,"column_start":9,"column_end":25},"name":"definitions_path","qualname":"::gen::SchemaSettings::definitions_path","value":"std::string::String","parent":{"krate":0,"index":1489},"children":[],"decl_id":null,"docs":" A JSON pointer to the expected location of referenceable subschemas within the resulting root schema.","sig":null,"attributes":[{"value":"/ A JSON pointer to the expected location of referenceable subschemas within the resulting root schema.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":66827,"byte_end":66932,"line_start":32,"line_end":32,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":66937,"byte_end":66940,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Defaults to `\"#/definitions/\"`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":66945,"byte_end":66980,"line_start":34,"line_end":34,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1493},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":67182,"byte_end":67193,"line_start":39,"line_end":39,"column_start":9,"column_end":20},"name":"meta_schema","qualname":"::gen::SchemaSettings::meta_schema","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1489},"children":[],"decl_id":null,"docs":" The URI of the meta-schema describing the structure of the generated schemas.","sig":null,"attributes":[{"value":"/ The URI of the meta-schema describing the structure of the generated schemas.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":67019,"byte_end":67100,"line_start":36,"line_end":36,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":67105,"byte_end":67108,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Defaults to `\"http://json-schema.org/draft-07/schema#\"`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":67113,"byte_end":67173,"line_start":38,"line_end":38,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":1494},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":67294,"byte_end":67302,"line_start":41,"line_end":41,"column_start":9,"column_end":17},"name":"visitors","qualname":"::gen::SchemaSettings::visitors","value":"std::vec::Vec<std::boxed::Box<(dyn gen::GenVisitor + 'static)>>","parent":{"krate":0,"index":1489},"children":[],"decl_id":null,"docs":" A list of visitors that get applied to all generated root schemas.\n","sig":null,"attributes":[{"value":"/ A list of visitors that get applied to all generated root schemas.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":67215,"byte_end":67285,"line_start":40,"line_end":40,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":1495},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":67521,"byte_end":67538,"line_start":47,"line_end":47,"column_start":9,"column_end":26},"name":"inline_subschemas","qualname":"::gen::SchemaSettings::inline_subschemas","value":"bool","parent":{"krate":0,"index":1489},"children":[],"decl_id":null,"docs":" Inline all subschemas instead of using references.","sig":null,"attributes":[{"value":"/ Inline all subschemas instead of using references.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":67334,"byte_end":67388,"line_start":42,"line_end":42,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":67393,"byte_end":67396,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Some references may still be generated in schemas for recursive types.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":67401,"byte_end":67475,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":67480,"byte_end":67483,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Defaults to `false`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":67488,"byte_end":67512,"line_start":46,"line_end":46,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":67843,"byte_end":67850,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"draft07","qualname":"<SchemaSettings>::draft07","value":"pub fn draft07() -> SchemaSettings","parent":null,"children":[],"decl_id":null,"docs":" Creates `SchemaSettings` that conform to [JSON Schema Draft 7](https://json-schema.org/specification-links.html#draft-7).\n","sig":null,"attributes":[{"value":"/ Creates `SchemaSettings` that conform to [JSON Schema Draft 7](https://json-schema.org/specification-links.html#draft-7).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":67706,"byte_end":67831,"line_start":58,"line_end":58,"column_start":5,"column_end":130}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":68422,"byte_end":68434,"line_start":72,"line_end":72,"column_start":12,"column_end":24},"name":"draft2019_09","qualname":"<SchemaSettings>::draft2019_09","value":"pub fn draft2019_09() -> SchemaSettings","parent":null,"children":[],"decl_id":null,"docs":" Creates `SchemaSettings` that conform to [JSON Schema 2019-09](https://json-schema.org/specification-links.html#2019-09-formerly-known-as-draft-8).\n","sig":null,"attributes":[{"value":"/ Creates `SchemaSettings` that conform to [JSON Schema 2019-09](https://json-schema.org/specification-links.html#2019-09-formerly-known-as-draft-8).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":68259,"byte_end":68410,"line_start":71,"line_end":71,"column_start":5,"column_end":156}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":68989,"byte_end":68997,"line_start":85,"line_end":85,"column_start":12,"column_end":20},"name":"openapi3","qualname":"<SchemaSettings>::openapi3","value":"pub fn openapi3() -> SchemaSettings","parent":null,"children":[],"decl_id":null,"docs":" Creates `SchemaSettings` that conform to [OpenAPI 3.0](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#schemaObject).\n","sig":null,"attributes":[{"value":"/ Creates `SchemaSettings` that conform to [OpenAPI 3.0](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#schemaObject).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":68829,"byte_end":68977,"line_start":84,"line_end":84,"column_start":5,"column_end":153}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":70151,"byte_end":70155,"line_start":120,"line_end":120,"column_start":12,"column_end":16},"name":"with","qualname":"<SchemaSettings>::with","value":"pub fn with<impl FnOnce(&mut Self): FnOnce(&mut Self) ->\n()>(Self, impl FnOnce(&mut Self)) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Modifies the `SchemaSettings` by calling the given function.","sig":null,"attributes":[{"value":"/ Modifies the `SchemaSettings` by calling the given function.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":69756,"byte_end":69820,"line_start":108,"line_end":108,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":69825,"byte_end":69828,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":69833,"byte_end":69846,"line_start":110,"line_end":110,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":69851,"byte_end":69858,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ use schemars::gen::{SchemaGenerator, SchemaSettings};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":69863,"byte_end":69920,"line_start":112,"line_end":112,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":69925,"byte_end":69928,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ let settings = SchemaSettings::default().with(|s| {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":69933,"byte_end":69988,"line_start":114,"line_end":114,"column_start":5,"column_end":60}},{"value":"/     s.option_nullable = true;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":69993,"byte_end":70026,"line_start":115,"line_end":115,"column_start":5,"column_end":38}},{"value":"/     s.option_add_null_type = false;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":70031,"byte_end":70070,"line_start":116,"line_end":116,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":70075,"byte_end":70082,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"/ let gen = settings.into_generator();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":70087,"byte_end":70127,"line_start":118,"line_end":118,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":70132,"byte_end":70139,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":70392,"byte_end":70404,"line_start":126,"line_end":126,"column_start":12,"column_end":24},"name":"with_visitor","qualname":"<SchemaSettings>::with_visitor","value":"pub fn with_visitor<impl Visitor + Debug + Clone + 'static: Visitor + Debug +\nClone + 'static>(Self, impl Visitor + Debug + Clone + 'static) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Appends the given visitor to the list of [visitors](SchemaSettings::visitors) for these `SchemaSettings`.\n","sig":null,"attributes":[{"value":"/ Appends the given visitor to the list of [visitors](SchemaSettings::visitors) for these `SchemaSettings`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":70271,"byte_end":70380,"line_start":125,"line_end":125,"column_start":5,"column_end":114}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":70616,"byte_end":70630,"line_start":132,"line_end":132,"column_start":12,"column_end":26},"name":"into_generator","qualname":"<SchemaSettings>::into_generator","value":"pub fn into_generator(Self) -> SchemaGenerator","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`SchemaGenerator`] using these settings.\n","sig":null,"attributes":[{"value":"/ Creates a new [`SchemaGenerator`] using these settings.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":70545,"byte_end":70604,"line_start":131,"line_end":131,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1501},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":71055,"byte_end":71070,"line_start":152,"line_end":152,"column_start":12,"column_end":27},"name":"SchemaGenerator","qualname":"::gen::SchemaGenerator","value":"SchemaGenerator {  }","parent":null,"children":[{"krate":0,"index":1502},{"krate":0,"index":1503},{"krate":0,"index":1504}],"decl_id":null,"docs":" The main type used to generate JSON Schemas.","sig":null,"attributes":[{"value":"/ The main type used to generate JSON Schemas.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":70702,"byte_end":70750,"line_start":137,"line_end":137,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":70751,"byte_end":70754,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":70755,"byte_end":70768,"line_start":139,"line_end":139,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":70769,"byte_end":70776,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"/ use schemars::{JsonSchema, gen::SchemaGenerator};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":70777,"byte_end":70830,"line_start":141,"line_end":141,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":70831,"byte_end":70834,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ #[derive(JsonSchema)]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":70835,"byte_end":70860,"line_start":143,"line_end":143,"column_start":1,"column_end":26}},{"value":"/ struct MyStruct {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":70861,"byte_end":70882,"line_start":144,"line_end":144,"column_start":1,"column_end":22}},{"value":"/     foo: i32,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":70883,"byte_end":70900,"line_start":145,"line_end":145,"column_start":1,"column_end":18}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":70901,"byte_end":70906,"line_start":146,"line_end":146,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":70907,"byte_end":70910,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ let gen = SchemaGenerator::default();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":70911,"byte_end":70952,"line_start":148,"line_end":148,"column_start":1,"column_end":42}},{"value":"/ let schema = gen.into_root_schema_for::<MyStruct>();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":70953,"byte_end":71009,"line_start":149,"line_end":149,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":71010,"byte_end":71017,"line_start":150,"line_end":150,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":71669,"byte_end":71672,"line_start":176,"line_end":176,"column_start":12,"column_end":15},"name":"new","qualname":"<SchemaGenerator>::new","value":"pub fn new(SchemaSettings) -> SchemaGenerator","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `SchemaGenerator` using the given settings.\n","sig":null,"attributes":[{"value":"/ Creates a new `SchemaGenerator` using the given settings.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":71596,"byte_end":71657,"line_start":175,"line_end":175,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":72158,"byte_end":72166,"line_start":194,"line_end":194,"column_start":12,"column_end":20},"name":"settings","qualname":"<SchemaGenerator>::settings","value":"pub fn settings(&Self) -> &SchemaSettings","parent":null,"children":[],"decl_id":null,"docs":" Borrows the [`SchemaSettings`] being used by this `SchemaGenerator`.","sig":null,"attributes":[{"value":"/ Borrows the [`SchemaSettings`] being used by this `SchemaGenerator`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":71822,"byte_end":71894,"line_start":183,"line_end":183,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":71899,"byte_end":71902,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":71907,"byte_end":71920,"line_start":185,"line_end":185,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":71925,"byte_end":71932,"line_start":186,"line_end":186,"column_start":5,"column_end":12}},{"value":"/ use schemars::gen::SchemaGenerator;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":71937,"byte_end":71976,"line_start":187,"line_end":187,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":71981,"byte_end":71984,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ let gen = SchemaGenerator::default();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":71989,"byte_end":72030,"line_start":189,"line_end":189,"column_start":5,"column_end":46}},{"value":"/ let settings = gen.settings();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":72035,"byte_end":72069,"line_start":190,"line_end":190,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":72074,"byte_end":72077,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(settings.option_add_null_type, true);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":72082,"byte_end":72134,"line_start":192,"line_end":192,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":72139,"byte_end":72146,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":72296,"byte_end":72311,"line_start":199,"line_end":199,"column_start":12,"column_end":27},"name":"make_extensible","qualname":"<SchemaGenerator>::make_extensible","value":"pub fn make_extensible(&Self, &mut SchemaObject)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated = \"This method no longer has any effect.\"","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":72229,"byte_end":72284,"line_start":198,"line_end":198,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":72417,"byte_end":72431,"line_start":202,"line_end":202,"column_start":12,"column_end":26},"name":"schema_for_any","qualname":"<SchemaGenerator>::schema_for_any","value":"pub fn schema_for_any(&Self) -> Schema","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated = \"Use `Schema::Bool(true)` instead\"","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":72355,"byte_end":72405,"line_start":201,"line_end":201,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":72552,"byte_end":72567,"line_start":207,"line_end":207,"column_start":12,"column_end":27},"name":"schema_for_none","qualname":"<SchemaGenerator>::schema_for_none","value":"pub fn schema_for_none(&Self) -> Schema","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated = \"Use `Schema::Bool(false)` instead\"","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":72489,"byte_end":72540,"line_start":206,"line_end":206,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":73221,"byte_end":73234,"line_start":218,"line_end":218,"column_start":12,"column_end":25},"name":"subschema_for","qualname":"<SchemaGenerator>::subschema_for","value":"pub fn subschema_for<T: ?Sized + JsonSchema>(&mut Self) -> Schema","parent":null,"children":[],"decl_id":null,"docs":" Generates a JSON Schema for the type `T`, and returns either the schema itself or a `$ref` schema referencing `T`'s schema.","sig":null,"attributes":[{"value":"/ Generates a JSON Schema for the type `T`, and returns either the schema itself or a `$ref` schema referencing `T`'s schema.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":72626,"byte_end":72753,"line_start":211,"line_end":211,"column_start":5,"column_end":132}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":72758,"byte_end":72761,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ If `T` is [referenceable](JsonSchema::is_referenceable), this will add `T`'s schema to this generator's definitions, and","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":72766,"byte_end":72890,"line_start":213,"line_end":213,"column_start":5,"column_end":129}},{"value":"/ return a `$ref` schema referencing that schema. Otherwise, this method behaves identically to [`JsonSchema::json_schema`].","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":72895,"byte_end":73021,"line_start":214,"line_end":214,"column_start":5,"column_end":131}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":73026,"byte_end":73029,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ If `T`'s schema depends on any [referenceable](JsonSchema::is_referenceable) schemas, then this method will","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":73034,"byte_end":73145,"line_start":216,"line_end":216,"column_start":5,"column_end":116}},{"value":"/ add them to the `SchemaGenerator`'s schema definitions.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":73150,"byte_end":73209,"line_start":217,"line_end":217,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":74482,"byte_end":74493,"line_start":248,"line_end":248,"column_start":12,"column_end":23},"name":"definitions","qualname":"<SchemaGenerator>::definitions","value":"pub fn definitions(&Self) -> &Map<String, Schema>","parent":null,"children":[],"decl_id":null,"docs":" Borrows the collection of all [referenceable](JsonSchema::is_referenceable) schemas that have been generated.","sig":null,"attributes":[{"value":"/ Borrows the collection of all [referenceable](JsonSchema::is_referenceable) schemas that have been generated.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":74210,"byte_end":74323,"line_start":244,"line_end":244,"column_start":5,"column_end":118}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":74328,"byte_end":74331,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ The keys of the returned `Map` are the [schema names](JsonSchema::schema_name), and the values are the schemas","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":74336,"byte_end":74450,"line_start":246,"line_end":246,"column_start":5,"column_end":119}},{"value":"/ themselves.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":74455,"byte_end":74470,"line_start":247,"line_end":247,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":74844,"byte_end":74859,"line_start":256,"line_end":256,"column_start":12,"column_end":27},"name":"definitions_mut","qualname":"<SchemaGenerator>::definitions_mut","value":"pub fn definitions_mut(&mut Self) -> &mut Map<String, Schema>","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the collection of all [referenceable](JsonSchema::is_referenceable) schemas that have been generated.","sig":null,"attributes":[{"value":"/ Mutably borrows the collection of all [referenceable](JsonSchema::is_referenceable) schemas that have been generated.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":74564,"byte_end":74685,"line_start":252,"line_end":252,"column_start":5,"column_end":126}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":74690,"byte_end":74693,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ The keys of the returned `Map` are the [schema names](JsonSchema::schema_name), and the values are the schemas","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":74698,"byte_end":74812,"line_start":254,"line_end":254,"column_start":5,"column_end":119}},{"value":"/ themselves.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":74817,"byte_end":74832,"line_start":255,"line_end":255,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":75257,"byte_end":75273,"line_start":265,"line_end":265,"column_start":12,"column_end":28},"name":"take_definitions","qualname":"<SchemaGenerator>::take_definitions","value":"pub fn take_definitions(&mut Self) -> Map<String, Schema>","parent":null,"children":[],"decl_id":null,"docs":" Returns the collection of all [referenceable](JsonSchema::is_referenceable) schemas that have been generated,\n leaving an empty map in its place.","sig":null,"attributes":[{"value":"/ Returns the collection of all [referenceable](JsonSchema::is_referenceable) schemas that have been generated,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":74942,"byte_end":75055,"line_start":260,"line_end":260,"column_start":5,"column_end":118}},{"value":"/ leaving an empty map in its place.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":75060,"byte_end":75098,"line_start":261,"line_end":261,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":75103,"byte_end":75106,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ The keys of the returned `Map` are the [schema names](JsonSchema::schema_name), and the values are the schemas","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":75111,"byte_end":75225,"line_start":263,"line_end":263,"column_start":5,"column_end":119}},{"value":"/ themselves.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":75230,"byte_end":75245,"line_start":264,"line_end":264,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":75505,"byte_end":75517,"line_start":270,"line_end":270,"column_start":12,"column_end":24},"name":"visitors_mut","qualname":"<SchemaGenerator>::visitors_mut","value":"pub fn visitors_mut(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the [visitors](SchemaSettings::visitors) being used by this `SchemaGenerator`.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the [visitors](SchemaSettings::visitors) being used by this `SchemaGenerator`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":75386,"byte_end":75493,"line_start":269,"line_end":269,"column_start":5,"column_end":112}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":76028,"byte_end":76043,"line_start":279,"line_end":279,"column_start":12,"column_end":27},"name":"root_schema_for","qualname":"<SchemaGenerator>::root_schema_for","value":"pub fn root_schema_for<T: ?Sized + JsonSchema>(&mut Self) -> RootSchema","parent":null,"children":[],"decl_id":null,"docs":" Generates a root JSON Schema for the type `T`.","sig":null,"attributes":[{"value":"/ Generates a root JSON Schema for the type `T`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":75649,"byte_end":75699,"line_start":274,"line_end":274,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":75704,"byte_end":75707,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ If `T`'s schema depends on any [referenceable](JsonSchema::is_referenceable) schemas, then this method will","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":75712,"byte_end":75823,"line_start":276,"line_end":276,"column_start":5,"column_end":116}},{"value":"/ add them to the `SchemaGenerator`'s schema definitions and include them in the returned `SchemaObject`'s","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":75828,"byte_end":75936,"line_start":277,"line_end":277,"column_start":5,"column_end":113}},{"value":"/ [`definitions`](../schema/struct.Metadata.html#structfield.definitions)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":75941,"byte_end":76016,"line_start":278,"line_end":278,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":76911,"byte_end":76931,"line_start":300,"line_end":300,"column_start":12,"column_end":32},"name":"into_root_schema_for","qualname":"<SchemaGenerator>::into_root_schema_for","value":"pub fn into_root_schema_for<T: ?Sized + JsonSchema>(Self) -> RootSchema","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and generates a root JSON Schema for the type `T`.","sig":null,"attributes":[{"value":"/ Consumes `self` and generates a root JSON Schema for the type `T`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":76579,"byte_end":76649,"line_start":296,"line_end":296,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":76654,"byte_end":76657,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ If `T`'s schema depends on any [referenceable](JsonSchema::is_referenceable) schemas, then this method will","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":76662,"byte_end":76773,"line_start":298,"line_end":298,"column_start":5,"column_end":116}},{"value":"/ include them in the returned `SchemaObject`'s [`definitions`](../schema/struct.Metadata.html#structfield.definitions)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":76778,"byte_end":76899,"line_start":299,"line_end":299,"column_start":5,"column_end":126}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":77784,"byte_end":77805,"line_start":321,"line_end":321,"column_start":12,"column_end":33},"name":"root_schema_for_value","qualname":"<SchemaGenerator>::root_schema_for_value","value":"pub fn root_schema_for_value<T: ?Sized + Serialize>(&mut Self, &T)\n-> Result<RootSchema, serde_json::Error>","parent":null,"children":[],"decl_id":null,"docs":" Generates a root JSON Schema for the given example value.","sig":null,"attributes":[{"value":"/ Generates a root JSON Schema for the given example value.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":77450,"byte_end":77511,"line_start":317,"line_end":317,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":77516,"byte_end":77519,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ If the value implements [`JsonSchema`](crate::JsonSchema), then prefer using the [`root_schema_for()`](Self::root_schema_for())","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":77524,"byte_end":77655,"line_start":319,"line_end":319,"column_start":5,"column_end":136}},{"value":"/ function which will generally produce a more precise schema, particularly when the value contains any enums.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":77660,"byte_end":77772,"line_start":320,"line_end":320,"column_start":5,"column_end":117}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":78915,"byte_end":78941,"line_start":353,"line_end":353,"column_start":12,"column_end":38},"name":"into_root_schema_for_value","qualname":"<SchemaGenerator>::into_root_schema_for_value","value":"pub fn into_root_schema_for_value<T: ?Sized + Serialize>(Self, &T)\n-> Result<RootSchema, serde_json::Error>","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and generates a root JSON Schema for the given example value.","sig":null,"attributes":[{"value":"/ Consumes `self` and generates a root JSON Schema for the given example value.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":78549,"byte_end":78630,"line_start":349,"line_end":349,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":78635,"byte_end":78638,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ If the value  implements [`JsonSchema`](crate::JsonSchema), then prefer using the [`into_root_schema_for()!`](Self::into_root_schema_for())","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":78643,"byte_end":78786,"line_start":351,"line_end":351,"column_start":5,"column_end":148}},{"value":"/ function which will generally produce a more precise schema, particularly when the value contains any enums.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":78791,"byte_end":78903,"line_start":352,"line_end":352,"column_start":5,"column_end":117}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":80612,"byte_end":80623,"line_start":406,"line_end":406,"column_start":12,"column_end":23},"name":"dereference","qualname":"<SchemaGenerator>::dereference","value":"pub fn dereference<'a>(&'a Self, &Schema) -> Option<&'a Schema>","parent":null,"children":[],"decl_id":null,"docs":" Attemps to find the schema that the given `schema` is referencing.","sig":null,"attributes":[{"value":"/ Attemps to find the schema that the given `schema` is referencing.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":79673,"byte_end":79743,"line_start":381,"line_end":381,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":79748,"byte_end":79751,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ If the given `schema` has a [`$ref`](../schema/struct.SchemaObject.html#structfield.reference) property which refers","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":79756,"byte_end":79876,"line_start":383,"line_end":383,"column_start":5,"column_end":125}},{"value":"/ to another schema in `self`'s schema definitions, the referenced schema will be returned. Otherwise, returns `None`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":79881,"byte_end":80001,"line_start":384,"line_end":384,"column_start":5,"column_end":125}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":80006,"byte_end":80009,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":80014,"byte_end":80027,"line_start":386,"line_end":386,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":80032,"byte_end":80039,"line_start":387,"line_end":387,"column_start":5,"column_end":12}},{"value":"/ use schemars::{JsonSchema, gen::SchemaGenerator};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":80044,"byte_end":80097,"line_start":388,"line_end":388,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":80102,"byte_end":80105,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ #[derive(JsonSchema)]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":80110,"byte_end":80135,"line_start":390,"line_end":390,"column_start":5,"column_end":30}},{"value":"/ struct MyStruct {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":80140,"byte_end":80161,"line_start":391,"line_end":391,"column_start":5,"column_end":26}},{"value":"/     foo: i32,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":80166,"byte_end":80183,"line_start":392,"line_end":392,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":80188,"byte_end":80193,"line_start":393,"line_end":393,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":80198,"byte_end":80201,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ let mut gen = SchemaGenerator::default();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":80206,"byte_end":80251,"line_start":395,"line_end":395,"column_start":5,"column_end":50}},{"value":"/ let ref_schema = gen.subschema_for::<MyStruct>();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":80256,"byte_end":80309,"line_start":396,"line_end":396,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":80314,"byte_end":80317,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ assert!(ref_schema.is_ref());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":80322,"byte_end":80355,"line_start":398,"line_end":398,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":80360,"byte_end":80363,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ let dereferenced = gen.dereference(&ref_schema);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":80368,"byte_end":80420,"line_start":400,"line_end":400,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":80425,"byte_end":80428,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ assert!(dereferenced.is_some());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":80433,"byte_end":80469,"line_start":402,"line_end":402,"column_start":5,"column_end":41}},{"value":"/ assert!(!dereferenced.unwrap().is_ref());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":80474,"byte_end":80519,"line_start":403,"line_end":403,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(dereferenced, gen.definitions().get(\"MyStruct\"));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":80524,"byte_end":80588,"line_start":404,"line_end":404,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":80593,"byte_end":80600,"line_start":405,"line_end":405,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":538},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":82692,"byte_end":82702,"line_start":472,"line_end":472,"column_start":11,"column_end":21},"name":"GenVisitor","qualname":"::gen::GenVisitor","value":"GenVisitor: Visitor + Debug + DynClone + Any","parent":null,"children":[{"krate":0,"index":539}],"decl_id":null,"docs":" A [Visitor](Visitor) which implements additional traits required to be included in a [SchemaSettings].","sig":null,"attributes":[{"value":"/ A [Visitor](Visitor) which implements additional traits required to be included in a [SchemaSettings].","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":82028,"byte_end":82134,"line_start":451,"line_end":451,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":82135,"byte_end":82138,"line_start":452,"line_end":452,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to use this trait directly as it is automatically implemented for any type which implements all of:","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":82139,"byte_end":82263,"line_start":453,"line_end":453,"column_start":1,"column_end":125}},{"value":"/ - [`Visitor`]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":82264,"byte_end":82281,"line_start":454,"line_end":454,"column_start":1,"column_end":18}},{"value":"/ - [`std::fmt::Debug`]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":82282,"byte_end":82307,"line_start":455,"line_end":455,"column_start":1,"column_end":26}},{"value":"/ - [`std::any::Any`] (implemented for all `'static` types)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":82308,"byte_end":82369,"line_start":456,"line_end":456,"column_start":1,"column_end":62}},{"value":"/ - [`std::clone::Clone`]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":82370,"byte_end":82397,"line_start":457,"line_end":457,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":82398,"byte_end":82401,"line_start":458,"line_end":458,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":82402,"byte_end":82415,"line_start":459,"line_end":459,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":82416,"byte_end":82423,"line_start":460,"line_end":460,"column_start":1,"column_end":8}},{"value":"/ use schemars::visit::Visitor;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":82424,"byte_end":82457,"line_start":461,"line_end":461,"column_start":1,"column_end":34}},{"value":"/ use schemars::gen::GenVisitor;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":82458,"byte_end":82492,"line_start":462,"line_end":462,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":82493,"byte_end":82496,"line_start":463,"line_end":463,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Clone)]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":82497,"byte_end":82524,"line_start":464,"line_end":464,"column_start":1,"column_end":28}},{"value":"/ struct MyVisitor;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":82525,"byte_end":82546,"line_start":465,"line_end":465,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":82547,"byte_end":82550,"line_start":466,"line_end":466,"column_start":1,"column_end":4}},{"value":"/ impl Visitor for MyVisitor { }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":82551,"byte_end":82585,"line_start":467,"line_end":467,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":82586,"byte_end":82589,"line_start":468,"line_end":468,"column_start":1,"column_end":4}},{"value":"/ let v: &dyn GenVisitor = &MyVisitor;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":82590,"byte_end":82630,"line_start":469,"line_end":469,"column_start":1,"column_end":41}},{"value":"/ assert!(v.as_any().is::<MyVisitor>());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":82631,"byte_end":82673,"line_start":470,"line_end":470,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":82674,"byte_end":82681,"line_start":471,"line_end":471,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":82859,"byte_end":82865,"line_start":474,"line_end":474,"column_start":8,"column_end":14},"name":"as_any","qualname":"::gen::GenVisitor::as_any","value":"pub fn as_any(&Self) -> &dyn Any","parent":{"krate":0,"index":538},"children":[],"decl_id":null,"docs":" Upcasts this visitor into an `Any`, which can be used to inspect and manipulate it as its concrete type.\n","sig":null,"attributes":[{"value":"/ Upcasts this visitor into an `Any`, which can be used to inspect and manipulate it as its concrete type.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":82743,"byte_end":82851,"line_start":473,"line_end":473,"column_start":5,"column_end":113}}]},{"kind":"Mod","id":{"krate":0,"index":543},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"schema","qualname":"::schema","value":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","parent":null,"children":[{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":548},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":558},{"krate":0,"index":561},{"krate":0,"index":1542},{"krate":0,"index":1521},{"krate":0,"index":1527},{"krate":0,"index":1534},{"krate":0,"index":1536},{"krate":0,"index":1538},{"krate":0,"index":1539},{"krate":0,"index":564},{"krate":0,"index":568},{"krate":0,"index":570},{"krate":0,"index":1635},{"krate":0,"index":1549},{"krate":0,"index":1555},{"krate":0,"index":1625},{"krate":0,"index":1627},{"krate":0,"index":1629},{"krate":0,"index":1630},{"krate":0,"index":1633},{"krate":0,"index":1740},{"krate":0,"index":1639},{"krate":0,"index":1645},{"krate":0,"index":1730},{"krate":0,"index":1732},{"krate":0,"index":1734},{"krate":0,"index":1735},{"krate":0,"index":1738},{"krate":0,"index":572},{"krate":0,"index":575},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":585},{"krate":0,"index":1849},{"krate":0,"index":1759},{"krate":0,"index":1765},{"krate":0,"index":1839},{"krate":0,"index":1841},{"krate":0,"index":1843},{"krate":0,"index":1844},{"krate":0,"index":1847},{"krate":0,"index":587},{"krate":0,"index":1927},{"krate":0,"index":1858},{"krate":0,"index":1864},{"krate":0,"index":1917},{"krate":0,"index":1919},{"krate":0,"index":1921},{"krate":0,"index":1922},{"krate":0,"index":1925},{"krate":0,"index":2000},{"krate":0,"index":1935},{"krate":0,"index":1941},{"krate":0,"index":1990},{"krate":0,"index":1992},{"krate":0,"index":1994},{"krate":0,"index":1995},{"krate":0,"index":1998},{"krate":0,"index":2067},{"krate":0,"index":2006},{"krate":0,"index":2012},{"krate":0,"index":2057},{"krate":0,"index":2059},{"krate":0,"index":2061},{"krate":0,"index":2062},{"krate":0,"index":2065},{"krate":0,"index":2138},{"krate":0,"index":2071},{"krate":0,"index":2077},{"krate":0,"index":2128},{"krate":0,"index":2130},{"krate":0,"index":2132},{"krate":0,"index":2133},{"krate":0,"index":2136},{"krate":0,"index":2214},{"krate":0,"index":2145},{"krate":0,"index":2151},{"krate":0,"index":2204},{"krate":0,"index":2206},{"krate":0,"index":2208},{"krate":0,"index":2209},{"krate":0,"index":2212},{"krate":0,"index":2295},{"krate":0,"index":2222},{"krate":0,"index":2228},{"krate":0,"index":2277},{"krate":0,"index":2279},{"krate":0,"index":2281},{"krate":0,"index":2282},{"krate":0,"index":2283},{"krate":0,"index":2285},{"krate":0,"index":2286},{"krate":0,"index":2288},{"krate":0,"index":2290},{"krate":0,"index":2292},{"krate":0,"index":2348},{"krate":0,"index":2310},{"krate":0,"index":2317},{"krate":0,"index":2325},{"krate":0,"index":2328},{"krate":0,"index":2331},{"krate":0,"index":2333},{"krate":0,"index":2337},{"krate":0,"index":2339},{"krate":0,"index":2342},{"krate":0,"index":2345},{"krate":0,"index":588},{"krate":0,"index":591},{"krate":0,"index":594}],"decl_id":null,"docs":"JSON Schema types.\n","sig":null,"attributes":[{"value":"*\nJSON Schema types.\n*/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":83062,"byte_end":83087,"line_start":1,"line_end":3,"column_start":1,"column_end":3}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1543},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":83730,"byte_end":83734,"line_start":24,"line_end":24,"column_start":5,"column_end":9},"name":"Bool","qualname":"::schema::Schema::Bool","value":"Schema::Bool(bool)","parent":{"krate":0,"index":1542},"children":[],"decl_id":null,"docs":" A trivial boolean JSON Schema.","sig":null,"attributes":[{"value":"/ A trivial boolean JSON Schema.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":83532,"byte_end":83566,"line_start":20,"line_end":20,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":83571,"byte_end":83574,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ The schema `true` matches everything (always passes validation), whereas the schema `false`","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":83579,"byte_end":83674,"line_start":22,"line_end":22,"column_start":5,"column_end":100}},{"value":"/ matches nothing (always fails validation).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":83679,"byte_end":83725,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1546},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":83776,"byte_end":83782,"line_start":26,"line_end":26,"column_start":5,"column_end":11},"name":"Object","qualname":"::schema::Schema::Object","value":"Schema::Object(SchemaObject)","parent":{"krate":0,"index":1542},"children":[],"decl_id":null,"docs":" A JSON Schema object.\n","sig":null,"attributes":[{"value":"/ A JSON Schema object.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":83746,"byte_end":83771,"line_start":25,"line_end":25,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1542},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":83519,"byte_end":83525,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"name":"Schema","qualname":"::schema::Schema","value":"pub enum Schema { Bool(bool), Object(SchemaObject), }","parent":null,"children":[{"krate":0,"index":1543},{"krate":0,"index":1546}],"decl_id":null,"docs":" A JSON Schema.\n","sig":null,"attributes":[{"value":"/ A JSON Schema.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":83314,"byte_end":83332,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"allow(clippy :: large_enum_variant)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":83333,"byte_end":83369,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"serde(untagged)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":83491,"byte_end":83509,"line_start":18,"line_end":18,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":84058,"byte_end":84065,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"new_ref","qualname":"<Schema>::new_ref","value":"pub fn new_ref(String) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `$ref` schema.","sig":null,"attributes":[{"value":"/ Creates a new `$ref` schema.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":83819,"byte_end":83851,"line_start":30,"line_end":30,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":83856,"byte_end":83859,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ The given reference string should be a URI reference. This will usually be a JSON Pointer","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":83864,"byte_end":83957,"line_start":32,"line_end":32,"column_start":5,"column_end":98}},{"value":"/ in [URI Fragment representation](https://tools.ietf.org/html/rfc6901#section-6).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":83962,"byte_end":84046,"line_start":33,"line_end":33,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":84398,"byte_end":84404,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"is_ref","qualname":"<Schema>::is_ref","value":"pub fn is_ref(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is a `$ref` schema.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is a `$ref` schema.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":84154,"byte_end":84202,"line_start":38,"line_end":38,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":84207,"byte_end":84210,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ If `self` is a [`SchemaObject`] with `Some` [`reference`](struct.SchemaObject.html#structfield.reference) set, this returns `true`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":84215,"byte_end":84350,"line_start":40,"line_end":40,"column_start":5,"column_end":140}},{"value":"/ Otherwise, returns `false`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":84355,"byte_end":84386,"line_start":41,"line_end":41,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":84958,"byte_end":84969,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"into_object","qualname":"<Schema>::into_object","value":"pub fn into_object(Self) -> SchemaObject","parent":null,"children":[],"decl_id":null,"docs":" Converts the given schema (if it is a boolean schema) into an equivalent schema object.","sig":null,"attributes":[{"value":"/ Converts the given schema (if it is a boolean schema) into an equivalent schema object.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":84533,"byte_end":84624,"line_start":49,"line_end":49,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":84629,"byte_end":84632,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If the given schema is already a schema object, this has no effect.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":84637,"byte_end":84708,"line_start":51,"line_end":51,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":84713,"byte_end":84716,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":84721,"byte_end":84734,"line_start":53,"line_end":53,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":84739,"byte_end":84746,"line_start":54,"line_end":54,"column_start":5,"column_end":12}},{"value":"/ use schemars::schema::{Schema, SchemaObject};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":84751,"byte_end":84800,"line_start":55,"line_end":55,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":84805,"byte_end":84808,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ let bool_schema = Schema::Bool(true);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":84813,"byte_end":84854,"line_start":57,"line_end":57,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":84859,"byte_end":84862,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bool_schema.into_object(), SchemaObject::default());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":84867,"byte_end":84934,"line_start":59,"line_end":59,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":84939,"byte_end":84946,"line_start":60,"line_end":60,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1635},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":85867,"byte_end":85877,"line_start":92,"line_end":92,"column_start":12,"column_end":22},"name":"RootSchema","qualname":"::schema::RootSchema","value":"RootSchema { meta_schema, schema, definitions }","parent":null,"children":[{"krate":0,"index":1636},{"krate":0,"index":1637},{"krate":0,"index":1638}],"decl_id":null,"docs":" The root object of a JSON Schema document.\n","sig":null,"attributes":[{"value":"/ The root object of a JSON Schema document.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":85635,"byte_end":85681,"line_start":88,"line_end":88,"column_start":1,"column_end":47}},{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":85812,"byte_end":85855,"line_start":91,"line_end":91,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1636},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":86130,"byte_end":86141,"line_start":97,"line_end":97,"column_start":9,"column_end":20},"name":"meta_schema","qualname":"::schema::RootSchema::meta_schema","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1635},"children":[],"decl_id":null,"docs":" The `$schema` keyword.","sig":null,"attributes":[{"value":"/ The `$schema` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":85884,"byte_end":85910,"line_start":93,"line_end":93,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":85915,"byte_end":85918,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 8.1.1. The \"$schema\" Keyword](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-8.1.1).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":85923,"byte_end":86047,"line_start":95,"line_end":95,"column_start":5,"column_end":129}},{"value":"serde(rename = \"$schema\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":86052,"byte_end":86121,"line_start":96,"line_end":96,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":1637},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":86221,"byte_end":86227,"line_start":100,"line_end":100,"column_start":9,"column_end":15},"name":"schema","qualname":"::schema::RootSchema::schema","value":"schema::SchemaObject","parent":{"krate":0,"index":1635},"children":[],"decl_id":null,"docs":" The root schema itself.\n","sig":null,"attributes":[{"value":"/ The root schema itself.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":86163,"byte_end":86190,"line_start":98,"line_end":98,"column_start":5,"column_end":32}},{"value":"serde(flatten)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":86195,"byte_end":86212,"line_start":99,"line_end":99,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":1638},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":86818,"byte_end":86829,"line_start":109,"line_end":109,"column_start":9,"column_end":20},"name":"definitions","qualname":"::schema::RootSchema::definitions","value":"std::collections::BTreeMap<std::string::String, schema::Schema>","parent":{"krate":0,"index":1635},"children":[],"decl_id":null,"docs":" The `definitions` keyword.","sig":null,"attributes":[{"value":"/ The `definitions` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":86247,"byte_end":86277,"line_start":101,"line_end":101,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":86282,"byte_end":86285,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ In JSON Schema draft 2019-09 this was replaced by $defs, but in Schemars this is still","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":86290,"byte_end":86380,"line_start":103,"line_end":103,"column_start":5,"column_end":95}},{"value":"/ serialized as `definitions` for backward-compatibility.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":86385,"byte_end":86444,"line_start":104,"line_end":104,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":86449,"byte_end":86452,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 8.2.5. Schema Re-Use With \"$defs\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-8.2.5),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":86457,"byte_end":86586,"line_start":106,"line_end":106,"column_start":5,"column_end":134}},{"value":"/ and [JSON Schema (draft 07) 9. Schema Re-Use With \"definitions\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-01#section-9).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":86591,"byte_end":86740,"line_start":107,"line_end":107,"column_start":5,"column_end":154}},{"value":"serde(alias = \"$defs\", skip_serializing_if = \"Map::is_empty\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":86745,"byte_end":86809,"line_start":108,"line_end":108,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":1740},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":87066,"byte_end":87078,"line_start":116,"line_end":116,"column_start":12,"column_end":24},"name":"SchemaObject","qualname":"::schema::SchemaObject","value":"SchemaObject { metadata, instance_type, format, enum_values, const_value, subschemas, number, string, array, object, reference, extensions }","parent":null,"children":[{"krate":0,"index":1741},{"krate":0,"index":1742},{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1745},{"krate":0,"index":1746},{"krate":0,"index":1747},{"krate":0,"index":1748},{"krate":0,"index":1749},{"krate":0,"index":1750},{"krate":0,"index":1751},{"krate":0,"index":1752}],"decl_id":null,"docs":" A JSON Schema object.\n","sig":null,"attributes":[{"value":"/ A JSON Schema object.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":86855,"byte_end":86880,"line_start":112,"line_end":112,"column_start":1,"column_end":26}},{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":87011,"byte_end":87054,"line_start":115,"line_end":115,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1741},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":87289,"byte_end":87297,"line_start":119,"line_end":119,"column_start":9,"column_end":17},"name":"metadata","qualname":"::schema::SchemaObject::metadata","value":"std::option::Option<std::boxed::Box<schema::Metadata>>","parent":{"krate":0,"index":1740},"children":[],"decl_id":null,"docs":" Properties which annotate the [`SchemaObject`] which typically have no effect when an object is being validated against the schema.\n","sig":null,"attributes":[{"value":"/ Properties which annotate the [`SchemaObject`] which typically have no effect when an object is being validated against the schema.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":87085,"byte_end":87220,"line_start":117,"line_end":117,"column_start":5,"column_end":140}},{"value":"serde(flatten, deserialize_with = \"skip_if_default\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":87225,"byte_end":87280,"line_start":118,"line_end":118,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1742},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":87699,"byte_end":87712,"line_start":125,"line_end":125,"column_start":9,"column_end":22},"name":"instance_type","qualname":"::schema::SchemaObject::instance_type","value":"std::option::Option<schema::SingleOrVec<schema::InstanceType>>","parent":{"krate":0,"index":1740},"children":[],"decl_id":null,"docs":" The `type` keyword.","sig":null,"attributes":[{"value":"/ The `type` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":87326,"byte_end":87349,"line_start":120,"line_end":120,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":87354,"byte_end":87357,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.1.1. \"type\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.1.1)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":87362,"byte_end":87492,"line_start":122,"line_end":122,"column_start":5,"column_end":135}},{"value":"/ and [JSON Schema 4.2.1. Instance Data Model](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-4.2.1).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":87497,"byte_end":87619,"line_start":123,"line_end":123,"column_start":5,"column_end":127}},{"value":"serde(rename = \"type\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":87624,"byte_end":87690,"line_start":124,"line_end":124,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":1743},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":88018,"byte_end":88024,"line_start":130,"line_end":130,"column_start":9,"column_end":15},"name":"format","qualname":"::schema::SchemaObject::format","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1740},"children":[],"decl_id":null,"docs":" The `format` keyword.","sig":null,"attributes":[{"value":"/ The `format` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":87753,"byte_end":87778,"line_start":126,"line_end":126,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":87783,"byte_end":87786,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 7. A Vocabulary for Semantic Content With \"format\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-7).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":87791,"byte_end":87955,"line_start":128,"line_end":128,"column_start":5,"column_end":169}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":87960,"byte_end":88009,"line_start":129,"line_end":129,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1744},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":88292,"byte_end":88303,"line_start":135,"line_end":135,"column_start":9,"column_end":20},"name":"enum_values","qualname":"::schema::SchemaObject::enum_values","value":"std::option::Option<std::vec::Vec<serde_json::Value>>","parent":{"krate":0,"index":1740},"children":[],"decl_id":null,"docs":" The `enum` keyword.","sig":null,"attributes":[{"value":"/ The `enum` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":88046,"byte_end":88069,"line_start":131,"line_end":131,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":88074,"byte_end":88077,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.1.2. \"enum\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.1.2)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":88082,"byte_end":88212,"line_start":133,"line_end":133,"column_start":5,"column_end":135}},{"value":"serde(rename = \"enum\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":88217,"byte_end":88283,"line_start":134,"line_end":134,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":1745},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":88641,"byte_end":88652,"line_start":144,"line_end":144,"column_start":9,"column_end":20},"name":"const_value","qualname":"::schema::SchemaObject::const_value","value":"std::option::Option<serde_json::Value>","parent":{"krate":0,"index":1740},"children":[],"decl_id":null,"docs":" The `const` keyword.","sig":null,"attributes":[{"value":"/ The `const` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":88329,"byte_end":88353,"line_start":136,"line_end":136,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":88358,"byte_end":88361,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.1.3. \"const\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.1.3)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":88366,"byte_end":88497,"line_start":138,"line_end":138,"column_start":5,"column_end":136}},{"value":"serde(rename = \"const\", skip_serializing_if = \"Option::is_none\",\ndeserialize_with = \"allow_null\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":88502,"byte_end":88632,"line_start":139,"line_end":143,"column_start":5,"column_end":7}}]},{"kind":"Field","id":{"krate":0,"index":1746},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":88842,"byte_end":88852,"line_start":147,"line_end":147,"column_start":9,"column_end":19},"name":"subschemas","qualname":"::schema::SchemaObject::subschemas","value":"std::option::Option<std::boxed::Box<schema::SubschemaValidation>>","parent":{"krate":0,"index":1740},"children":[],"decl_id":null,"docs":" Properties of the [`SchemaObject`] which define validation assertions in terms of other schemas.\n","sig":null,"attributes":[{"value":"/ Properties of the [`SchemaObject`] which define validation assertions in terms of other schemas.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":88673,"byte_end":88773,"line_start":145,"line_end":145,"column_start":5,"column_end":105}},{"value":"serde(flatten, deserialize_with = \"skip_if_default\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":88778,"byte_end":88833,"line_start":146,"line_end":146,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1747},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":89047,"byte_end":89053,"line_start":150,"line_end":150,"column_start":9,"column_end":15},"name":"number","qualname":"::schema::SchemaObject::number","value":"std::option::Option<std::boxed::Box<schema::NumberValidation>>","parent":{"krate":0,"index":1740},"children":[],"decl_id":null,"docs":" Properties of the [`SchemaObject`] which define validation assertions for numbers.\n","sig":null,"attributes":[{"value":"/ Properties of the [`SchemaObject`] which define validation assertions for numbers.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":88892,"byte_end":88978,"line_start":148,"line_end":148,"column_start":5,"column_end":91}},{"value":"serde(flatten, deserialize_with = \"skip_if_default\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":88983,"byte_end":89038,"line_start":149,"line_end":149,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1748},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":89245,"byte_end":89251,"line_start":153,"line_end":153,"column_start":9,"column_end":15},"name":"string","qualname":"::schema::SchemaObject::string","value":"std::option::Option<std::boxed::Box<schema::StringValidation>>","parent":{"krate":0,"index":1740},"children":[],"decl_id":null,"docs":" Properties of the [`SchemaObject`] which define validation assertions for strings.\n","sig":null,"attributes":[{"value":"/ Properties of the [`SchemaObject`] which define validation assertions for strings.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":89090,"byte_end":89176,"line_start":151,"line_end":151,"column_start":5,"column_end":91}},{"value":"serde(flatten, deserialize_with = \"skip_if_default\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":89181,"byte_end":89236,"line_start":152,"line_end":152,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1749},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":89442,"byte_end":89447,"line_start":156,"line_end":156,"column_start":9,"column_end":14},"name":"array","qualname":"::schema::SchemaObject::array","value":"std::option::Option<std::boxed::Box<schema::ArrayValidation>>","parent":{"krate":0,"index":1740},"children":[],"decl_id":null,"docs":" Properties of the [`SchemaObject`] which define validation assertions for arrays.\n","sig":null,"attributes":[{"value":"/ Properties of the [`SchemaObject`] which define validation assertions for arrays.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":89288,"byte_end":89373,"line_start":154,"line_end":154,"column_start":5,"column_end":90}},{"value":"serde(flatten, deserialize_with = \"skip_if_default\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":89378,"byte_end":89433,"line_start":155,"line_end":155,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1750},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":89638,"byte_end":89644,"line_start":159,"line_end":159,"column_start":9,"column_end":15},"name":"object","qualname":"::schema::SchemaObject::object","value":"std::option::Option<std::boxed::Box<schema::ObjectValidation>>","parent":{"krate":0,"index":1740},"children":[],"decl_id":null,"docs":" Properties of the [`SchemaObject`] which define validation assertions for objects.\n","sig":null,"attributes":[{"value":"/ Properties of the [`SchemaObject`] which define validation assertions for objects.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":89483,"byte_end":89569,"line_start":157,"line_end":157,"column_start":5,"column_end":91}},{"value":"serde(flatten, deserialize_with = \"skip_if_default\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":89574,"byte_end":89629,"line_start":158,"line_end":158,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1751},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":89933,"byte_end":89942,"line_start":164,"line_end":164,"column_start":9,"column_end":18},"name":"reference","qualname":"::schema::SchemaObject::reference","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1740},"children":[],"decl_id":null,"docs":" The `$ref` keyword.","sig":null,"attributes":[{"value":"/ The `$ref` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":89681,"byte_end":89704,"line_start":160,"line_end":160,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":89709,"byte_end":89712,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 8.2.4.1. Direct References with \"$ref\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-8.2.4.1).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":89717,"byte_end":89853,"line_start":162,"line_end":162,"column_start":5,"column_end":141}},{"value":"serde(rename = \"$ref\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":89858,"byte_end":89924,"line_start":163,"line_end":163,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":1752},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":90116,"byte_end":90126,"line_start":167,"line_end":167,"column_start":9,"column_end":19},"name":"extensions","qualname":"::schema::SchemaObject::extensions","value":"std::collections::BTreeMap<std::string::String, serde_json::Value>","parent":{"krate":0,"index":1740},"children":[],"decl_id":null,"docs":" Arbitrary extra properties which are not part of the JSON Schema specification, or which `schemars` does not support.\n","sig":null,"attributes":[{"value":"/ Arbitrary extra properties which are not part of the JSON Schema specification, or which `schemars` does not support.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":89964,"byte_end":90085,"line_start":165,"line_end":165,"column_start":5,"column_end":126}},{"value":"serde(flatten)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":90090,"byte_end":90107,"line_start":166,"line_end":166,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":91642,"byte_end":91649,"line_start":219,"line_end":219,"column_start":12,"column_end":19},"name":"new_ref","qualname":"<SchemaObject>::new_ref","value":"pub fn new_ref(String) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `$ref` schema.","sig":null,"attributes":[{"value":"/ Creates a new `$ref` schema.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":91403,"byte_end":91435,"line_start":215,"line_end":215,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":91440,"byte_end":91443,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ The given reference string should be a URI reference. This will usually be a JSON Pointer","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":91448,"byte_end":91541,"line_start":217,"line_end":217,"column_start":5,"column_end":98}},{"value":"/ in [URI Fragment representation](https://tools.ietf.org/html/rfc6901#section-6).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":91546,"byte_end":91630,"line_start":218,"line_end":218,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":92017,"byte_end":92023,"line_start":230,"line_end":230,"column_start":12,"column_end":18},"name":"is_ref","qualname":"<SchemaObject>::is_ref","value":"pub fn is_ref(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is a `$ref` schema.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is a `$ref` schema.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":91796,"byte_end":91844,"line_start":226,"line_end":226,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":91849,"byte_end":91852,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ If `self` has `Some` [`reference`](struct.SchemaObject.html#structfield.reference) set, this returns `true`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":91857,"byte_end":91969,"line_start":228,"line_end":228,"column_start":5,"column_end":117}},{"value":"/ Otherwise, returns `false`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":91974,"byte_end":92005,"line_start":229,"line_end":229,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":92455,"byte_end":92463,"line_start":239,"line_end":239,"column_start":12,"column_end":20},"name":"has_type","qualname":"<SchemaObject>::has_type","value":"pub fn has_type(&Self, InstanceType) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` accepts values of the given type, according to the [`instance_type`] field.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` accepts values of the given type, according to the [`instance_type`] field.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":92085,"byte_end":92189,"line_start":234,"line_end":234,"column_start":5,"column_end":109}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":92194,"byte_end":92197,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ This is a basic check that always returns `true` if no `instance_type` is specified on the schema,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":92202,"byte_end":92304,"line_start":236,"line_end":236,"column_start":5,"column_end":107}},{"value":"/ and does not check any subschemas. Because of this, both `{}` and  `{\"not\": {}}` accept any type according","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":92309,"byte_end":92419,"line_start":237,"line_end":237,"column_start":5,"column_end":115}},{"value":"/ to this method.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":92424,"byte_end":92443,"line_start":238,"line_end":238,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1753},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":92632,"byte_end":92640,"line_start":245,"line_end":245,"column_start":31,"column_end":39},"name":"metadata","qualname":"<SchemaObject>::metadata","value":"pub fn metadata(&mut Self) -> &mut Metadata","parent":null,"children":[],"decl_id":null,"docs":"Returns a mutable reference to this schema's [`Metadata`](#structfield.metadata), creating it if it was `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1754},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":92683,"byte_end":92693,"line_start":246,"line_end":246,"column_start":31,"column_end":41},"name":"subschemas","qualname":"<SchemaObject>::subschemas","value":"pub fn subschemas(&mut Self) -> &mut SubschemaValidation","parent":null,"children":[],"decl_id":null,"docs":"Returns a mutable reference to this schema's [`SubschemaValidation`](#structfield.subschemas), creating it if it was `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1755},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":92747,"byte_end":92753,"line_start":247,"line_end":247,"column_start":31,"column_end":37},"name":"number","qualname":"<SchemaObject>::number","value":"pub fn number(&mut Self) -> &mut NumberValidation","parent":null,"children":[],"decl_id":null,"docs":"Returns a mutable reference to this schema's [`NumberValidation`](#structfield.number), creating it if it was `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1756},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":92804,"byte_end":92810,"line_start":248,"line_end":248,"column_start":31,"column_end":37},"name":"string","qualname":"<SchemaObject>::string","value":"pub fn string(&mut Self) -> &mut StringValidation","parent":null,"children":[],"decl_id":null,"docs":"Returns a mutable reference to this schema's [`StringValidation`](#structfield.string), creating it if it was `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1757},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":92861,"byte_end":92866,"line_start":249,"line_end":249,"column_start":31,"column_end":36},"name":"array","qualname":"<SchemaObject>::array","value":"pub fn array(&mut Self) -> &mut ArrayValidation","parent":null,"children":[],"decl_id":null,"docs":"Returns a mutable reference to this schema's [`ArrayValidation`](#structfield.array), creating it if it was `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1758},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":92916,"byte_end":92922,"line_start":250,"line_end":250,"column_start":31,"column_end":37},"name":"object","qualname":"<SchemaObject>::object","value":"pub fn object(&mut Self) -> &mut ObjectValidation","parent":null,"children":[],"decl_id":null,"docs":"Returns a mutable reference to this schema's [`ObjectValidation`](#structfield.object), creating it if it was `None`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1849},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":93378,"byte_end":93386,"line_start":263,"line_end":263,"column_start":12,"column_end":20},"name":"Metadata","qualname":"::schema::Metadata","value":"Metadata { id, title, description, default, deprecated, read_only, write_only, examples }","parent":null,"children":[{"krate":0,"index":1850},{"krate":0,"index":1851},{"krate":0,"index":1852},{"krate":0,"index":1853},{"krate":0,"index":1854},{"krate":0,"index":1855},{"krate":0,"index":1856},{"krate":0,"index":1857}],"decl_id":null,"docs":" Properties which annotate a [`SchemaObject`] which typically have no effect when an object is being validated against the schema.\n","sig":null,"attributes":[{"value":"/ Properties which annotate a [`SchemaObject`] which typically have no effect when an object is being validated against the schema.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":93059,"byte_end":93192,"line_start":259,"line_end":259,"column_start":1,"column_end":134}},{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":93323,"byte_end":93366,"line_start":262,"line_end":262,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1850},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":93627,"byte_end":93629,"line_start":268,"line_end":268,"column_start":9,"column_end":11},"name":"id","qualname":"::schema::Metadata::id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1849},"children":[],"decl_id":null,"docs":" The `$id` keyword.","sig":null,"attributes":[{"value":"/ The `$id` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":93393,"byte_end":93415,"line_start":264,"line_end":264,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":93420,"byte_end":93423,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 8.2.2. The \"$id\" Keyword](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-8.2.2).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":93428,"byte_end":93548,"line_start":266,"line_end":266,"column_start":5,"column_end":125}},{"value":"serde(rename = \"$id\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":93553,"byte_end":93618,"line_start":267,"line_end":267,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":1851},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":93897,"byte_end":93902,"line_start":273,"line_end":273,"column_start":9,"column_end":14},"name":"title","qualname":"::schema::Metadata::title","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1849},"children":[],"decl_id":null,"docs":" The `title` keyword.","sig":null,"attributes":[{"value":"/ The `title` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":93651,"byte_end":93675,"line_start":269,"line_end":269,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":93680,"byte_end":93683,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 9.1. \"title\" and \"description\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-9.1).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":93688,"byte_end":93834,"line_start":271,"line_end":271,"column_start":5,"column_end":151}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":93839,"byte_end":93888,"line_start":272,"line_end":272,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1852},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":94176,"byte_end":94187,"line_start":278,"line_end":278,"column_start":9,"column_end":20},"name":"description","qualname":"::schema::Metadata::description","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1849},"children":[],"decl_id":null,"docs":" The `description` keyword.","sig":null,"attributes":[{"value":"/ The `description` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":93924,"byte_end":93954,"line_start":274,"line_end":274,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":93959,"byte_end":93962,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 9.1. \"title\" and \"description\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-9.1).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":93967,"byte_end":94113,"line_start":276,"line_end":276,"column_start":5,"column_end":151}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":94118,"byte_end":94167,"line_start":277,"line_end":277,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1853},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":94496,"byte_end":94503,"line_start":286,"line_end":286,"column_start":9,"column_end":16},"name":"default","qualname":"::schema::Metadata::default","value":"std::option::Option<serde_json::Value>","parent":{"krate":0,"index":1849},"children":[],"decl_id":null,"docs":" The `default` keyword.","sig":null,"attributes":[{"value":"/ The `default` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":94209,"byte_end":94235,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":94240,"byte_end":94243,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 9.2. \"default\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-9.2).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":94248,"byte_end":94378,"line_start":281,"line_end":281,"column_start":5,"column_end":135}},{"value":"serde(skip_serializing_if = \"Option::is_none\", deserialize_with =\n\"allow_null\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":94383,"byte_end":94487,"line_start":282,"line_end":285,"column_start":5,"column_end":7}}]},{"kind":"Field","id":{"krate":0,"index":1854},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":94755,"byte_end":94765,"line_start":291,"line_end":291,"column_start":9,"column_end":19},"name":"deprecated","qualname":"::schema::Metadata::deprecated","value":"bool","parent":{"krate":0,"index":1849},"children":[],"decl_id":null,"docs":" The `deprecated` keyword.","sig":null,"attributes":[{"value":"/ The `deprecated` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":94524,"byte_end":94553,"line_start":287,"line_end":287,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":94558,"byte_end":94561,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 9.3. \"deprecated\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-9.3).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":94566,"byte_end":94699,"line_start":289,"line_end":289,"column_start":5,"column_end":138}},{"value":"serde(skip_serializing_if = \"is_false\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":94704,"byte_end":94746,"line_start":290,"line_end":290,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1855},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":95020,"byte_end":95029,"line_start":296,"line_end":296,"column_start":9,"column_end":18},"name":"read_only","qualname":"::schema::Metadata::read_only","value":"bool","parent":{"krate":0,"index":1849},"children":[],"decl_id":null,"docs":" The `readOnly` keyword.","sig":null,"attributes":[{"value":"/ The `readOnly` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":94777,"byte_end":94804,"line_start":292,"line_end":292,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":94809,"byte_end":94812,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 9.4. \"readOnly\" and \"writeOnly\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-9.4).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":94817,"byte_end":94964,"line_start":294,"line_end":294,"column_start":5,"column_end":152}},{"value":"serde(skip_serializing_if = \"is_false\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":94969,"byte_end":95011,"line_start":295,"line_end":295,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1856},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":95285,"byte_end":95295,"line_start":301,"line_end":301,"column_start":9,"column_end":19},"name":"write_only","qualname":"::schema::Metadata::write_only","value":"bool","parent":{"krate":0,"index":1849},"children":[],"decl_id":null,"docs":" The `writeOnly` keyword.","sig":null,"attributes":[{"value":"/ The `writeOnly` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":95041,"byte_end":95069,"line_start":297,"line_end":297,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":95074,"byte_end":95077,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 9.4. \"readOnly\" and \"writeOnly\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-9.4).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":95082,"byte_end":95229,"line_start":299,"line_end":299,"column_start":5,"column_end":152}},{"value":"serde(skip_serializing_if = \"is_false\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":95234,"byte_end":95276,"line_start":300,"line_end":300,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1857},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":95539,"byte_end":95547,"line_start":306,"line_end":306,"column_start":9,"column_end":17},"name":"examples","qualname":"::schema::Metadata::examples","value":"std::vec::Vec<serde_json::Value>","parent":{"krate":0,"index":1849},"children":[],"decl_id":null,"docs":" The `examples` keyword.","sig":null,"attributes":[{"value":"/ The `examples` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":95307,"byte_end":95334,"line_start":302,"line_end":302,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":95339,"byte_end":95342,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 9.5. \"examples\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-9.5).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":95347,"byte_end":95478,"line_start":304,"line_end":304,"column_start":5,"column_end":136}},{"value":"serde(skip_serializing_if = \"Vec::is_empty\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":95483,"byte_end":95530,"line_start":305,"line_end":305,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1927},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":95935,"byte_end":95954,"line_start":318,"line_end":318,"column_start":12,"column_end":31},"name":"SubschemaValidation","qualname":"::schema::SubschemaValidation","value":"SubschemaValidation { all_of, any_of, one_of, not, if_schema, then_schema, else_schema }","parent":null,"children":[{"krate":0,"index":1928},{"krate":0,"index":1929},{"krate":0,"index":1930},{"krate":0,"index":1931},{"krate":0,"index":1932},{"krate":0,"index":1933},{"krate":0,"index":1934}],"decl_id":null,"docs":" Properties of a [`SchemaObject`] which define validation assertions in terms of other schemas.\n","sig":null,"attributes":[{"value":"/ Properties of a [`SchemaObject`] which define validation assertions in terms of other schemas.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":95651,"byte_end":95749,"line_start":314,"line_end":314,"column_start":1,"column_end":99}},{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":95880,"byte_end":95923,"line_start":317,"line_end":317,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1928},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":96175,"byte_end":96181,"line_start":323,"line_end":323,"column_start":9,"column_end":15},"name":"all_of","qualname":"::schema::SubschemaValidation::all_of","value":"std::option::Option<std::vec::Vec<schema::Schema>>","parent":{"krate":0,"index":1927},"children":[],"decl_id":null,"docs":" The `allOf` keyword.","sig":null,"attributes":[{"value":"/ The `allOf` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":95961,"byte_end":95985,"line_start":319,"line_end":319,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":95990,"byte_end":95993,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.2.1.1. \"allOf\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.2.1.1).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":95998,"byte_end":96112,"line_start":321,"line_end":321,"column_start":5,"column_end":119}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":96117,"byte_end":96166,"line_start":322,"line_end":322,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1929},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":96422,"byte_end":96428,"line_start":328,"line_end":328,"column_start":9,"column_end":15},"name":"any_of","qualname":"::schema::SubschemaValidation::any_of","value":"std::option::Option<std::vec::Vec<schema::Schema>>","parent":{"krate":0,"index":1927},"children":[],"decl_id":null,"docs":" The `anyOf` keyword.","sig":null,"attributes":[{"value":"/ The `anyOf` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":96208,"byte_end":96232,"line_start":324,"line_end":324,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":96237,"byte_end":96240,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.2.1.2. \"anyOf\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.2.1.2).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":96245,"byte_end":96359,"line_start":326,"line_end":326,"column_start":5,"column_end":119}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":96364,"byte_end":96413,"line_start":327,"line_end":327,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1930},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":96669,"byte_end":96675,"line_start":333,"line_end":333,"column_start":9,"column_end":15},"name":"one_of","qualname":"::schema::SubschemaValidation::one_of","value":"std::option::Option<std::vec::Vec<schema::Schema>>","parent":{"krate":0,"index":1927},"children":[],"decl_id":null,"docs":" The `oneOf` keyword.","sig":null,"attributes":[{"value":"/ The `oneOf` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":96455,"byte_end":96479,"line_start":329,"line_end":329,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":96484,"byte_end":96487,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.2.1.3. \"oneOf\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.2.1.3).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":96492,"byte_end":96606,"line_start":331,"line_end":331,"column_start":5,"column_end":119}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":96611,"byte_end":96660,"line_start":332,"line_end":332,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1931},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":96912,"byte_end":96915,"line_start":338,"line_end":338,"column_start":9,"column_end":12},"name":"not","qualname":"::schema::SubschemaValidation::not","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":1927},"children":[],"decl_id":null,"docs":" The `not` keyword.","sig":null,"attributes":[{"value":"/ The `not` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":96702,"byte_end":96724,"line_start":334,"line_end":334,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":96729,"byte_end":96732,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.2.1.4. \"not\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.2.1.4).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":96737,"byte_end":96849,"line_start":336,"line_end":336,"column_start":5,"column_end":117}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":96854,"byte_end":96903,"line_start":337,"line_end":337,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1932},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":97165,"byte_end":97174,"line_start":343,"line_end":343,"column_start":9,"column_end":18},"name":"if_schema","qualname":"::schema::SubschemaValidation::if_schema","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":1927},"children":[],"decl_id":null,"docs":" The `if` keyword.","sig":null,"attributes":[{"value":"/ The `if` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":96942,"byte_end":96963,"line_start":339,"line_end":339,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":96968,"byte_end":96971,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.2.2.1. \"if\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.2.2.1).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":96976,"byte_end":97087,"line_start":341,"line_end":341,"column_start":5,"column_end":116}},{"value":"serde(rename = \"if\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":97092,"byte_end":97156,"line_start":342,"line_end":342,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1933},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":97430,"byte_end":97441,"line_start":348,"line_end":348,"column_start":9,"column_end":20},"name":"then_schema","qualname":"::schema::SubschemaValidation::then_schema","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":1927},"children":[],"decl_id":null,"docs":" The `then` keyword.","sig":null,"attributes":[{"value":"/ The `then` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":97201,"byte_end":97224,"line_start":344,"line_end":344,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":97229,"byte_end":97232,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.2.2.2. \"then\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.2.2.2).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":97237,"byte_end":97350,"line_start":346,"line_end":346,"column_start":5,"column_end":118}},{"value":"serde(rename = \"then\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":97355,"byte_end":97421,"line_start":347,"line_end":347,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":1934},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":97697,"byte_end":97708,"line_start":353,"line_end":353,"column_start":9,"column_end":20},"name":"else_schema","qualname":"::schema::SubschemaValidation::else_schema","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":1927},"children":[],"decl_id":null,"docs":" The `else` keyword.","sig":null,"attributes":[{"value":"/ The `else` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":97468,"byte_end":97491,"line_start":349,"line_end":349,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":97496,"byte_end":97499,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.2.2.3. \"else\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.2.2.3).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":97504,"byte_end":97617,"line_start":351,"line_end":351,"column_start":5,"column_end":118}},{"value":"serde(rename = \"else\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":97622,"byte_end":97688,"line_start":352,"line_end":352,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":2000},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":98004,"byte_end":98020,"line_start":360,"line_end":360,"column_start":12,"column_end":28},"name":"NumberValidation","qualname":"::schema::NumberValidation","value":"NumberValidation { multiple_of, maximum, exclusive_maximum, minimum, exclusive_minimum }","parent":null,"children":[{"krate":0,"index":2001},{"krate":0,"index":2002},{"krate":0,"index":2003},{"krate":0,"index":2004},{"krate":0,"index":2005}],"decl_id":null,"docs":" Properties of a [`SchemaObject`] which define validation assertions for numbers.\n","sig":null,"attributes":[{"value":"/ Properties of a [`SchemaObject`] which define validation assertions for numbers.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":97734,"byte_end":97818,"line_start":356,"line_end":356,"column_start":1,"column_end":85}},{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":97949,"byte_end":97992,"line_start":359,"line_end":359,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2001},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":98269,"byte_end":98280,"line_start":365,"line_end":365,"column_start":9,"column_end":20},"name":"multiple_of","qualname":"::schema::NumberValidation::multiple_of","value":"std::option::Option<f64>","parent":{"krate":0,"index":2000},"children":[],"decl_id":null,"docs":" The `multipleOf` keyword.","sig":null,"attributes":[{"value":"/ The `multipleOf` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":98027,"byte_end":98056,"line_start":361,"line_end":361,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":98061,"byte_end":98064,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.2.1. \"multipleOf\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.2.1).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":98069,"byte_end":98206,"line_start":363,"line_end":363,"column_start":5,"column_end":142}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":98211,"byte_end":98260,"line_start":364,"line_end":364,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2002},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":98535,"byte_end":98542,"line_start":370,"line_end":370,"column_start":9,"column_end":16},"name":"maximum","qualname":"::schema::NumberValidation::maximum","value":"std::option::Option<f64>","parent":{"krate":0,"index":2000},"children":[],"decl_id":null,"docs":" The `maximum` keyword.","sig":null,"attributes":[{"value":"/ The `maximum` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":98299,"byte_end":98325,"line_start":366,"line_end":366,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":98330,"byte_end":98333,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.2.2. \"maximum\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.2.2).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":98338,"byte_end":98472,"line_start":368,"line_end":368,"column_start":5,"column_end":139}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":98477,"byte_end":98526,"line_start":369,"line_end":369,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2003},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":98815,"byte_end":98832,"line_start":375,"line_end":375,"column_start":9,"column_end":26},"name":"exclusive_maximum","qualname":"::schema::NumberValidation::exclusive_maximum","value":"std::option::Option<f64>","parent":{"krate":0,"index":2000},"children":[],"decl_id":null,"docs":" The `exclusiveMaximum` keyword.","sig":null,"attributes":[{"value":"/ The `exclusiveMaximum` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":98561,"byte_end":98596,"line_start":371,"line_end":371,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":98601,"byte_end":98604,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.2.3. \"exclusiveMaximum\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.2.3).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":98609,"byte_end":98752,"line_start":373,"line_end":373,"column_start":5,"column_end":148}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":98757,"byte_end":98806,"line_start":374,"line_end":374,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2004},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":99087,"byte_end":99094,"line_start":380,"line_end":380,"column_start":9,"column_end":16},"name":"minimum","qualname":"::schema::NumberValidation::minimum","value":"std::option::Option<f64>","parent":{"krate":0,"index":2000},"children":[],"decl_id":null,"docs":" The `minimum` keyword.","sig":null,"attributes":[{"value":"/ The `minimum` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":98851,"byte_end":98877,"line_start":376,"line_end":376,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":98882,"byte_end":98885,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.2.4. \"minimum\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.2.4).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":98890,"byte_end":99024,"line_start":378,"line_end":378,"column_start":5,"column_end":139}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":99029,"byte_end":99078,"line_start":379,"line_end":379,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2005},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":99367,"byte_end":99384,"line_start":385,"line_end":385,"column_start":9,"column_end":26},"name":"exclusive_minimum","qualname":"::schema::NumberValidation::exclusive_minimum","value":"std::option::Option<f64>","parent":{"krate":0,"index":2000},"children":[],"decl_id":null,"docs":" The `exclusiveMinimum` keyword.","sig":null,"attributes":[{"value":"/ The `exclusiveMinimum` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":99113,"byte_end":99148,"line_start":381,"line_end":381,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":99153,"byte_end":99156,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.2.5. \"exclusiveMinimum\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.2.5).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":99161,"byte_end":99304,"line_start":383,"line_end":383,"column_start":5,"column_end":148}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":99309,"byte_end":99358,"line_start":384,"line_end":384,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":2067},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":99672,"byte_end":99688,"line_start":392,"line_end":392,"column_start":12,"column_end":28},"name":"StringValidation","qualname":"::schema::StringValidation","value":"StringValidation { max_length, min_length, pattern }","parent":null,"children":[{"krate":0,"index":2068},{"krate":0,"index":2069},{"krate":0,"index":2070}],"decl_id":null,"docs":" Properties of a [`SchemaObject`] which define validation assertions for strings.\n","sig":null,"attributes":[{"value":"/ Properties of a [`SchemaObject`] which define validation assertions for strings.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":99402,"byte_end":99486,"line_start":388,"line_end":388,"column_start":1,"column_end":85}},{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":99617,"byte_end":99660,"line_start":391,"line_end":391,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2068},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":99935,"byte_end":99945,"line_start":397,"line_end":397,"column_start":9,"column_end":19},"name":"max_length","qualname":"::schema::StringValidation::max_length","value":"std::option::Option<u32>","parent":{"krate":0,"index":2067},"children":[],"decl_id":null,"docs":" The `maxLength` keyword.","sig":null,"attributes":[{"value":"/ The `maxLength` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":99695,"byte_end":99723,"line_start":393,"line_end":393,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":99728,"byte_end":99731,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.3.1. \"maxLength\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.3.1).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":99736,"byte_end":99872,"line_start":395,"line_end":395,"column_start":5,"column_end":141}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":99877,"byte_end":99926,"line_start":396,"line_end":396,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2069},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":100204,"byte_end":100214,"line_start":402,"line_end":402,"column_start":9,"column_end":19},"name":"min_length","qualname":"::schema::StringValidation::min_length","value":"std::option::Option<u32>","parent":{"krate":0,"index":2067},"children":[],"decl_id":null,"docs":" The `minLength` keyword.","sig":null,"attributes":[{"value":"/ The `minLength` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":99964,"byte_end":99992,"line_start":398,"line_end":398,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":99997,"byte_end":100000,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.3.2. \"minLength\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.3.2).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":100005,"byte_end":100141,"line_start":400,"line_end":400,"column_start":5,"column_end":141}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":100146,"byte_end":100195,"line_start":401,"line_end":401,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2070},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":100469,"byte_end":100476,"line_start":407,"line_end":407,"column_start":9,"column_end":16},"name":"pattern","qualname":"::schema::StringValidation::pattern","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":2067},"children":[],"decl_id":null,"docs":" The `pattern` keyword.","sig":null,"attributes":[{"value":"/ The `pattern` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":100233,"byte_end":100259,"line_start":403,"line_end":403,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":100264,"byte_end":100267,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.3.3. \"pattern\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.3.3).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":100272,"byte_end":100406,"line_start":405,"line_end":405,"column_start":5,"column_end":139}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":100411,"byte_end":100460,"line_start":406,"line_end":406,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":2138},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":100766,"byte_end":100781,"line_start":414,"line_end":414,"column_start":12,"column_end":27},"name":"ArrayValidation","qualname":"::schema::ArrayValidation","value":"ArrayValidation { items, additional_items, max_items, min_items, unique_items, contains }","parent":null,"children":[{"krate":0,"index":2139},{"krate":0,"index":2140},{"krate":0,"index":2141},{"krate":0,"index":2142},{"krate":0,"index":2143},{"krate":0,"index":2144}],"decl_id":null,"docs":" Properties of a [`SchemaObject`] which define validation assertions for arrays.\n","sig":null,"attributes":[{"value":"/ Properties of a [`SchemaObject`] which define validation assertions for arrays.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":100497,"byte_end":100580,"line_start":410,"line_end":410,"column_start":1,"column_end":84}},{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":100711,"byte_end":100754,"line_start":413,"line_end":413,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2139},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":101002,"byte_end":101007,"line_start":419,"line_end":419,"column_start":9,"column_end":14},"name":"items","qualname":"::schema::ArrayValidation::items","value":"std::option::Option<schema::SingleOrVec<schema::Schema>>","parent":{"krate":0,"index":2138},"children":[],"decl_id":null,"docs":" The `items` keyword.","sig":null,"attributes":[{"value":"/ The `items` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":100788,"byte_end":100812,"line_start":415,"line_end":415,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":100817,"byte_end":100820,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.3.1.1. \"items\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.3.1.1).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":100825,"byte_end":100939,"line_start":417,"line_end":417,"column_start":5,"column_end":119}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":100944,"byte_end":100993,"line_start":418,"line_end":418,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2140},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":101276,"byte_end":101292,"line_start":424,"line_end":424,"column_start":9,"column_end":25},"name":"additional_items","qualname":"::schema::ArrayValidation::additional_items","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":2138},"children":[],"decl_id":null,"docs":" The `additionalItems` keyword.","sig":null,"attributes":[{"value":"/ The `additionalItems` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":101042,"byte_end":101076,"line_start":420,"line_end":420,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":101081,"byte_end":101084,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.3.1.2. \"additionalItems\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.3.1.2).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":101089,"byte_end":101213,"line_start":422,"line_end":422,"column_start":5,"column_end":129}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":101218,"byte_end":101267,"line_start":423,"line_end":423,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2141},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":101557,"byte_end":101566,"line_start":429,"line_end":429,"column_start":9,"column_end":18},"name":"max_items","qualname":"::schema::ArrayValidation::max_items","value":"std::option::Option<u32>","parent":{"krate":0,"index":2138},"children":[],"decl_id":null,"docs":" The `maxItems` keyword.","sig":null,"attributes":[{"value":"/ The `maxItems` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":101319,"byte_end":101346,"line_start":425,"line_end":425,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":101351,"byte_end":101354,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.4.1. \"maxItems\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.4.1).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":101359,"byte_end":101494,"line_start":427,"line_end":427,"column_start":5,"column_end":140}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":101499,"byte_end":101548,"line_start":428,"line_end":428,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2142},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":101823,"byte_end":101832,"line_start":434,"line_end":434,"column_start":9,"column_end":18},"name":"min_items","qualname":"::schema::ArrayValidation::min_items","value":"std::option::Option<u32>","parent":{"krate":0,"index":2138},"children":[],"decl_id":null,"docs":" The `minItems` keyword.","sig":null,"attributes":[{"value":"/ The `minItems` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":101585,"byte_end":101612,"line_start":430,"line_end":430,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":101617,"byte_end":101620,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.4.2. \"minItems\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.4.2).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":101625,"byte_end":101760,"line_start":432,"line_end":432,"column_start":5,"column_end":140}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":101765,"byte_end":101814,"line_start":433,"line_end":433,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2143},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":102095,"byte_end":102107,"line_start":439,"line_end":439,"column_start":9,"column_end":21},"name":"unique_items","qualname":"::schema::ArrayValidation::unique_items","value":"std::option::Option<bool>","parent":{"krate":0,"index":2138},"children":[],"decl_id":null,"docs":" The `uniqueItems` keyword.","sig":null,"attributes":[{"value":"/ The `uniqueItems` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":101851,"byte_end":101881,"line_start":435,"line_end":435,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":101886,"byte_end":101889,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.4.3. \"uniqueItems\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.4.3).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":101894,"byte_end":102032,"line_start":437,"line_end":437,"column_start":5,"column_end":143}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":102037,"byte_end":102086,"line_start":438,"line_end":438,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2144},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":102347,"byte_end":102355,"line_start":444,"line_end":444,"column_start":9,"column_end":17},"name":"contains","qualname":"::schema::ArrayValidation::contains","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":2138},"children":[],"decl_id":null,"docs":" The `contains` keyword.","sig":null,"attributes":[{"value":"/ The `contains` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":102127,"byte_end":102154,"line_start":440,"line_end":440,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":102159,"byte_end":102162,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.3.1.4. \"contains\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.3.1.4).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":102167,"byte_end":102284,"line_start":442,"line_end":442,"column_start":5,"column_end":122}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":102289,"byte_end":102338,"line_start":443,"line_end":443,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":2214},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":102651,"byte_end":102667,"line_start":451,"line_end":451,"column_start":12,"column_end":28},"name":"ObjectValidation","qualname":"::schema::ObjectValidation","value":"ObjectValidation { max_properties, min_properties, required, properties, pattern_properties, additional_properties, property_names }","parent":null,"children":[{"krate":0,"index":2215},{"krate":0,"index":2216},{"krate":0,"index":2217},{"krate":0,"index":2218},{"krate":0,"index":2219},{"krate":0,"index":2220},{"krate":0,"index":2221}],"decl_id":null,"docs":" Properties of a [`SchemaObject`] which define validation assertions for objects.\n","sig":null,"attributes":[{"value":"/ Properties of a [`SchemaObject`] which define validation assertions for objects.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":102381,"byte_end":102465,"line_start":447,"line_end":447,"column_start":1,"column_end":85}},{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":102596,"byte_end":102639,"line_start":450,"line_end":450,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2215},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":102922,"byte_end":102936,"line_start":456,"line_end":456,"column_start":9,"column_end":23},"name":"max_properties","qualname":"::schema::ObjectValidation::max_properties","value":"std::option::Option<u32>","parent":{"krate":0,"index":2214},"children":[],"decl_id":null,"docs":" The `maxProperties` keyword.","sig":null,"attributes":[{"value":"/ The `maxProperties` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":102674,"byte_end":102706,"line_start":452,"line_end":452,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":102711,"byte_end":102714,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.5.1. \"maxProperties\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.5.1).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":102719,"byte_end":102859,"line_start":454,"line_end":454,"column_start":5,"column_end":145}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":102864,"byte_end":102913,"line_start":455,"line_end":455,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2216},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":103203,"byte_end":103217,"line_start":461,"line_end":461,"column_start":9,"column_end":23},"name":"min_properties","qualname":"::schema::ObjectValidation::min_properties","value":"std::option::Option<u32>","parent":{"krate":0,"index":2214},"children":[],"decl_id":null,"docs":" The `minProperties` keyword.","sig":null,"attributes":[{"value":"/ The `minProperties` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":102955,"byte_end":102987,"line_start":457,"line_end":457,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":102992,"byte_end":102995,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.5.2. \"minProperties\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.5.2).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":103000,"byte_end":103140,"line_start":459,"line_end":459,"column_start":5,"column_end":145}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":103145,"byte_end":103194,"line_start":460,"line_end":460,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2217},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":103472,"byte_end":103480,"line_start":466,"line_end":466,"column_start":9,"column_end":17},"name":"required","qualname":"::schema::ObjectValidation::required","value":"std::collections::BTreeSet<std::string::String>","parent":{"krate":0,"index":2214},"children":[],"decl_id":null,"docs":" The `required` keyword.","sig":null,"attributes":[{"value":"/ The `required` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":103236,"byte_end":103263,"line_start":462,"line_end":462,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":103268,"byte_end":103271,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.5.3. \"required\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.5.3).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":103276,"byte_end":103411,"line_start":464,"line_end":464,"column_start":5,"column_end":140}},{"value":"serde(skip_serializing_if = \"Set::is_empty\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":103416,"byte_end":103463,"line_start":465,"line_end":465,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2218},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":103721,"byte_end":103731,"line_start":471,"line_end":471,"column_start":9,"column_end":19},"name":"properties","qualname":"::schema::ObjectValidation::properties","value":"std::collections::BTreeMap<std::string::String, schema::Schema>","parent":{"krate":0,"index":2214},"children":[],"decl_id":null,"docs":" The `properties` keyword.","sig":null,"attributes":[{"value":"/ The `properties` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":103499,"byte_end":103528,"line_start":467,"line_end":467,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":103533,"byte_end":103536,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.3.2.1. \"properties\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.3.2.1).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":103541,"byte_end":103660,"line_start":469,"line_end":469,"column_start":5,"column_end":124}},{"value":"serde(skip_serializing_if = \"Map::is_empty\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":103665,"byte_end":103712,"line_start":470,"line_end":470,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2219},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":103994,"byte_end":104012,"line_start":476,"line_end":476,"column_start":9,"column_end":27},"name":"pattern_properties","qualname":"::schema::ObjectValidation::pattern_properties","value":"std::collections::BTreeMap<std::string::String, schema::Schema>","parent":{"krate":0,"index":2214},"children":[],"decl_id":null,"docs":" The `patternProperties` keyword.","sig":null,"attributes":[{"value":"/ The `patternProperties` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":103758,"byte_end":103794,"line_start":472,"line_end":472,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":103799,"byte_end":103802,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.3.2.2. \"patternProperties\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.3.2.2).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":103807,"byte_end":103933,"line_start":474,"line_end":474,"column_start":5,"column_end":131}},{"value":"serde(skip_serializing_if = \"Map::is_empty\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":103938,"byte_end":103985,"line_start":475,"line_end":475,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2220},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":104283,"byte_end":104304,"line_start":481,"line_end":481,"column_start":9,"column_end":30},"name":"additional_properties","qualname":"::schema::ObjectValidation::additional_properties","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":2214},"children":[],"decl_id":null,"docs":" The `additionalProperties` keyword.","sig":null,"attributes":[{"value":"/ The `additionalProperties` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":104039,"byte_end":104078,"line_start":477,"line_end":477,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":104083,"byte_end":104086,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.3.2.3. \"additionalProperties\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.3.2.3).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":104091,"byte_end":104220,"line_start":479,"line_end":479,"column_start":5,"column_end":134}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":104225,"byte_end":104274,"line_start":480,"line_end":480,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2221},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":104561,"byte_end":104575,"line_start":486,"line_end":486,"column_start":9,"column_end":23},"name":"property_names","qualname":"::schema::ObjectValidation::property_names","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":2214},"children":[],"decl_id":null,"docs":" The `propertyNames` keyword.","sig":null,"attributes":[{"value":"/ The `propertyNames` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":104331,"byte_end":104363,"line_start":482,"line_end":482,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":104368,"byte_end":104371,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.3.2.5. \"propertyNames\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.3.2.5).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":104376,"byte_end":104498,"line_start":484,"line_end":484,"column_start":5,"column_end":127}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":104503,"byte_end":104552,"line_start":485,"line_end":485,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2296},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":105004,"byte_end":105008,"line_start":496,"line_end":496,"column_start":5,"column_end":9},"name":"Null","qualname":"::schema::InstanceType::Null","value":"InstanceType::Null","parent":{"krate":0,"index":2295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2298},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":105014,"byte_end":105021,"line_start":497,"line_end":497,"column_start":5,"column_end":12},"name":"Boolean","qualname":"::schema::InstanceType::Boolean","value":"InstanceType::Boolean","parent":{"krate":0,"index":2295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2300},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":105027,"byte_end":105033,"line_start":498,"line_end":498,"column_start":5,"column_end":11},"name":"Object","qualname":"::schema::InstanceType::Object","value":"InstanceType::Object","parent":{"krate":0,"index":2295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2302},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":105039,"byte_end":105044,"line_start":499,"line_end":499,"column_start":5,"column_end":10},"name":"Array","qualname":"::schema::InstanceType::Array","value":"InstanceType::Array","parent":{"krate":0,"index":2295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2304},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":105050,"byte_end":105056,"line_start":500,"line_end":500,"column_start":5,"column_end":11},"name":"Number","qualname":"::schema::InstanceType::Number","value":"InstanceType::Number","parent":{"krate":0,"index":2295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2306},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":105062,"byte_end":105068,"line_start":501,"line_end":501,"column_start":5,"column_end":11},"name":"String","qualname":"::schema::InstanceType::String","value":"InstanceType::String","parent":{"krate":0,"index":2295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2308},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":105074,"byte_end":105081,"line_start":502,"line_end":502,"column_start":5,"column_end":12},"name":"Integer","qualname":"::schema::InstanceType::Integer","value":"InstanceType::Integer","parent":{"krate":0,"index":2295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2295},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":104985,"byte_end":104997,"line_start":495,"line_end":495,"column_start":10,"column_end":22},"name":"InstanceType","qualname":"::schema::InstanceType","value":"pub enum InstanceType {\n    Null,\n    Boolean,\n    Object,\n    Array,\n    Number,\n    String,\n    Integer,\n}","parent":null,"children":[{"krate":0,"index":2296},{"krate":0,"index":2298},{"krate":0,"index":2300},{"krate":0,"index":2302},{"krate":0,"index":2304},{"krate":0,"index":2306},{"krate":0,"index":2308}],"decl_id":null,"docs":" The possible types of values in JSON Schema documents.","sig":null,"attributes":[{"value":"/ The possible types of values in JSON Schema documents.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":104601,"byte_end":104659,"line_start":489,"line_end":489,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":104660,"byte_end":104663,"line_start":490,"line_end":490,"column_start":1,"column_end":4}},{"value":"/ See [JSON Schema 4.2.1. Instance Data Model](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-4.2.1).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":104664,"byte_end":104786,"line_start":491,"line_end":491,"column_start":1,"column_end":123}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":104941,"byte_end":104975,"line_start":494,"line_end":494,"column_start":1,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2350},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":105450,"byte_end":105456,"line_start":512,"line_end":512,"column_start":5,"column_end":11},"name":"Single","qualname":"::schema::SingleOrVec::Single","value":"SingleOrVec::Single(Box<T>)","parent":{"krate":0,"index":2348},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2353},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":105470,"byte_end":105473,"line_start":513,"line_end":513,"column_start":5,"column_end":8},"name":"Vec","qualname":"::schema::SingleOrVec::Vec","value":"SingleOrVec::Vec(Vec<T>)","parent":{"krate":0,"index":2348},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2348},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":105429,"byte_end":105440,"line_start":511,"line_end":511,"column_start":10,"column_end":21},"name":"SingleOrVec","qualname":"::schema::SingleOrVec","value":"pub enum SingleOrVec<T> { Single(Box<T>), Vec(Vec<T>), }","parent":null,"children":[{"krate":0,"index":2350},{"krate":0,"index":2353}],"decl_id":null,"docs":" A type which can be serialized as a single item, or multiple items.","sig":null,"attributes":[{"value":"/ A type which can be serialized as a single item, or multiple items.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":105086,"byte_end":105157,"line_start":505,"line_end":505,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":105158,"byte_end":105161,"line_start":506,"line_end":506,"column_start":1,"column_end":4}},{"value":"/ In some contexts, a `Single` may be semantically distinct from a `Vec` containing only item.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":105162,"byte_end":105258,"line_start":507,"line_end":507,"column_start":1,"column_end":97}},{"value":"serde(untagged)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":105401,"byte_end":105419,"line_start":510,"line_end":510,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":106247,"byte_end":106255,"line_start":545,"line_end":545,"column_start":12,"column_end":20},"name":"contains","qualname":"<SingleOrVec<T>>::contains","value":"pub fn contains(&Self, &T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is either a `Single` equal to `x`, or a `Vec` containing `x`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is either a `Single` equal to `x`, or a `Vec` containing `x`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":105767,"byte_end":105857,"line_start":529,"line_end":529,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":105862,"byte_end":105865,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":105870,"byte_end":105884,"line_start":531,"line_end":531,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":105889,"byte_end":105892,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":105897,"byte_end":105904,"line_start":533,"line_end":533,"column_start":5,"column_end":12}},{"value":"/ use schemars::schema::SingleOrVec;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":105909,"byte_end":105947,"line_start":534,"line_end":534,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":105952,"byte_end":105955,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ let s = SingleOrVec::from(10);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":105960,"byte_end":105994,"line_start":536,"line_end":536,"column_start":5,"column_end":39}},{"value":"/ assert!(s.contains(&10));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":105999,"byte_end":106028,"line_start":537,"line_end":537,"column_start":5,"column_end":34}},{"value":"/ assert!(!s.contains(&20));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":106033,"byte_end":106063,"line_start":538,"line_end":538,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":106068,"byte_end":106071,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ let v = SingleOrVec::from(vec![10, 20]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":106076,"byte_end":106120,"line_start":540,"line_end":540,"column_start":5,"column_end":49}},{"value":"/ assert!(v.contains(&10));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":106125,"byte_end":106154,"line_start":541,"line_end":541,"column_start":5,"column_end":34}},{"value":"/ assert!(v.contains(&20));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":106159,"byte_end":106188,"line_start":542,"line_end":542,"column_start":5,"column_end":34}},{"value":"/ assert!(!v.contains(&30));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":106193,"byte_end":106223,"line_start":543,"line_end":543,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":106228,"byte_end":106235,"line_start":544,"line_end":544,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":597},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"visit","qualname":"::visit","value":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","parent":null,"children":[{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":602},{"krate":0,"index":605},{"krate":0,"index":608},{"krate":0,"index":611},{"krate":0,"index":615},{"krate":0,"index":617},{"krate":0,"index":619},{"krate":0,"index":621},{"krate":0,"index":623},{"krate":0,"index":625},{"krate":0,"index":627},{"krate":0,"index":2356},{"krate":0,"index":2358},{"krate":0,"index":2360},{"krate":0,"index":629},{"krate":0,"index":2362},{"krate":0,"index":2364},{"krate":0,"index":2366},{"krate":0,"index":632},{"krate":0,"index":2368},{"krate":0,"index":2370},{"krate":0,"index":2372},{"krate":0,"index":634}],"decl_id":null,"docs":"Contains the [`Visitor`] trait, used to recursively modify a constructed schema and its subschemas.","sig":null,"attributes":[{"value":"*\nContains the [`Visitor`] trait, used to recursively modify a constructed schema and its subschemas.\n\nSometimes you may want to apply a change to a schema, as well as all schemas contained within it.\nThe easiest way to achieve this is by defining a type that implements [`Visitor`].\nAll methods of `Visitor` have a default implementation that makes no change but recursively visits all subschemas.\nWhen overriding one of these methods, you will *usually* want to still call this default implementation.\n\n# Example\nTo add a custom property to all schemas:\n```\nuse schemars::schema::SchemaObject;\nuse schemars::visit::{Visitor, visit_schema_object};\n\npub struct MyVisitor;\n\nimpl Visitor for MyVisitor {\n    fn visit_schema_object(&mut self, schema: &mut SchemaObject) {\n        // First, make our change to this schema\n        schema.extensions.insert(\"my_property\".to_string(), serde_json::json!(\"hello world\"));\n\n        // Then delegate to default implementation to visit any subschemas\n        visit_schema_object(self, schema);\n    }\n}\n```\n*/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":106424,"byte_end":107472,"line_start":1,"line_end":27,"column_start":1,"column_end":3}}]},{"kind":"Trait","id":{"krate":0,"index":611},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":107630,"byte_end":107637,"line_start":31,"line_end":31,"column_start":11,"column_end":18},"name":"Visitor","qualname":"::visit::Visitor","value":"Visitor","parent":null,"children":[{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614}],"decl_id":null,"docs":" Trait used to recursively modify a constructed schema and its subschemas.\n","sig":null,"attributes":[{"value":"/ Trait used to recursively modify a constructed schema and its subschemas.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":107542,"byte_end":107619,"line_start":30,"line_end":30,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":107867,"byte_end":107884,"line_start":35,"line_end":35,"column_start":8,"column_end":25},"name":"visit_root_schema","qualname":"::visit::Visitor::visit_root_schema","value":"pub fn visit_root_schema(&mut Self, &mut RootSchema)","parent":{"krate":0,"index":611},"children":[],"decl_id":null,"docs":" Override this method to modify a [`RootSchema`] and (optionally) its subschemas.","sig":null,"attributes":[{"value":"/ Override this method to modify a [`RootSchema`] and (optionally) its subschemas.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":107644,"byte_end":107728,"line_start":32,"line_end":32,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":107733,"byte_end":107736,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ When overriding this method, you will usually want to call the [`visit_root_schema`] function to visit subschemas.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":107741,"byte_end":107859,"line_start":34,"line_end":34,"column_start":5,"column_end":123}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":108184,"byte_end":108196,"line_start":42,"line_end":42,"column_start":8,"column_end":20},"name":"visit_schema","qualname":"::visit::Visitor::visit_schema","value":"pub fn visit_schema(&mut Self, &mut Schema)","parent":{"krate":0,"index":611},"children":[],"decl_id":null,"docs":" Override this method to modify a [`Schema`] and (optionally) its subschemas.","sig":null,"attributes":[{"value":"/ Override this method to modify a [`Schema`] and (optionally) its subschemas.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":107970,"byte_end":108050,"line_start":39,"line_end":39,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":108055,"byte_end":108058,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ When overriding this method, you will usually want to call the [`visit_schema`] function to visit subschemas.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":108063,"byte_end":108176,"line_start":41,"line_end":41,"column_start":5,"column_end":118}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":108504,"byte_end":108523,"line_start":49,"line_end":49,"column_start":8,"column_end":27},"name":"visit_schema_object","qualname":"::visit::Visitor::visit_schema_object","value":"pub fn visit_schema_object(&mut Self, &mut SchemaObject)","parent":{"krate":0,"index":611},"children":[],"decl_id":null,"docs":" Override this method to modify a [`SchemaObject`] and (optionally) its subschemas.","sig":null,"attributes":[{"value":"/ Override this method to modify a [`SchemaObject`] and (optionally) its subschemas.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":108277,"byte_end":108363,"line_start":46,"line_end":46,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":108368,"byte_end":108371,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ When overriding this method, you will usually want to call the [`visit_schema_object`] function to visit subschemas.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":108376,"byte_end":108496,"line_start":48,"line_end":48,"column_start":5,"column_end":125}}]},{"kind":"Function","id":{"krate":0,"index":615},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":108671,"byte_end":108688,"line_start":55,"line_end":55,"column_start":8,"column_end":25},"name":"visit_root_schema","qualname":"::visit::visit_root_schema","value":"pub fn visit_root_schema<V: Visitor + ?Sized>(&mut V, &mut RootSchema)","parent":null,"children":[],"decl_id":null,"docs":" Visits all subschemas of the [`RootSchema`].\n","sig":null,"attributes":[{"value":"/ Visits all subschemas of the [`RootSchema`].","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":108615,"byte_end":108663,"line_start":54,"line_end":54,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":617},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":108894,"byte_end":108906,"line_start":61,"line_end":61,"column_start":8,"column_end":20},"name":"visit_schema","qualname":"::visit::visit_schema","value":"pub fn visit_schema<V: Visitor + ?Sized>(&mut V, &mut Schema)","parent":null,"children":[],"decl_id":null,"docs":" Visits all subschemas of the [`Schema`].\n","sig":null,"attributes":[{"value":"/ Visits all subschemas of the [`Schema`].","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":108842,"byte_end":108886,"line_start":60,"line_end":60,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":619},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":109112,"byte_end":109131,"line_start":68,"line_end":68,"column_start":8,"column_end":27},"name":"visit_schema_object","qualname":"::visit::visit_schema_object","value":"pub fn visit_schema_object<V: Visitor + ?Sized>(&mut V, &mut SchemaObject)","parent":null,"children":[],"decl_id":null,"docs":" Visits all subschemas of the [`SchemaObject`].\n","sig":null,"attributes":[{"value":"/ Visits all subschemas of the [`SchemaObject`].","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":109054,"byte_end":109104,"line_start":67,"line_end":67,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":2356},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":111041,"byte_end":111059,"line_start":129,"line_end":129,"column_start":12,"column_end":30},"name":"ReplaceBoolSchemas","qualname":"::visit::ReplaceBoolSchemas","value":"ReplaceBoolSchemas { skip_additional_properties }","parent":null,"children":[{"krate":0,"index":2357}],"decl_id":null,"docs":" This visitor will replace all boolean JSON Schemas with equivalent object schemas.","sig":null,"attributes":[{"value":"/ This visitor will replace all boolean JSON Schemas with equivalent object schemas.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":110808,"byte_end":110894,"line_start":125,"line_end":125,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":110895,"byte_end":110898,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ This is useful for dialects of JSON Schema (e.g. OpenAPI 3.0) that do not support booleans as schemas.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":110899,"byte_end":111005,"line_start":127,"line_end":127,"column_start":1,"column_end":107}}]},{"kind":"Field","id":{"krate":0,"index":2357},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":111177,"byte_end":111203,"line_start":131,"line_end":131,"column_start":9,"column_end":35},"name":"skip_additional_properties","qualname":"::visit::ReplaceBoolSchemas::skip_additional_properties","value":"bool","parent":{"krate":0,"index":2356},"children":[],"decl_id":null,"docs":" When set to `true`, a schema's `additionalProperties` property will not be changed from a boolean.\n","sig":null,"attributes":[{"value":"/ When set to `true`, a schema's `additionalProperties` property will not be changed from a boolean.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":111066,"byte_end":111168,"line_start":130,"line_end":130,"column_start":5,"column_end":107}}]},{"kind":"Struct","id":{"krate":0,"index":2362},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":112418,"byte_end":112435,"line_start":166,"line_end":166,"column_start":12,"column_end":29},"name":"RemoveRefSiblings","qualname":"::visit::RemoveRefSiblings","value":"","parent":null,"children":[],"decl_id":null,"docs":" This visitor will restructure JSON Schema objects so that the `$ref` property will never appear alongside any other properties.","sig":null,"attributes":[{"value":"/ This visitor will restructure JSON Schema objects so that the `$ref` property will never appear alongside any other properties.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":112130,"byte_end":112261,"line_start":162,"line_end":162,"column_start":1,"column_end":132}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":112262,"byte_end":112265,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ This is useful for dialects of JSON Schema (e.g. Draft 7) that do not support other properties alongside `$ref`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":112266,"byte_end":112382,"line_start":164,"line_end":164,"column_start":1,"column_end":117}}]},{"kind":"Struct","id":{"krate":0,"index":2368},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":113366,"byte_end":113382,"line_start":191,"line_end":191,"column_start":12,"column_end":28},"name":"SetSingleExample","qualname":"::visit::SetSingleExample","value":"SetSingleExample { retain_examples }","parent":null,"children":[{"krate":0,"index":2369}],"decl_id":null,"docs":" This visitor will remove the `examples` schema property and (if present) set its first value as the `example` property.","sig":null,"attributes":[{"value":"/ This visitor will remove the `examples` schema property and (if present) set its first value as the `example` property.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":113092,"byte_end":113215,"line_start":187,"line_end":187,"column_start":1,"column_end":124}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":113216,"byte_end":113219,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ This is useful for dialects of JSON Schema (e.g. OpenAPI 3.0) that do not support the `examples` property.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":113220,"byte_end":113330,"line_start":189,"line_end":189,"column_start":1,"column_end":111}}]},{"kind":"Field","id":{"krate":0,"index":2369},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":113521,"byte_end":113536,"line_start":193,"line_end":193,"column_start":9,"column_end":24},"name":"retain_examples","qualname":"::visit::SetSingleExample::retain_examples","value":"bool","parent":{"krate":0,"index":2368},"children":[],"decl_id":null,"docs":" When set to `true`, the `examples` property will not be removed, but its first value will still be copied to `example`.\n","sig":null,"attributes":[{"value":"/ When set to `true`, the `examples` property will not be removed, but its first value will still be copied to `example`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":113389,"byte_end":113512,"line_start":192,"line_end":192,"column_start":5,"column_end":128}}]},{"kind":"Trait","id":{"krate":0,"index":645},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":10781,"byte_end":10791,"line_start":353,"line_end":353,"column_start":11,"column_end":21},"name":"JsonSchema","qualname":"::JsonSchema","value":"JsonSchema","parent":null,"children":[{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650}],"decl_id":null,"docs":" A type which can be described as a JSON Schema document.","sig":null,"attributes":[{"value":"/ A type which can be described as a JSON Schema document.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":10331,"byte_end":10391,"line_start":336,"line_end":336,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":10392,"byte_end":10395,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ This is implemented for many Rust primitive and standard library types.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":10396,"byte_end":10471,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":10472,"byte_end":10475,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ This can also be automatically derived on most custom types with `#[derive(JsonSchema)]`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":10476,"byte_end":10569,"line_start":340,"line_end":340,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":10570,"byte_end":10573,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":10574,"byte_end":10587,"line_start":342,"line_end":342,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":10588,"byte_end":10595,"line_start":343,"line_end":343,"column_start":1,"column_end":8}},{"value":"/ use schemars::{schema_for, JsonSchema};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":10596,"byte_end":10639,"line_start":344,"line_end":344,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":10640,"byte_end":10643,"line_start":345,"line_end":345,"column_start":1,"column_end":4}},{"value":"/ #[derive(JsonSchema)]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":10644,"byte_end":10669,"line_start":346,"line_end":346,"column_start":1,"column_end":26}},{"value":"/ struct MyStruct {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":10670,"byte_end":10691,"line_start":347,"line_end":347,"column_start":1,"column_end":22}},{"value":"/     foo: i32,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":10692,"byte_end":10709,"line_start":348,"line_end":348,"column_start":1,"column_end":18}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":10710,"byte_end":10715,"line_start":349,"line_end":349,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":10716,"byte_end":10719,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/ let my_schema = schema_for!(MyStruct);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":10720,"byte_end":10762,"line_start":351,"line_end":351,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":10763,"byte_end":10770,"line_start":352,"line_end":352,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":11204,"byte_end":11220,"line_start":360,"line_end":360,"column_start":8,"column_end":24},"name":"is_referenceable","qualname":"::JsonSchema::is_referenceable","value":"pub fn is_referenceable() -> bool","parent":{"krate":0,"index":645},"children":[],"decl_id":null,"docs":" Whether JSON Schemas generated for this type should be re-used where possible using the `$ref` keyword.","sig":null,"attributes":[{"value":"/ Whether JSON Schemas generated for this type should be re-used where possible using the `$ref` keyword.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":10798,"byte_end":10905,"line_start":354,"line_end":354,"column_start":5,"column_end":112}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":10910,"byte_end":10913,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ For trivial types (such as primitives), this should return `false`. For more complex types, it should return `true`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":10918,"byte_end":11038,"line_start":356,"line_end":356,"column_start":5,"column_end":125}},{"value":"/ For recursive types, this **must** return `true` to prevent infinite cycles when generating schemas.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":11043,"byte_end":11147,"line_start":357,"line_end":357,"column_start":5,"column_end":109}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":11152,"byte_end":11155,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ By default, this returns `true`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":11160,"byte_end":11196,"line_start":359,"line_end":359,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":11436,"byte_end":11447,"line_start":367,"line_end":367,"column_start":8,"column_end":19},"name":"schema_name","qualname":"::JsonSchema::schema_name","value":"pub fn schema_name() -> String","parent":{"krate":0,"index":645},"children":[],"decl_id":null,"docs":" The name of the generated JSON Schema.","sig":null,"attributes":[{"value":"/ The name of the generated JSON Schema.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":11257,"byte_end":11299,"line_start":364,"line_end":364,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":11304,"byte_end":11307,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ This is used as the title for root schemas, and the key within the root's `definitions` property for subschemas.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":11312,"byte_end":11428,"line_start":366,"line_end":366,"column_start":5,"column_end":121}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":11791,"byte_end":11802,"line_start":375,"line_end":375,"column_start":8,"column_end":19},"name":"json_schema","qualname":"::JsonSchema::json_schema","value":"pub fn json_schema(&mut gen::SchemaGenerator) -> Schema","parent":{"krate":0,"index":645},"children":[],"decl_id":null,"docs":" Generates a JSON Schema for this type.","sig":null,"attributes":[{"value":"/ Generates a JSON Schema for this type.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":11466,"byte_end":11508,"line_start":369,"line_end":369,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":11513,"byte_end":11516,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ If the returned schema depends on any [referenceable](JsonSchema::is_referenceable) schemas, then this method will","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":11521,"byte_end":11639,"line_start":371,"line_end":371,"column_start":5,"column_end":123}},{"value":"/ add them to the [`SchemaGenerator`](gen::SchemaGenerator)'s schema definitions.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":11644,"byte_end":11727,"line_start":372,"line_end":372,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":11732,"byte_end":11735,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ This should not return a `$ref` schema.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":11740,"byte_end":11783,"line_start":374,"line_end":374,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":11921,"byte_end":11963,"line_start":379,"line_end":379,"column_start":8,"column_end":50},"name":"_schemars_private_non_optional_json_schema","qualname":"::JsonSchema::_schemars_private_non_optional_json_schema","value":"pub fn _schemars_private_non_optional_json_schema(&mut gen::SchemaGenerator)\n-> Schema","parent":{"krate":0,"index":645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":12120,"byte_end":12147,"line_start":385,"line_end":385,"column_start":8,"column_end":35},"name":"_schemars_private_is_option","qualname":"::JsonSchema::_schemars_private_is_option","value":"pub fn _schemars_private_is_option() -> bool","parent":{"krate":0,"index":645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/flatten.rs","byte_start":12779,"byte_end":12785,"line_start":4,"line_end":4,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/flatten.rs","byte_start":13929,"byte_end":13935,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/flatten.rs","byte_start":15091,"byte_end":15099,"line_start":72,"line_end":72,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/flatten.rs","byte_start":16212,"byte_end":16218,"line_start":108,"line_end":108,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/flatten.rs","byte_start":16448,"byte_end":16451,"line_start":118,"line_end":118,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/flatten.rs","byte_start":16582,"byte_end":16585,"line_start":125,"line_end":125,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/flatten.rs","byte_start":16708,"byte_end":16711,"line_start":132,"line_end":132,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/flatten.rs","byte_start":16880,"byte_end":16883,"line_start":142,"line_end":142,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/flatten.rs","byte_start":17000,"byte_end":17011,"line_start":149,"line_end":149,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/json_schema_impls/core.rs","byte_start":23659,"byte_end":23665,"line_start":7,"line_end":7,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":922},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/json_schema_impls/core.rs","byte_start":25740,"byte_end":25746,"line_start":67,"line_end":67,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/json_schema_impls/core.rs","byte_start":26775,"byte_end":26780,"line_start":97,"line_end":97,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/json_schema_impls/core.rs","byte_start":28112,"byte_end":28117,"line_start":137,"line_end":137,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/json_schema_impls/ffi.rs","byte_start":30890,"byte_end":30898,"line_start":6,"line_end":6,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/json_schema_impls/serdejson.rs","byte_start":40784,"byte_end":40789,"line_start":7,"line_end":7,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1164},{"krate":0,"index":242},{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/json_schema_impls/serdejson.rs","byte_start":41060,"byte_end":41066,"line_start":21,"line_end":21,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1171},{"krate":0,"index":245},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/json_schema_impls/time.rs","byte_start":41507,"byte_end":41515,"line_start":6,"line_end":6,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":263},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/json_schema_impls/time.rs","byte_start":42152,"byte_end":42162,"line_start":27,"line_end":27,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/ser.rs","byte_start":47756,"byte_end":47766,"line_start":50,"line_end":50,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":1473},{"krate":0,"index":1474},{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1479},{"krate":0,"index":1480},{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1483},{"krate":0,"index":1484},{"krate":0,"index":1485},{"krate":0,"index":1486},{"krate":0,"index":1487},{"krate":0,"index":1488},{"krate":0,"index":346},{"krate":0,"index":348},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":362},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/ser.rs","byte_start":55582,"byte_end":55592,"line_start":304,"line_end":304,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/ser.rs","byte_start":55933,"byte_end":55943,"line_start":320,"line_end":320,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/ser.rs","byte_start":56325,"byte_end":56337,"line_start":340,"line_end":340,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/ser.rs","byte_start":57487,"byte_end":57501,"line_start":380,"line_end":380,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/ser.rs","byte_start":58546,"byte_end":58560,"line_start":417,"line_end":417,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/ser.rs","byte_start":58957,"byte_end":58969,"line_start":433,"line_end":433,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/ser.rs","byte_start":60434,"byte_end":60446,"line_start":485,"line_end":485,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/_private.rs","byte_start":65111,"byte_end":65112,"line_start":61,"line_end":61,"column_start":25,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/_private.rs","byte_start":65136,"byte_end":65157,"line_start":63,"line_end":63,"column_start":20,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":67583,"byte_end":67597,"line_start":51,"line_end":51,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":67685,"byte_end":67699,"line_start":57,"line_end":57,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":493},{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":71202,"byte_end":71217,"line_start":158,"line_end":158,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":71460,"byte_end":71475,"line_start":168,"line_end":168,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":71574,"byte_end":71589,"line_start":174,"line_end":174,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":508},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":516},{"krate":0,"index":518},{"krate":0,"index":520},{"krate":0,"index":522},{"krate":0,"index":524},{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":81458,"byte_end":81476,"line_start":431,"line_end":431,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":81728,"byte_end":81746,"line_start":438,"line_end":438,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":82957,"byte_end":82958,"line_start":479,"line_end":479,"column_start":24,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":83806,"byte_end":83812,"line_start":29,"line_end":29,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":85459,"byte_end":85465,"line_start":76,"line_end":76,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":85562,"byte_end":85568,"line_start":82,"line_end":82,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":91384,"byte_end":91396,"line_start":214,"line_end":214,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":1753},{"krate":0,"index":1754},{"krate":0,"index":1755},{"krate":0,"index":1756},{"krate":0,"index":1757},{"krate":0,"index":1758}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":92968,"byte_end":92980,"line_start":253,"line_end":253,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":105506,"byte_end":105517,"line_start":516,"line_end":516,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":590}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":105636,"byte_end":105647,"line_start":522,"line_end":522,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":105746,"byte_end":105757,"line_start":528,"line_end":528,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":111231,"byte_end":111249,"line_start":134,"line_end":134,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":630},{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":112455,"byte_end":112472,"line_start":168,"line_end":168,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":113564,"byte_end":113580,"line_start":196,"line_end":196,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":10022,"byte_end":10030,"line_start":320,"line_end":320,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":418}},{"kind":"Mod","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":10040,"byte_end":10043,"line_start":321,"line_end":321,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":459}},{"kind":"Mod","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":10053,"byte_end":10059,"line_start":322,"line_end":322,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":543}},{"kind":"Mod","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/lib.rs","byte_start":10069,"byte_end":10074,"line_start":323,"line_end":323,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":597}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/flatten.rs","byte_start":12779,"byte_end":12785,"line_start":4,"line_end":4,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1542},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/flatten.rs","byte_start":13284,"byte_end":13289,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":3029},"to":{"krate":0,"index":23}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/flatten.rs","byte_start":13929,"byte_end":13935,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"kind":{"Impl":{"id":1}},"from":{"krate":2,"index":39355},"to":{"krate":0,"index":23}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/flatten.rs","byte_start":15091,"byte_end":15099,"line_start":72,"line_end":72,"column_start":16,"column_end":24},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1849},"to":{"krate":0,"index":23}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/flatten.rs","byte_start":16212,"byte_end":16218,"line_start":108,"line_end":108,"column_start":26,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":2,"index":39355},"to":{"krate":0,"index":23}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/flatten.rs","byte_start":16448,"byte_end":16451,"line_start":118,"line_end":118,"column_start":26,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":5,"index":315},"to":{"krate":0,"index":23}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/flatten.rs","byte_start":16582,"byte_end":16585,"line_start":125,"line_end":125,"column_start":19,"column_end":22},"kind":{"Impl":{"id":5}},"from":{"krate":5,"index":7089},"to":{"krate":0,"index":23}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/flatten.rs","byte_start":16708,"byte_end":16711,"line_start":132,"line_end":132,"column_start":22,"column_end":25},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":3},"to":{"krate":0,"index":23}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/flatten.rs","byte_start":16880,"byte_end":16883,"line_start":142,"line_end":142,"column_start":24,"column_end":27},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":6},"to":{"krate":0,"index":23}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/flatten.rs","byte_start":17000,"byte_end":17011,"line_start":149,"line_end":149,"column_start":16,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2348},"to":{"krate":0,"index":23}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/json_schema_impls/core.rs","byte_start":23659,"byte_end":23665,"line_start":7,"line_end":7,"column_start":36,"column_end":42},"kind":{"Impl":{"id":20}},"from":{"krate":2,"index":39355},"to":{"krate":0,"index":645}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/json_schema_impls/core.rs","byte_start":25740,"byte_end":25746,"line_start":67,"line_end":67,"column_start":51,"column_end":57},"kind":{"Impl":{"id":21}},"from":{"krate":2,"index":39482},"to":{"krate":0,"index":645}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/json_schema_impls/core.rs","byte_start":26775,"byte_end":26780,"line_start":97,"line_end":97,"column_start":36,"column_end":41},"kind":{"Impl":{"id":22}},"from":{"krate":2,"index":37981},"to":{"krate":0,"index":645}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/json_schema_impls/core.rs","byte_start":28112,"byte_end":28117,"line_start":137,"line_end":137,"column_start":36,"column_end":41},"kind":{"Impl":{"id":23}},"from":{"krate":2,"index":37866},"to":{"krate":0,"index":645}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/json_schema_impls/ffi.rs","byte_start":30890,"byte_end":30898,"line_start":6,"line_end":6,"column_start":21,"column_end":29},"kind":{"Impl":{"id":27}},"from":{"krate":1,"index":2952},"to":{"krate":0,"index":645}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/json_schema_impls/serdejson.rs","byte_start":40784,"byte_end":40789,"line_start":7,"line_end":7,"column_start":21,"column_end":26},"kind":{"Impl":{"id":77}},"from":{"krate":19,"index":2583},"to":{"krate":0,"index":645}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/json_schema_impls/serdejson.rs","byte_start":41060,"byte_end":41066,"line_start":21,"line_end":21,"column_start":21,"column_end":27},"kind":{"Impl":{"id":79}},"from":{"krate":19,"index":2920},"to":{"krate":0,"index":645}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/json_schema_impls/time.rs","byte_start":41507,"byte_end":41515,"line_start":6,"line_end":6,"column_start":21,"column_end":29},"kind":{"Impl":{"id":80}},"from":{"krate":2,"index":42040},"to":{"krate":0,"index":645}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/json_schema_impls/time.rs","byte_start":42152,"byte_end":42162,"line_start":27,"line_end":27,"column_start":21,"column_end":31},"kind":{"Impl":{"id":81}},"from":{"krate":1,"index":11967},"to":{"krate":0,"index":645}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/ser.rs","byte_start":47756,"byte_end":47766,"line_start":50,"line_end":50,"column_start":32,"column_end":42},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":314},"to":{"krate":20,"index":2129}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/ser.rs","byte_start":55582,"byte_end":55592,"line_start":304,"line_end":304,"column_start":44,"column_end":54},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":314},"to":{"krate":20,"index":2197}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/ser.rs","byte_start":55933,"byte_end":55943,"line_start":320,"line_end":320,"column_start":45,"column_end":55},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":314},"to":{"krate":20,"index":2221}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/ser.rs","byte_start":56325,"byte_end":56337,"line_start":340,"line_end":340,"column_start":35,"column_end":47},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":318},"to":{"krate":20,"index":2179}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/ser.rs","byte_start":57487,"byte_end":57501,"line_start":380,"line_end":380,"column_start":37,"column_end":51},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":322},"to":{"krate":20,"index":2185}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/ser.rs","byte_start":58546,"byte_end":58560,"line_start":417,"line_end":417,"column_start":43,"column_end":57},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":322},"to":{"krate":20,"index":2191}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/ser.rs","byte_start":58957,"byte_end":58969,"line_start":433,"line_end":433,"column_start":35,"column_end":47},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":327},"to":{"krate":20,"index":2203}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/ser.rs","byte_start":60434,"byte_end":60446,"line_start":485,"line_end":485,"column_start":38,"column_end":50},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":327},"to":{"krate":20,"index":2214}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/_private.rs","byte_start":65010,"byte_end":65015,"line_start":55,"line_end":55,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":3029},"to":{"krate":0,"index":452}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/_private.rs","byte_start":65111,"byte_end":65112,"line_start":61,"line_end":61,"column_start":25,"column_end":26},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":455},"to":{"krate":0,"index":452}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/_private.rs","byte_start":65136,"byte_end":65157,"line_start":63,"line_end":63,"column_start":20,"column_end":41},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":448},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":67583,"byte_end":67597,"line_start":51,"line_end":51,"column_start":18,"column_end":32},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1489},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":67685,"byte_end":67699,"line_start":57,"line_end":57,"column_start":6,"column_end":20},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1489},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":71202,"byte_end":71217,"line_start":158,"line_end":158,"column_start":16,"column_end":31},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1501},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":71460,"byte_end":71475,"line_start":168,"line_end":168,"column_start":31,"column_end":46},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1501},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":71574,"byte_end":71589,"line_start":174,"line_end":174,"column_start":6,"column_end":21},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1501},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":81458,"byte_end":81476,"line_start":431,"line_end":431,"column_start":18,"column_end":36},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":528},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":81728,"byte_end":81746,"line_start":438,"line_end":438,"column_start":23,"column_end":41},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":528},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":82704,"byte_end":82711,"line_start":472,"line_end":472,"column_start":23,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":611},"to":{"krate":0,"index":538}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":82714,"byte_end":82719,"line_start":472,"line_end":472,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":9604},"to":{"krate":0,"index":538}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":82722,"byte_end":82730,"line_start":472,"line_end":472,"column_start":41,"column_end":49},"kind":"SuperTrait","from":{"krate":24,"index":38},"to":{"krate":0,"index":538}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":82733,"byte_end":82736,"line_start":472,"line_end":472,"column_start":52,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":3744},"to":{"krate":0,"index":538}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/gen.rs","byte_start":82957,"byte_end":82958,"line_start":479,"line_end":479,"column_start":24,"column_end":25},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":541},"to":{"krate":0,"index":538}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":83806,"byte_end":83812,"line_start":29,"line_end":29,"column_start":6,"column_end":12},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1542},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":85459,"byte_end":85465,"line_start":76,"line_end":76,"column_start":29,"column_end":35},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":85562,"byte_end":85568,"line_start":82,"line_end":82,"column_start":21,"column_end":27},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":91384,"byte_end":91396,"line_start":214,"line_end":214,"column_start":6,"column_end":18},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1740},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":92968,"byte_end":92980,"line_start":253,"line_end":253,"column_start":23,"column_end":35},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1740},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":105506,"byte_end":105517,"line_start":516,"line_end":516,"column_start":21,"column_end":32},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2348},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":105636,"byte_end":105647,"line_start":522,"line_end":522,"column_start":26,"column_end":37},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2348},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/schema.rs","byte_start":105746,"byte_end":105757,"line_start":528,"line_end":528,"column_start":20,"column_end":31},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":111231,"byte_end":111249,"line_start":134,"line_end":134,"column_start":18,"column_end":36},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2356},"to":{"krate":0,"index":611}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":112455,"byte_end":112472,"line_start":168,"line_end":168,"column_start":18,"column_end":35},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":2362},"to":{"krate":0,"index":611}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.8.11/src/visit.rs","byte_start":113564,"byte_end":113580,"line_start":196,"line_end":196,"column_start":18,"column_end":34},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":2368},"to":{"krate":0,"index":611}}]}