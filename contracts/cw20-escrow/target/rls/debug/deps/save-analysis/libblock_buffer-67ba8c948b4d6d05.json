{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3","program":"/Users/trevorclarke/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","block_buffer","--edition=2018","/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=67ba8c948b4d6d05","-C","extra-filename=-67ba8c948b4d6d05","--out-dir","/Users/trevorclarke/code/cron/cw-purrbox/contracts/cw20-escrow/target/rls/debug/deps","-L","dependency=/Users/trevorclarke/code/cron/cw-purrbox/contracts/cw20-escrow/target/rls/debug/deps","--extern","generic_array=/Users/trevorclarke/code/cron/cw-purrbox/contracts/cw20-escrow/target/rls/debug/deps/libgeneric_array-f3928be0c8722684.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/trevorclarke/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/trevorclarke/code/cron/cw-purrbox/contracts/cw20-escrow/target/rls/debug/deps/libblock_buffer-67ba8c948b4d6d05.rmeta"},"prelude":{"crate_id":{"name":"block_buffer","disambiguator":[5185094059600351175,0]},"crate_root":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src","external_crates":[{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[16249227214258238047,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[13791225915815425008,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[455111089362928276,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","num":4,"id":{"name":"generic_array","disambiguator":[7899941157077680329,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","num":5,"id":{"name":"typenum","disambiguator":[14585012641457782044,0]}}],"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":0,"byte_end":10493,"line_start":1,"line_end":344,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":0},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":310,"byte_end":323,"line_start":9,"line_end":9,"column_start":9,"column_end":22},"alias_span":null,"name":"generic_array","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":0,"byte_end":10493,"line_start":1,"line_end":344,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":113},{"krate":0,"index":115},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":123},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":67},{"krate":0,"index":125},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":69},{"krate":0,"index":138},{"krate":0,"index":144},{"krate":0,"index":71},{"krate":0,"index":75},{"krate":0,"index":79},{"krate":0,"index":95},{"krate":0,"index":107}],"decl_id":null,"docs":" Fixed size buffer for block processing of data.\n","sig":null,"attributes":[{"value":"/ Fixed size buffer for block processing of data.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":0,"byte_end":51,"line_start":1,"line_end":1,"column_start":1,"column_end":52}},{"value":"no_std","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":52,"byte_end":62,"line_start":2,"line_end":2,"column_start":1,"column_end":11}},{"value":"warn(missing_docs, rust_2018_idioms)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":260,"byte_end":300,"line_start":7,"line_end":7,"column_start":1,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":48},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/sealed.rs","byte_start":10591,"byte_end":10597,"line_start":5,"line_end":5,"column_start":11,"column_end":17},"name":"Sealed","qualname":"::sealed::Sealed","value":"Sealed","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":50}],"decl_id":null,"docs":" Sealed trait for buffer kinds.\n","sig":null,"attributes":[{"value":"/ Sealed trait for buffer kinds.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/sealed.rs","byte_start":10546,"byte_end":10580,"line_start":4,"line_end":4,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/sealed.rs","byte_start":10727,"byte_end":10736,"line_start":8,"line_end":8,"column_start":8,"column_end":17},"name":"invariant","qualname":"::sealed::Sealed::invariant","value":"pub fn invariant(usize, usize) -> bool","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Invariant guaranteed by a buffer kind, i.e. with correct\n buffer code this function always returns true.\n","sig":null,"attributes":[{"value":"/ Invariant guaranteed by a buffer kind, i.e. with correct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/sealed.rs","byte_start":10604,"byte_end":10664,"line_start":6,"line_end":6,"column_start":5,"column_end":65}},{"value":"/ buffer code this function always returns true.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/sealed.rs","byte_start":10669,"byte_end":10719,"line_start":7,"line_end":7,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/sealed.rs","byte_start":10841,"byte_end":10853,"line_start":11,"line_end":11,"column_start":8,"column_end":20},"name":"split_blocks","qualname":"::sealed::Sealed::split_blocks","value":"pub fn split_blocks<N: ArrayLength<u8>>(&[u8]) -> (&[Block<N>], &[u8])","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Split input data into slice fo blocks and tail.\n","sig":null,"attributes":[{"value":"/ Split input data into slice fo blocks and tail.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/sealed.rs","byte_start":10782,"byte_end":10833,"line_start":10,"line_end":10,"column_start":5,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":60},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":534,"byte_end":539,"line_start":20,"line_end":20,"column_start":10,"column_end":15},"name":"Block","qualname":"::Block","value":"GenericArray<u8, BlockSize>","parent":null,"children":[],"decl_id":null,"docs":" Block on which `BlockBuffer` operates.\n","sig":null,"attributes":[{"value":"/ Block on which `BlockBuffer` operates.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":482,"byte_end":524,"line_start":19,"line_end":19,"column_start":1,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":62},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":621,"byte_end":631,"line_start":23,"line_end":23,"column_start":11,"column_end":21},"name":"BufferKind","qualname":"::BufferKind","value":"BufferKind: sealed::Sealed","parent":null,"children":[],"decl_id":null,"docs":" Trait for buffer kinds.\n","sig":null,"attributes":[{"value":"/ Trait for buffer kinds.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":583,"byte_end":610,"line_start":22,"line_end":22,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":109},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":817,"byte_end":822,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"Eager","qualname":"::Eager","value":"Eager {  }","parent":null,"children":[],"decl_id":null,"docs":" Eager block buffer kind, which guarantees that buffer position\n always lies in the range of `0..BlockSize`.\n","sig":null,"attributes":[{"value":"/ Eager block buffer kind, which guarantees that buffer position","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":652,"byte_end":718,"line_start":25,"line_end":25,"column_start":1,"column_end":67}},{"value":"/ always lies in the range of `0..BlockSize`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":719,"byte_end":766,"line_start":26,"line_end":26,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":117},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":992,"byte_end":996,"line_start":33,"line_end":33,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::Lazy","value":"Lazy {  }","parent":null,"children":[],"decl_id":null,"docs":" Lazy block buffer kind, which guarantees that buffer position\n always lies in the range of `0..=BlockSize`.\n","sig":null,"attributes":[{"value":"/ Lazy block buffer kind, which guarantees that buffer position","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":827,"byte_end":892,"line_start":30,"line_end":30,"column_start":1,"column_end":66}},{"value":"/ always lies in the range of `0..=BlockSize`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":893,"byte_end":941,"line_start":31,"line_end":31,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":65},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":1092,"byte_end":1103,"line_start":39,"line_end":39,"column_start":10,"column_end":21},"name":"EagerBuffer","qualname":"::EagerBuffer","value":"BlockBuffer<B, Eager>","parent":null,"children":[],"decl_id":null,"docs":" Eager block buffer.\n","sig":null,"attributes":[{"value":"/ Eager block buffer.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":1059,"byte_end":1082,"line_start":38,"line_end":38,"column_start":1,"column_end":24}}]},{"kind":"Type","id":{"krate":0,"index":67},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":1164,"byte_end":1174,"line_start":41,"line_end":41,"column_start":10,"column_end":20},"name":"LazyBuffer","qualname":"::LazyBuffer","value":"BlockBuffer<B, Lazy>","parent":null,"children":[],"decl_id":null,"docs":" Lazy block buffer.\n","sig":null,"attributes":[{"value":"/ Lazy block buffer.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":1132,"byte_end":1154,"line_start":40,"line_end":40,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":125},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":1283,"byte_end":1288,"line_start":45,"line_end":45,"column_start":12,"column_end":17},"name":"Error","qualname":"::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" Block buffer error.\n","sig":null,"attributes":[{"value":"/ Block buffer error.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":1203,"byte_end":1226,"line_start":43,"line_end":43,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":138},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":1515,"byte_end":1526,"line_start":55,"line_end":55,"column_start":12,"column_end":23},"name":"BlockBuffer","qualname":"::BlockBuffer","value":"BlockBuffer {  }","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143}],"decl_id":null,"docs":" Buffer for block processing of data.\n","sig":null,"attributes":[{"value":"/ Buffer for block processing of data.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":1446,"byte_end":1486,"line_start":53,"line_end":53,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":2705,"byte_end":2708,"line_start":107,"line_end":107,"column_start":12,"column_end":15},"name":"new","qualname":"<BlockBuffer<BlockSize, Kind>>::new","value":"pub fn new(&[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new buffer from slice.","sig":null,"attributes":[{"value":"/ Create new buffer from slice.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":2554,"byte_end":2587,"line_start":102,"line_end":102,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":2592,"byte_end":2595,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":2600,"byte_end":2612,"line_start":104,"line_end":104,"column_start":5,"column_end":17}},{"value":"/ If slice length is not valid for used buffer kind.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":2617,"byte_end":2671,"line_start":105,"line_end":105,"column_start":5,"column_end":59}},{"value":"inline(always)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":2676,"byte_end":2693,"line_start":106,"line_end":106,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":2929,"byte_end":2936,"line_start":115,"line_end":115,"column_start":12,"column_end":19},"name":"try_new","qualname":"<BlockBuffer<BlockSize, Kind>>::try_new","value":"pub fn try_new(&[u8]) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create new buffer from slice.","sig":null,"attributes":[{"value":"/ Create new buffer from slice.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":2778,"byte_end":2811,"line_start":111,"line_end":111,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":2816,"byte_end":2819,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ Returns an error if slice length is not valid for used buffer kind.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":2824,"byte_end":2895,"line_start":113,"line_end":113,"column_start":5,"column_end":76}},{"value":"inline(always)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":2900,"byte_end":2917,"line_start":114,"line_end":114,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":3467,"byte_end":3480,"line_start":132,"line_end":132,"column_start":12,"column_end":25},"name":"digest_blocks","qualname":"<BlockBuffer<BlockSize, Kind>>::digest_blocks","value":"pub fn digest_blocks<impl FnMut(&[Block<BlockSize>]): FnMut(&[Block<BlockSize>])\n-> ()>(&mut Self, &[u8], impl FnMut(&[Block<BlockSize>]))","parent":null,"children":[],"decl_id":null,"docs":" Digest data in `input` in blocks of size `BlockSize` using\n the `compress` function, which accepts slice of blocks.\n","sig":null,"attributes":[{"value":"/ Digest data in `input` in blocks of size `BlockSize` using","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":3315,"byte_end":3377,"line_start":129,"line_end":129,"column_start":5,"column_end":67}},{"value":"/ the `compress` function, which accepts slice of blocks.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":3382,"byte_end":3441,"line_start":130,"line_end":130,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":3446,"byte_end":3455,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":5051,"byte_end":5056,"line_start":174,"line_end":174,"column_start":12,"column_end":17},"name":"reset","qualname":"<BlockBuffer<BlockSize, Kind>>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reset buffer by setting cursor position to zero.\n","sig":null,"attributes":[{"value":"/ Reset buffer by setting cursor position to zero.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":4965,"byte_end":5017,"line_start":172,"line_end":172,"column_start":5,"column_end":57}},{"value":"inline(always)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":5022,"byte_end":5039,"line_start":173,"line_end":173,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":5211,"byte_end":5225,"line_start":180,"line_end":180,"column_start":12,"column_end":26},"name":"pad_with_zeros","qualname":"<BlockBuffer<BlockSize, Kind>>::pad_with_zeros","value":"pub fn pad_with_zeros(&mut Self) -> &mut Block<BlockSize>","parent":null,"children":[],"decl_id":null,"docs":" Pad remaining data with zeros and return resulting block.\n","sig":null,"attributes":[{"value":"/ Pad remaining data with zeros and return resulting block.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":5116,"byte_end":5177,"line_start":178,"line_end":178,"column_start":5,"column_end":66}},{"value":"inline(always)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":5182,"byte_end":5199,"line_start":179,"line_end":179,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":5498,"byte_end":5505,"line_start":189,"line_end":189,"column_start":12,"column_end":19},"name":"get_pos","qualname":"<BlockBuffer<BlockSize, Kind>>::get_pos","value":"pub fn get_pos(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return current cursor position.\n","sig":null,"attributes":[{"value":"/ Return current cursor position.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":5429,"byte_end":5464,"line_start":187,"line_end":187,"column_start":5,"column_end":40}},{"value":"inline(always)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":5469,"byte_end":5486,"line_start":188,"line_end":188,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":5909,"byte_end":5917,"line_start":203,"line_end":203,"column_start":12,"column_end":20},"name":"get_data","qualname":"<BlockBuffer<BlockSize, Kind>>::get_data","value":"pub fn get_data(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Return slice of data stored inside the buffer.\n","sig":null,"attributes":[{"value":"/ Return slice of data stored inside the buffer.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":5825,"byte_end":5875,"line_start":201,"line_end":201,"column_start":5,"column_end":55}},{"value":"inline(always)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":5880,"byte_end":5897,"line_start":202,"line_end":202,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":6131,"byte_end":6134,"line_start":212,"line_end":212,"column_start":12,"column_end":15},"name":"set","qualname":"<BlockBuffer<BlockSize, Kind>>::set","value":"pub fn set(&mut Self, Block<BlockSize>, usize)","parent":null,"children":[],"decl_id":null,"docs":" Set buffer content and cursor position.","sig":null,"attributes":[{"value":"/ Set buffer content and cursor position.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":5986,"byte_end":6029,"line_start":207,"line_end":207,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":6034,"byte_end":6037,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":6042,"byte_end":6054,"line_start":209,"line_end":209,"column_start":5,"column_end":17}},{"value":"/ If `pos` is bigger or equal to block size.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":6059,"byte_end":6105,"line_start":210,"line_end":210,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":6110,"byte_end":6119,"line_start":211,"line_end":211,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":6398,"byte_end":6402,"line_start":220,"line_end":220,"column_start":12,"column_end":16},"name":"size","qualname":"<BlockBuffer<BlockSize, Kind>>::size","value":"pub fn size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return size of the internall buffer in bytes.\n","sig":null,"attributes":[{"value":"/ Return size of the internall buffer in bytes.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":6315,"byte_end":6364,"line_start":218,"line_end":218,"column_start":5,"column_end":54}},{"value":"inline(always)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":6369,"byte_end":6386,"line_start":219,"line_end":219,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":6552,"byte_end":6561,"line_start":226,"line_end":226,"column_start":12,"column_end":21},"name":"remaining","qualname":"<BlockBuffer<BlockSize, Kind>>::remaining","value":"pub fn remaining(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return number of remaining bytes in the internall buffer.\n","sig":null,"attributes":[{"value":"/ Return number of remaining bytes in the internall buffer.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":6457,"byte_end":6518,"line_start":224,"line_end":224,"column_start":5,"column_end":66}},{"value":"inline(always)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":6523,"byte_end":6540,"line_start":225,"line_end":225,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":6998,"byte_end":7006,"line_start":244,"line_end":244,"column_start":12,"column_end":20},"name":"set_data","qualname":"<BlockBuffer<BlockSize, Eager>>::set_data","value":"pub fn set_data<impl FnMut(&mut [Block<BlockSize>]): FnMut(&mut [Block<BlockSize>])\n-> ()>(&mut Self, &mut [u8], impl FnMut(&mut [Block<BlockSize>]))","parent":null,"children":[],"decl_id":null,"docs":" Set `data` to generated blocks.\n","sig":null,"attributes":[{"value":"/ Set `data` to generated blocks.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":6937,"byte_end":6972,"line_start":242,"line_end":242,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":6977,"byte_end":6986,"line_start":243,"line_end":243,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":8302,"byte_end":8312,"line_start":284,"line_end":284,"column_start":12,"column_end":22},"name":"digest_pad","qualname":"<BlockBuffer<BlockSize, Eager>>::digest_pad","value":"pub fn digest_pad<impl FnMut(&Block<BlockSize>): FnMut(&Block<BlockSize>) ->\n()>(&mut Self, u8, &[u8], impl FnMut(&Block<BlockSize>))","parent":null,"children":[],"decl_id":null,"docs":" Compress remaining data after padding it with `delim`, zeros and\n the `suffix` bytes. If there is not enough unused space, `compress`\n will be called twice.","sig":null,"attributes":[{"value":"/ Compress remaining data after padding it with `delim`, zeros and","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":8017,"byte_end":8085,"line_start":277,"line_end":277,"column_start":5,"column_end":73}},{"value":"/ the `suffix` bytes. If there is not enough unused space, `compress`","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":8090,"byte_end":8161,"line_start":278,"line_end":278,"column_start":5,"column_end":76}},{"value":"/ will be called twice.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":8166,"byte_end":8191,"line_start":279,"line_end":279,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":8196,"byte_end":8199,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":8204,"byte_end":8216,"line_start":281,"line_end":281,"column_start":5,"column_end":17}},{"value":"/ If suffix length is bigger than block size.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":8221,"byte_end":8268,"line_start":282,"line_end":282,"column_start":5,"column_end":52}},{"value":"inline(always)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":8273,"byte_end":8290,"line_start":283,"line_end":283,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":9229,"byte_end":9245,"line_start":315,"line_end":315,"column_start":12,"column_end":28},"name":"len64_padding_be","qualname":"<BlockBuffer<BlockSize, Eager>>::len64_padding_be","value":"pub fn len64_padding_be<impl FnMut(&Block<BlockSize>): FnMut(&Block<BlockSize>)\n-> ()>(&mut Self, u64, impl FnMut(&Block<BlockSize>))","parent":null,"children":[],"decl_id":null,"docs":" Pad message with 0x80, zeros and 64-bit message length using\n big-endian byte order.\n","sig":null,"attributes":[{"value":"/ Pad message with 0x80, zeros and 64-bit message length using","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":9108,"byte_end":9172,"line_start":312,"line_end":312,"column_start":5,"column_end":69}},{"value":"/ big-endian byte order.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":9177,"byte_end":9203,"line_start":313,"line_end":313,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":9208,"byte_end":9217,"line_start":314,"line_end":314,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":9516,"byte_end":9532,"line_start":322,"line_end":322,"column_start":12,"column_end":28},"name":"len64_padding_le","qualname":"<BlockBuffer<BlockSize, Eager>>::len64_padding_le","value":"pub fn len64_padding_le<impl FnMut(&Block<BlockSize>): FnMut(&Block<BlockSize>)\n-> ()>(&mut Self, u64, impl FnMut(&Block<BlockSize>))","parent":null,"children":[],"decl_id":null,"docs":" Pad message with 0x80, zeros and 64-bit message length using\n little-endian byte order.\n","sig":null,"attributes":[{"value":"/ Pad message with 0x80, zeros and 64-bit message length using","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":9392,"byte_end":9456,"line_start":319,"line_end":319,"column_start":5,"column_end":69}},{"value":"/ little-endian byte order.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":9461,"byte_end":9490,"line_start":320,"line_end":320,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":9495,"byte_end":9504,"line_start":321,"line_end":321,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":9801,"byte_end":9818,"line_start":329,"line_end":329,"column_start":12,"column_end":29},"name":"len128_padding_be","qualname":"<BlockBuffer<BlockSize, Eager>>::len128_padding_be","value":"pub fn len128_padding_be<impl FnMut(&Block<BlockSize>): FnMut(&Block<BlockSize>)\n-> ()>(&mut Self, u128, impl FnMut(&Block<BlockSize>))","parent":null,"children":[],"decl_id":null,"docs":" Pad message with 0x80, zeros and 128-bit message length using\n big-endian byte order.\n","sig":null,"attributes":[{"value":"/ Pad message with 0x80, zeros and 128-bit message length using","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":9679,"byte_end":9744,"line_start":326,"line_end":326,"column_start":5,"column_end":70}},{"value":"/ big-endian byte order.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":9749,"byte_end":9775,"line_start":327,"line_end":327,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":9780,"byte_end":9789,"line_start":328,"line_end":328,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/sealed.rs","byte_start":10938,"byte_end":10943,"line_start":14,"line_end":14,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/sealed.rs","byte_start":11703,"byte_end":11707,"line_start":38,"line_end":38,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":1021,"byte_end":1026,"line_start":35,"line_end":35,"column_start":21,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":1050,"byte_end":1054,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":1313,"byte_end":1318,"line_start":47,"line_end":47,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":1763,"byte_end":1774,"line_start":66,"line_end":66,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":2086,"byte_end":2097,"line_start":81,"line_end":81,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":2410,"byte_end":2421,"line_start":96,"line_end":96,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":6814,"byte_end":6825,"line_start":237,"line_end":237,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/sealed.rs","byte_start":10938,"byte_end":10943,"line_start":14,"line_end":14,"column_start":24,"column_end":29},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":109},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/sealed.rs","byte_start":11703,"byte_end":11707,"line_start":38,"line_end":38,"column_start":24,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":117},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":641,"byte_end":647,"line_start":23,"line_end":23,"column_start":31,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":48},"to":{"krate":0,"index":62}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":1021,"byte_end":1026,"line_start":35,"line_end":35,"column_start":21,"column_end":26},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":109},"to":{"krate":0,"index":62}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":1050,"byte_end":1054,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":117},"to":{"krate":0,"index":62}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":1313,"byte_end":1318,"line_start":47,"line_end":47,"column_start":23,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":125},"to":{"krate":1,"index":9611}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":1763,"byte_end":1774,"line_start":66,"line_end":66,"column_start":35,"column_end":46},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":138},"to":{"krate":1,"index":3002}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":2086,"byte_end":2097,"line_start":81,"line_end":81,"column_start":33,"column_end":44},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":138},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":2410,"byte_end":2421,"line_start":96,"line_end":96,"column_start":23,"column_end":34},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.10.3/src/lib.rs","byte_start":6814,"byte_end":6825,"line_start":237,"line_end":237,"column_start":17,"column_end":28},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":138},"to":{"krate":4294967295,"index":4294967295}}]}