{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3","program":"/Users/trevorclarke/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","hashbrown","--edition=2021","/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"ahash\"","--cfg","feature=\"default\"","--cfg","feature=\"inline-more\"","-C","metadata=0a20e7ec16f6f7b4","-C","extra-filename=-0a20e7ec16f6f7b4","--out-dir","/Users/trevorclarke/code/cron/cw-purrbox/contracts/cw20-escrow/target/rls/debug/deps","-L","dependency=/Users/trevorclarke/code/cron/cw-purrbox/contracts/cw20-escrow/target/rls/debug/deps","--extern","ahash=/Users/trevorclarke/code/cron/cw-purrbox/contracts/cw20-escrow/target/rls/debug/deps/libahash-dba120a77692b08f.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/trevorclarke/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/trevorclarke/code/cron/cw-purrbox/contracts/cw20-escrow/target/rls/debug/deps/libhashbrown-0a20e7ec16f6f7b4.rmeta"},"prelude":{"crate_id":{"name":"hashbrown","disambiguator":[17391556480082573983,0]},"crate_root":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src","external_crates":[{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[16249227214258238047,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[13791225915815425008,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[455111089362928276,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[740641686899810413,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","num":5,"id":{"name":"ahash","disambiguator":[14768118445737572987,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","num":6,"id":{"name":"once_cell","disambiguator":[4525933762301159880,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","num":7,"id":{"name":"getrandom","disambiguator":[7826760453764783728,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","num":8,"id":{"name":"cfg_if","disambiguator":[13037983282529128945,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","num":9,"id":{"name":"std","disambiguator":[9602236740471282608,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","num":10,"id":{"name":"libc","disambiguator":[1452182208797737205,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","num":11,"id":{"name":"unwind","disambiguator":[4474361821197688885,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","num":12,"id":{"name":"cfg_if","disambiguator":[11146593528668201643,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","num":13,"id":{"name":"hashbrown","disambiguator":[7026141623111916022,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","num":14,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[11096207044195207047,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","num":15,"id":{"name":"std_detect","disambiguator":[16946906222655600942,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","num":16,"id":{"name":"rustc_demangle","disambiguator":[9670608472714711915,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","num":17,"id":{"name":"addr2line","disambiguator":[3075685271658393714,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","num":18,"id":{"name":"gimli","disambiguator":[7553277853646633394,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","num":19,"id":{"name":"object","disambiguator":[5387634511767759158,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","num":20,"id":{"name":"memchr","disambiguator":[10401181353817371068,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","num":21,"id":{"name":"panic_unwind","disambiguator":[14296571408058143832,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","num":22,"id":{"name":"libc","disambiguator":[12525383312641221777,0]}}],"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/lib.rs","byte_start":0,"byte_end":4306,"line_start":1,"line_end":150,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/lib.rs","byte_start":2357,"byte_end":2358,"line_start":87,"line_end":87,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":2208}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/lib.rs","byte_start":2912,"byte_end":2913,"line_start":104,"line_end":104,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":2210}},{"kind":"Use","ref_id":{"krate":0,"index":554},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/lib.rs","byte_start":3295,"byte_end":3302,"line_start":117,"line_end":117,"column_start":21,"column_end":28},"alias_span":null,"name":"HashMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1734},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/lib.rs","byte_start":3324,"byte_end":3331,"line_start":118,"line_end":118,"column_start":21,"column_end":28},"alias_span":null,"name":"HashSet","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/lib.rs","byte_start":0,"byte_end":4306,"line_start":1,"line_end":150,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":1622},{"krate":0,"index":1662},{"krate":0,"index":2208},{"krate":0,"index":2210},{"krate":0,"index":2212},{"krate":0,"index":2215},{"krate":0,"index":2292},{"krate":0,"index":2297},{"krate":0,"index":2299},{"krate":0,"index":2300},{"krate":0,"index":2303},{"krate":0,"index":2304},{"krate":0,"index":2306}],"decl_id":null,"docs":" This crate is a Rust port of Google's high-performance [SwissTable] hash\n map, adapted to make it a drop-in replacement for Rust's standard `HashMap`\n and `HashSet` types.","sig":null,"attributes":[{"value":"/ This crate is a Rust port of Google's high-performance [SwissTable] hash","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/lib.rs","byte_start":0,"byte_end":76,"line_start":1,"line_end":1,"column_start":1,"column_end":77}},{"value":"/ map, adapted to make it a drop-in replacement for Rust's standard `HashMap`","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/lib.rs","byte_start":77,"byte_end":156,"line_start":2,"line_end":2,"column_start":1,"column_end":80}},{"value":"/ and `HashSet` types.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/lib.rs","byte_start":157,"byte_end":181,"line_start":3,"line_end":3,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/lib.rs","byte_start":182,"byte_end":185,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ The original C++ version of [SwissTable] can be found [here], and this","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/lib.rs","byte_start":186,"byte_end":260,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/ [CppCon talk] gives an overview of how the algorithm works.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/lib.rs","byte_start":261,"byte_end":324,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/lib.rs","byte_start":325,"byte_end":328,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [SwissTable]: https://abseil.io/blog/20180927-swisstables","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/lib.rs","byte_start":329,"byte_end":390,"line_start":8,"line_end":8,"column_start":1,"column_end":62}},{"value":"/ [here]: https://github.com/abseil/abseil-cpp/blob/master/absl/container/internal/raw_hash_set.h","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/lib.rs","byte_start":391,"byte_end":490,"line_start":9,"line_end":9,"column_start":1,"column_end":100}},{"value":"/ [CppCon talk]: https://www.youtube.com/watch?v=ncHmEUmJZf4","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/lib.rs","byte_start":491,"byte_end":553,"line_start":10,"line_end":10,"column_start":1,"column_end":63}},{"value":"no_std","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/lib.rs","byte_start":555,"byte_end":565,"line_start":12,"line_end":12,"column_start":1,"column_end":11}},{"value":"allow(clippy :: doc_markdown, clippy :: module_name_repetitions, clippy ::\nmust_use_candidate, clippy :: option_if_let_else, clippy :: redundant_else,\nclippy :: manual_map, clippy :: missing_safety_doc, clippy ::\nmissing_errors_doc)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/lib.rs","byte_start":899,"byte_end":1153,"line_start":28,"line_end":37,"column_start":1,"column_end":3}},{"value":"warn(missing_docs)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/lib.rs","byte_start":1154,"byte_end":1176,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"warn(rust_2018_idioms)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/lib.rs","byte_start":1177,"byte_end":1203,"line_start":39,"line_end":39,"column_start":1,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":76},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/alloc.rs","byte_start":95280,"byte_end":95289,"line_start":37,"line_end":37,"column_start":22,"column_end":31},"name":"Allocator","qualname":"::raw::alloc::inner::Allocator","value":"Allocator","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_safety_doc)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/alloc.rs","byte_start":95185,"byte_end":95221,"line_start":36,"line_end":36,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/alloc.rs","byte_start":95303,"byte_end":95311,"line_start":38,"line_end":38,"column_start":12,"column_end":20},"name":"allocate","qualname":"::raw::alloc::inner::Allocator::allocate","value":"pub fn allocate(&Self, Layout) -> Result<NonNull<u8>, ()>","parent":{"krate":0,"index":76},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/alloc.rs","byte_start":95381,"byte_end":95391,"line_start":39,"line_end":39,"column_start":19,"column_end":29},"name":"deallocate","qualname":"::raw::alloc::inner::Allocator::deallocate","value":"pub unsafe fn deallocate(&Self, NonNull<u8>, Layout)","parent":{"krate":0,"index":76},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2266},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/alloc.rs","byte_start":95483,"byte_end":95489,"line_start":43,"line_end":43,"column_start":16,"column_end":22},"name":"Global","qualname":"::raw::alloc::inner::Global","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":553},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":100847,"byte_end":100865,"line_start":13,"line_end":13,"column_start":10,"column_end":28},"name":"DefaultHashBuilder","qualname":"::map::DefaultHashBuilder","value":"ahash::RandomState","parent":null,"children":[],"decl_id":null,"docs":" Default hasher for `HashMap`.\n","sig":null,"attributes":[{"value":"/ Default hasher for `HashMap`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":100778,"byte_end":100811,"line_start":11,"line_end":11,"column_start":1,"column_end":34}},{"value":"cfg(feature = \"ahash\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":100812,"byte_end":100837,"line_start":12,"line_end":12,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":554},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":107258,"byte_end":107265,"line_start":188,"line_end":188,"column_start":12,"column_end":19},"name":"HashMap","qualname":"::map::HashMap","value":"HashMap {  }","parent":null,"children":[{"krate":0,"index":559},{"krate":0,"index":560}],"decl_id":null,"docs":" A hash map implemented with quadratic probing and SIMD lookup.","sig":null,"attributes":[{"value":"/ A hash map implemented with quadratic probing and SIMD lookup.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":100992,"byte_end":101058,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":101059,"byte_end":101062,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The default hashing algorithm is currently [`AHash`], though this is","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":101063,"byte_end":101135,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ subject to change at any point in the future. This hash function is very","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":101136,"byte_end":101212,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ fast for all types of keys, but this algorithm will typically *not* protect","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":101213,"byte_end":101292,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ against attacks such as HashDoS.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":101293,"byte_end":101329,"line_start":24,"line_end":24,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":101330,"byte_end":101333,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The hashing algorithm can be replaced on a per-`HashMap` basis using the","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":101334,"byte_end":101410,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"/ [`default`], [`with_hasher`], and [`with_capacity_and_hasher`] methods. Many","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":101411,"byte_end":101491,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ alternative algorithms are available on crates.io, such as the [`fnv`] crate.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":101492,"byte_end":101573,"line_start":28,"line_end":28,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":101574,"byte_end":101577,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ It is required that the keys implement the [`Eq`] and [`Hash`] traits, although","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":101578,"byte_end":101661,"line_start":30,"line_end":30,"column_start":1,"column_end":84}},{"value":"/ this can frequently be achieved by using `#[derive(PartialEq, Eq, Hash)]`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":101662,"byte_end":101740,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/ If you implement these yourself, it is important that the following","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":101741,"byte_end":101812,"line_start":32,"line_end":32,"column_start":1,"column_end":72}},{"value":"/ property holds:","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":101813,"byte_end":101832,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":101833,"byte_end":101836,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":101837,"byte_end":101848,"line_start":35,"line_end":35,"column_start":1,"column_end":12}},{"value":"/ k1 == k2 -> hash(k1) == hash(k2)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":101849,"byte_end":101885,"line_start":36,"line_end":36,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":101886,"byte_end":101893,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":101894,"byte_end":101897,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ In other words, if two keys are equal, their hashes must be equal.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":101898,"byte_end":101968,"line_start":39,"line_end":39,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":101969,"byte_end":101972,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ It is a logic error for a key to be modified in such a way that the key's","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":101973,"byte_end":102050,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/ hash, as determined by the [`Hash`] trait, or its equality, as determined by","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":102051,"byte_end":102131,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/ the [`Eq`] trait, changes while it is in the map. This is normally only","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":102132,"byte_end":102207,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/ possible through [`Cell`], [`RefCell`], global state, I/O, or unsafe code.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":102208,"byte_end":102286,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":102287,"byte_end":102290,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ It is also a logic error for the [`Hash`] implementation of a key to panic.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":102291,"byte_end":102370,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/ This is generally only possible if the trait is implemented manually. If a","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":102371,"byte_end":102449,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"/ panic does occur then the contents of the `HashMap` may become corrupted and","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":102450,"byte_end":102530,"line_start":48,"line_end":48,"column_start":1,"column_end":81}},{"value":"/ some items may be dropped from the table.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":102531,"byte_end":102576,"line_start":49,"line_end":49,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":102577,"byte_end":102580,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":102581,"byte_end":102595,"line_start":51,"line_end":51,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":102596,"byte_end":102599,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":102600,"byte_end":102607,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":102608,"byte_end":102635,"line_start":54,"line_end":54,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":102636,"byte_end":102639,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // Type inference lets us omit an explicit type signature (which","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":102640,"byte_end":102708,"line_start":56,"line_end":56,"column_start":1,"column_end":69}},{"value":"/ // would be `HashMap<String, String>` in this example).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":102709,"byte_end":102768,"line_start":57,"line_end":57,"column_start":1,"column_end":60}},{"value":"/ let mut book_reviews = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":102769,"byte_end":102811,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":102812,"byte_end":102815,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ // Review some books.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":102816,"byte_end":102841,"line_start":60,"line_end":60,"column_start":1,"column_end":26}},{"value":"/ book_reviews.insert(","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":102842,"byte_end":102866,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/     \"Adventures of Huckleberry Finn\".to_string(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":102867,"byte_end":102920,"line_start":62,"line_end":62,"column_start":1,"column_end":54}},{"value":"/     \"My favorite book.\".to_string(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":102921,"byte_end":102961,"line_start":63,"line_end":63,"column_start":1,"column_end":41}},{"value":"/ );","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":102962,"byte_end":102968,"line_start":64,"line_end":64,"column_start":1,"column_end":7}},{"value":"/ book_reviews.insert(","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":102969,"byte_end":102993,"line_start":65,"line_end":65,"column_start":1,"column_end":25}},{"value":"/     \"Grimms' Fairy Tales\".to_string(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":102994,"byte_end":103036,"line_start":66,"line_end":66,"column_start":1,"column_end":43}},{"value":"/     \"Masterpiece.\".to_string(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":103037,"byte_end":103072,"line_start":67,"line_end":67,"column_start":1,"column_end":36}},{"value":"/ );","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":103073,"byte_end":103079,"line_start":68,"line_end":68,"column_start":1,"column_end":7}},{"value":"/ book_reviews.insert(","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":103080,"byte_end":103104,"line_start":69,"line_end":69,"column_start":1,"column_end":25}},{"value":"/     \"Pride and Prejudice\".to_string(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":103105,"byte_end":103147,"line_start":70,"line_end":70,"column_start":1,"column_end":43}},{"value":"/     \"Very enjoyable.\".to_string(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":103148,"byte_end":103186,"line_start":71,"line_end":71,"column_start":1,"column_end":39}},{"value":"/ );","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":103187,"byte_end":103193,"line_start":72,"line_end":72,"column_start":1,"column_end":7}},{"value":"/ book_reviews.insert(","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":103194,"byte_end":103218,"line_start":73,"line_end":73,"column_start":1,"column_end":25}},{"value":"/     \"The Adventures of Sherlock Holmes\".to_string(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":103219,"byte_end":103275,"line_start":74,"line_end":74,"column_start":1,"column_end":57}},{"value":"/     \"Eye lyked it alot.\".to_string(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":103276,"byte_end":103317,"line_start":75,"line_end":75,"column_start":1,"column_end":42}},{"value":"/ );","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":103318,"byte_end":103324,"line_start":76,"line_end":76,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":103325,"byte_end":103328,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ // Check for a specific one.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":103329,"byte_end":103361,"line_start":78,"line_end":78,"column_start":1,"column_end":33}},{"value":"/ // When collections store owned values (String), they can still be","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":103362,"byte_end":103432,"line_start":79,"line_end":79,"column_start":1,"column_end":71}},{"value":"/ // queried using references (&str).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":103433,"byte_end":103472,"line_start":80,"line_end":80,"column_start":1,"column_end":40}},{"value":"/ if !book_reviews.contains_key(\"Les Misérables\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":103473,"byte_end":103527,"line_start":81,"line_end":81,"column_start":1,"column_end":54}},{"value":"/     println!(\"We've got {} reviews, but Les Misérables ain't one.\",","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":103528,"byte_end":103600,"line_start":82,"line_end":82,"column_start":1,"column_end":72}},{"value":"/              book_reviews.len());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":103601,"byte_end":103638,"line_start":83,"line_end":83,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":103639,"byte_end":103644,"line_start":84,"line_end":84,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":103645,"byte_end":103648,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ // oops, this review has a lot of spelling mistakes, let's delete it.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":103649,"byte_end":103722,"line_start":86,"line_end":86,"column_start":1,"column_end":74}},{"value":"/ book_reviews.remove(\"The Adventures of Sherlock Holmes\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":103723,"byte_end":103784,"line_start":87,"line_end":87,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":103785,"byte_end":103788,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ // Look up the values associated with some keys.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":103789,"byte_end":103841,"line_start":89,"line_end":89,"column_start":1,"column_end":53}},{"value":"/ let to_find = [\"Pride and Prejudice\", \"Alice's Adventure in Wonderland\"];","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":103842,"byte_end":103919,"line_start":90,"line_end":90,"column_start":1,"column_end":78}},{"value":"/ for &book in &to_find {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":103920,"byte_end":103947,"line_start":91,"line_end":91,"column_start":1,"column_end":28}},{"value":"/     match book_reviews.get(book) {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":103948,"byte_end":103986,"line_start":92,"line_end":92,"column_start":1,"column_end":39}},{"value":"/         Some(review) => println!(\"{}: {}\", book, review),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":103987,"byte_end":104048,"line_start":93,"line_end":93,"column_start":1,"column_end":62}},{"value":"/         None => println!(\"{} is unreviewed.\", book)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":104049,"byte_end":104104,"line_start":94,"line_end":94,"column_start":1,"column_end":56}},{"value":"/     }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":104105,"byte_end":104114,"line_start":95,"line_end":95,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":104115,"byte_end":104120,"line_start":96,"line_end":96,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":104121,"byte_end":104124,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ // Look up the value for a key (will panic if the key is not found).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":104125,"byte_end":104197,"line_start":98,"line_end":98,"column_start":1,"column_end":73}},{"value":"/ println!(\"Review for Jane: {}\", book_reviews[\"Pride and Prejudice\"]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":104198,"byte_end":104271,"line_start":99,"line_end":99,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":104272,"byte_end":104275,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ // Iterate over everything.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":104276,"byte_end":104307,"line_start":101,"line_end":101,"column_start":1,"column_end":32}},{"value":"/ for (book, review) in &book_reviews {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":104308,"byte_end":104349,"line_start":102,"line_end":102,"column_start":1,"column_end":42}},{"value":"/     println!(\"{}: \\\"{}\\\"\", book, review);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":104350,"byte_end":104395,"line_start":103,"line_end":103,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":104396,"byte_end":104401,"line_start":104,"line_end":104,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":104402,"byte_end":104409,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":104410,"byte_end":104413,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ `HashMap` also implements an [`Entry API`](#method.entry), which allows","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":104414,"byte_end":104489,"line_start":107,"line_end":107,"column_start":1,"column_end":76}},{"value":"/ for more complex methods of getting, setting, updating and removing keys and","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":104490,"byte_end":104570,"line_start":108,"line_end":108,"column_start":1,"column_end":81}},{"value":"/ their values:","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":104571,"byte_end":104588,"line_start":109,"line_end":109,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":104589,"byte_end":104592,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":104593,"byte_end":104600,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":104601,"byte_end":104628,"line_start":112,"line_end":112,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":104629,"byte_end":104632,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ // type inference lets us omit an explicit type signature (which","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":104633,"byte_end":104701,"line_start":114,"line_end":114,"column_start":1,"column_end":69}},{"value":"/ // would be `HashMap<&str, u8>` in this example).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":104702,"byte_end":104755,"line_start":115,"line_end":115,"column_start":1,"column_end":54}},{"value":"/ let mut player_stats = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":104756,"byte_end":104798,"line_start":116,"line_end":116,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":104799,"byte_end":104802,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ fn random_stat_buff() -> u8 {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":104803,"byte_end":104836,"line_start":118,"line_end":118,"column_start":1,"column_end":34}},{"value":"/     // could actually return some random value here - let's just return","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":104837,"byte_end":104912,"line_start":119,"line_end":119,"column_start":1,"column_end":76}},{"value":"/     // some fixed value for now","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":104913,"byte_end":104948,"line_start":120,"line_end":120,"column_start":1,"column_end":36}},{"value":"/     42","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":104949,"byte_end":104959,"line_start":121,"line_end":121,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":104960,"byte_end":104965,"line_start":122,"line_end":122,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":104966,"byte_end":104969,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ // insert a key only if it doesn't already exist","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":104970,"byte_end":105022,"line_start":124,"line_end":124,"column_start":1,"column_end":53}},{"value":"/ player_stats.entry(\"health\").or_insert(100);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":105023,"byte_end":105071,"line_start":125,"line_end":125,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":105072,"byte_end":105075,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ // insert a key using a function that provides a new value only if it","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":105076,"byte_end":105149,"line_start":127,"line_end":127,"column_start":1,"column_end":74}},{"value":"/ // doesn't already exist","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":105150,"byte_end":105178,"line_start":128,"line_end":128,"column_start":1,"column_end":29}},{"value":"/ player_stats.entry(\"defence\").or_insert_with(random_stat_buff);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":105179,"byte_end":105246,"line_start":129,"line_end":129,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":105247,"byte_end":105250,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ // update a key, guarding against the key possibly not being set","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":105251,"byte_end":105319,"line_start":131,"line_end":131,"column_start":1,"column_end":69}},{"value":"/ let stat = player_stats.entry(\"attack\").or_insert(100);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":105320,"byte_end":105379,"line_start":132,"line_end":132,"column_start":1,"column_end":60}},{"value":"/ *stat += random_stat_buff();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":105380,"byte_end":105412,"line_start":133,"line_end":133,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":105413,"byte_end":105420,"line_start":134,"line_end":134,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":105421,"byte_end":105424,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ The easiest way to use `HashMap` with a custom key type is to derive [`Eq`] and [`Hash`].","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":105425,"byte_end":105518,"line_start":136,"line_end":136,"column_start":1,"column_end":94}},{"value":"/ We must also derive [`PartialEq`].","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":105519,"byte_end":105557,"line_start":137,"line_end":137,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":105558,"byte_end":105561,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":105562,"byte_end":105621,"line_start":139,"line_end":139,"column_start":1,"column_end":60}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":105622,"byte_end":105686,"line_start":140,"line_end":140,"column_start":1,"column_end":65}},{"value":"/ [`PartialEq`]: https://doc.rust-lang.org/std/cmp/trait.PartialEq.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":105687,"byte_end":105760,"line_start":141,"line_end":141,"column_start":1,"column_end":74}},{"value":"/ [`RefCell`]: https://doc.rust-lang.org/std/cell/struct.RefCell.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":105761,"byte_end":105832,"line_start":142,"line_end":142,"column_start":1,"column_end":72}},{"value":"/ [`Cell`]: https://doc.rust-lang.org/std/cell/struct.Cell.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":105833,"byte_end":105898,"line_start":143,"line_end":143,"column_start":1,"column_end":66}},{"value":"/ [`default`]: #method.default","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":105899,"byte_end":105931,"line_start":144,"line_end":144,"column_start":1,"column_end":33}},{"value":"/ [`with_hasher`]: #method.with_hasher","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":105932,"byte_end":105972,"line_start":145,"line_end":145,"column_start":1,"column_end":41}},{"value":"/ [`with_capacity_and_hasher`]: #method.with_capacity_and_hasher","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":105973,"byte_end":106039,"line_start":146,"line_end":146,"column_start":1,"column_end":67}},{"value":"/ [`fnv`]: https://crates.io/crates/fnv","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":106040,"byte_end":106081,"line_start":147,"line_end":147,"column_start":1,"column_end":42}},{"value":"/ [`AHash`]: https://crates.io/crates/ahash","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":106082,"byte_end":106127,"line_start":148,"line_end":148,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":106128,"byte_end":106131,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":106132,"byte_end":106139,"line_start":150,"line_end":150,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":106140,"byte_end":106167,"line_start":151,"line_end":151,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":106168,"byte_end":106171,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ #[derive(Hash, Eq, PartialEq, Debug)]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":106172,"byte_end":106213,"line_start":153,"line_end":153,"column_start":1,"column_end":42}},{"value":"/ struct Viking {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":106214,"byte_end":106233,"line_start":154,"line_end":154,"column_start":1,"column_end":20}},{"value":"/     name: String,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":106234,"byte_end":106255,"line_start":155,"line_end":155,"column_start":1,"column_end":22}},{"value":"/     country: String,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":106256,"byte_end":106280,"line_start":156,"line_end":156,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":106281,"byte_end":106286,"line_start":157,"line_end":157,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":106287,"byte_end":106290,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ impl Viking {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":106291,"byte_end":106308,"line_start":159,"line_end":159,"column_start":1,"column_end":18}},{"value":"/     /// Creates a new Viking.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":106309,"byte_end":106342,"line_start":160,"line_end":160,"column_start":1,"column_end":34}},{"value":"/     fn new(name: &str, country: &str) -> Viking {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":106343,"byte_end":106396,"line_start":161,"line_end":161,"column_start":1,"column_end":54}},{"value":"/         Viking { name: name.to_string(), country: country.to_string() }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":106397,"byte_end":106472,"line_start":162,"line_end":162,"column_start":1,"column_end":76}},{"value":"/     }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":106473,"byte_end":106482,"line_start":163,"line_end":163,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":106483,"byte_end":106488,"line_start":164,"line_end":164,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":106489,"byte_end":106492,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ // Use a HashMap to store the vikings' health points.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":106493,"byte_end":106550,"line_start":166,"line_end":166,"column_start":1,"column_end":58}},{"value":"/ let mut vikings = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":106551,"byte_end":106588,"line_start":167,"line_end":167,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":106589,"byte_end":106592,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ vikings.insert(Viking::new(\"Einar\", \"Norway\"), 25);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":106593,"byte_end":106648,"line_start":169,"line_end":169,"column_start":1,"column_end":56}},{"value":"/ vikings.insert(Viking::new(\"Olaf\", \"Denmark\"), 24);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":106649,"byte_end":106704,"line_start":170,"line_end":170,"column_start":1,"column_end":56}},{"value":"/ vikings.insert(Viking::new(\"Harald\", \"Iceland\"), 12);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":106705,"byte_end":106762,"line_start":171,"line_end":171,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":106763,"byte_end":106766,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ // Use derived implementation to print the status of the vikings.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":106767,"byte_end":106836,"line_start":173,"line_end":173,"column_start":1,"column_end":70}},{"value":"/ for (viking, health) in &vikings {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":106837,"byte_end":106875,"line_start":174,"line_end":174,"column_start":1,"column_end":39}},{"value":"/     println!(\"{:?} has {} hp\", viking, health);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":106876,"byte_end":106927,"line_start":175,"line_end":175,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":106928,"byte_end":106933,"line_start":176,"line_end":176,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":106934,"byte_end":106941,"line_start":177,"line_end":177,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":106942,"byte_end":106945,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ A `HashMap` with fixed list of elements can be initialized from an array:","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":106946,"byte_end":107023,"line_start":179,"line_end":179,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":107024,"byte_end":107027,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":107028,"byte_end":107035,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":107036,"byte_end":107063,"line_start":182,"line_end":182,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":107064,"byte_end":107067,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ let timber_resources: HashMap<&str, i32> = [(\"Norway\", 100), (\"Denmark\", 50), (\"Iceland\", 10)]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":107068,"byte_end":107166,"line_start":184,"line_end":184,"column_start":1,"column_end":99}},{"value":"/     .iter().cloned().collect();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":107167,"byte_end":107202,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/ // use the values stored in map","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":107203,"byte_end":107238,"line_start":186,"line_end":186,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":107239,"byte_end":107246,"line_start":187,"line_end":187,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":110659,"byte_end":110662,"line_start":307,"line_end":307,"column_start":12,"column_end":15},"name":"new","qualname":"<HashMap<K, V, DefaultHashBuilder>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap`.","sig":null,"attributes":[{"value":"/ Creates an empty `HashMap`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":110208,"byte_end":110239,"line_start":293,"line_end":293,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":110244,"byte_end":110247,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ The hash map is initially created with a capacity of 0, so it will not allocate until it","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":110252,"byte_end":110344,"line_start":295,"line_end":295,"column_start":5,"column_end":97}},{"value":"/ is first inserted into.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":110349,"byte_end":110376,"line_start":296,"line_end":296,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":110381,"byte_end":110384,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":110389,"byte_end":110403,"line_start":298,"line_end":298,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":110408,"byte_end":110411,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":110416,"byte_end":110423,"line_start":300,"line_end":300,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":110428,"byte_end":110455,"line_start":301,"line_end":301,"column_start":5,"column_end":32}},{"value":"/ let mut map: HashMap<&str, i32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":110460,"byte_end":110513,"line_start":302,"line_end":302,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(map.len(), 0);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":110518,"byte_end":110547,"line_start":303,"line_end":303,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(map.capacity(), 0);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":110552,"byte_end":110586,"line_start":304,"line_end":304,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":110591,"byte_end":110598,"line_start":305,"line_end":305,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":110639,"byte_end":110645,"line_start":306,"line_end":306,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":111225,"byte_end":111238,"line_start":325,"line_end":325,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<HashMap<K, V, DefaultHashBuilder>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates an empty `HashMap` with the specified capacity.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":110710,"byte_end":110769,"line_start":311,"line_end":311,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":110774,"byte_end":110777,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ The hash map will be able to hold at least `capacity` elements without","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":110782,"byte_end":110856,"line_start":313,"line_end":313,"column_start":5,"column_end":79}},{"value":"/ reallocating. If `capacity` is 0, the hash map will not allocate.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":110861,"byte_end":110930,"line_start":314,"line_end":314,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":110935,"byte_end":110938,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":110943,"byte_end":110957,"line_start":316,"line_end":316,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":110962,"byte_end":110965,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":110970,"byte_end":110977,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":110982,"byte_end":111009,"line_start":319,"line_end":319,"column_start":5,"column_end":32}},{"value":"/ let mut map: HashMap<&str, i32> = HashMap::with_capacity(10);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":111014,"byte_end":111079,"line_start":320,"line_end":320,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(map.len(), 0);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":111084,"byte_end":111113,"line_start":321,"line_end":321,"column_start":5,"column_end":34}},{"value":"/ assert!(map.capacity() >= 10);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":111118,"byte_end":111152,"line_start":322,"line_end":322,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":111157,"byte_end":111164,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":111205,"byte_end":111211,"line_start":324,"line_end":324,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":111712,"byte_end":111718,"line_start":337,"line_end":337,"column_start":12,"column_end":18},"name":"new_in","qualname":"<HashMap<K, V, DefaultHashBuilder, A>>::new_in","value":"pub fn new_in(A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap` using the given allocator.","sig":null,"attributes":[{"value":"/ Creates an empty `HashMap` using the given allocator.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":111457,"byte_end":111514,"line_start":332,"line_end":332,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":111519,"byte_end":111522,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ The hash map is initially created with a capacity of 0, so it will not allocate until it","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":111527,"byte_end":111619,"line_start":334,"line_end":334,"column_start":5,"column_end":97}},{"value":"/ is first inserted into.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":111624,"byte_end":111651,"line_start":335,"line_end":335,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":111692,"byte_end":111698,"line_start":336,"line_end":336,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":112124,"byte_end":112140,"line_start":346,"line_end":346,"column_start":12,"column_end":28},"name":"with_capacity_in","qualname":"<HashMap<K, V, DefaultHashBuilder, A>>::with_capacity_in","value":"pub fn with_capacity_in(usize, A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap` with the specified capacity using the given allocator.","sig":null,"attributes":[{"value":"/ Creates an empty `HashMap` with the specified capacity using the given allocator.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":111817,"byte_end":111902,"line_start":341,"line_end":341,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":111907,"byte_end":111910,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ The hash map will be able to hold at least `capacity` elements without","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":111915,"byte_end":111989,"line_start":343,"line_end":343,"column_start":5,"column_end":79}},{"value":"/ reallocating. If `capacity` is 0, the hash map will not allocate.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":111994,"byte_end":112063,"line_start":344,"line_end":344,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":112104,"byte_end":112110,"line_start":345,"line_end":345,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":113493,"byte_end":113504,"line_start":382,"line_end":382,"column_start":18,"column_end":29},"name":"with_hasher","qualname":"<HashMap<K, V, S>>::with_hasher","value":"pub const fn with_hasher(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap` which will use the given hash builder to hash\n keys.","sig":null,"attributes":[{"value":"/ Creates an empty `HashMap` which will use the given hash builder to hash","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":112314,"byte_end":112390,"line_start":352,"line_end":352,"column_start":5,"column_end":81}},{"value":"/ keys.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":112395,"byte_end":112404,"line_start":353,"line_end":353,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":112409,"byte_end":112412,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ The hash map is initially created with a capacity of 0, so it will not","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":112417,"byte_end":112491,"line_start":355,"line_end":355,"column_start":5,"column_end":79}},{"value":"/ allocate until it is first inserted into.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":112496,"byte_end":112541,"line_start":356,"line_end":356,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":112546,"byte_end":112549,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ Warning: `hash_builder` is normally randomly generated, and","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":112554,"byte_end":112617,"line_start":358,"line_end":358,"column_start":5,"column_end":68}},{"value":"/ is designed to allow HashMaps to be resistant to attacks that","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":112622,"byte_end":112687,"line_start":359,"line_end":359,"column_start":5,"column_end":70}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":112692,"byte_end":112755,"line_start":360,"line_end":360,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":112760,"byte_end":112824,"line_start":361,"line_end":361,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":112829,"byte_end":112832,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ The `hash_builder` passed should implement the [`BuildHasher`] trait for","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":112837,"byte_end":112913,"line_start":363,"line_end":363,"column_start":5,"column_end":81}},{"value":"/ the HashMap to be useful, see its documentation for details.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":112918,"byte_end":112982,"line_start":364,"line_end":364,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":112987,"byte_end":112990,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":112995,"byte_end":113009,"line_start":366,"line_end":366,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":113014,"byte_end":113017,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":113022,"byte_end":113029,"line_start":368,"line_end":368,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":113034,"byte_end":113061,"line_start":369,"line_end":369,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":113066,"byte_end":113114,"line_start":370,"line_end":370,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":113119,"byte_end":113122,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ let s = DefaultHashBuilder::default();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":113127,"byte_end":113169,"line_start":372,"line_end":372,"column_start":5,"column_end":47}},{"value":"/ let mut map = HashMap::with_hasher(s);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":113174,"byte_end":113216,"line_start":373,"line_end":373,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(map.len(), 0);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":113221,"byte_end":113250,"line_start":374,"line_end":374,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(map.capacity(), 0);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":113255,"byte_end":113289,"line_start":375,"line_end":375,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":113294,"byte_end":113297,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ map.insert(1, 2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":113302,"byte_end":113323,"line_start":377,"line_end":377,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":113328,"byte_end":113335,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":113340,"byte_end":113343,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ [`BuildHasher`]: https://doc.rust-lang.org/std/hash/trait.BuildHasher.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":113348,"byte_end":113426,"line_start":380,"line_end":380,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":113467,"byte_end":113473,"line_start":381,"line_end":381,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":114860,"byte_end":114884,"line_start":419,"line_end":419,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<HashMap<K, V, S>>::with_capacity_and_hasher","value":"pub fn with_capacity_and_hasher(usize, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap` with the specified capacity, using `hash_builder`\n to hash the keys.","sig":null,"attributes":[{"value":"/ Creates an empty `HashMap` with the specified capacity, using `hash_builder`","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":113630,"byte_end":113710,"line_start":389,"line_end":389,"column_start":5,"column_end":85}},{"value":"/ to hash the keys.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":113715,"byte_end":113736,"line_start":390,"line_end":390,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":113741,"byte_end":113744,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ The hash map will be able to hold at least `capacity` elements without","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":113749,"byte_end":113823,"line_start":392,"line_end":392,"column_start":5,"column_end":79}},{"value":"/ reallocating. If `capacity` is 0, the hash map will not allocate.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":113828,"byte_end":113897,"line_start":393,"line_end":393,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":113902,"byte_end":113905,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ Warning: `hash_builder` is normally randomly generated, and","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":113910,"byte_end":113973,"line_start":395,"line_end":395,"column_start":5,"column_end":68}},{"value":"/ is designed to allow HashMaps to be resistant to attacks that","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":113978,"byte_end":114043,"line_start":396,"line_end":396,"column_start":5,"column_end":70}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":114048,"byte_end":114111,"line_start":397,"line_end":397,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":114116,"byte_end":114180,"line_start":398,"line_end":398,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":114185,"byte_end":114188,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ The `hash_builder` passed should implement the [`BuildHasher`] trait for","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":114193,"byte_end":114269,"line_start":400,"line_end":400,"column_start":5,"column_end":81}},{"value":"/ the HashMap to be useful, see its documentation for details.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":114274,"byte_end":114338,"line_start":401,"line_end":401,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":114343,"byte_end":114346,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":114351,"byte_end":114365,"line_start":403,"line_end":403,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":114370,"byte_end":114373,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":114378,"byte_end":114385,"line_start":405,"line_end":405,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":114390,"byte_end":114417,"line_start":406,"line_end":406,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":114422,"byte_end":114470,"line_start":407,"line_end":407,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":114475,"byte_end":114478,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ let s = DefaultHashBuilder::default();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":114483,"byte_end":114525,"line_start":409,"line_end":409,"column_start":5,"column_end":47}},{"value":"/ let mut map = HashMap::with_capacity_and_hasher(10, s);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":114530,"byte_end":114589,"line_start":410,"line_end":410,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(map.len(), 0);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":114594,"byte_end":114623,"line_start":411,"line_end":411,"column_start":5,"column_end":34}},{"value":"/ assert!(map.capacity() >= 10);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":114628,"byte_end":114662,"line_start":412,"line_end":412,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":114667,"byte_end":114670,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ map.insert(1, 2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":114675,"byte_end":114696,"line_start":414,"line_end":414,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":114701,"byte_end":114708,"line_start":415,"line_end":415,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":114713,"byte_end":114716,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ [`BuildHasher`]: https://doc.rust-lang.org/std/hash/trait.BuildHasher.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":114721,"byte_end":114799,"line_start":417,"line_end":417,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":114840,"byte_end":114846,"line_start":418,"line_end":418,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":115183,"byte_end":115192,"line_start":430,"line_end":430,"column_start":12,"column_end":21},"name":"allocator","qualname":"<HashMap<K, V, S, A>>::allocator","value":"pub fn allocator(&Self) -> &A","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying allocator.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying allocator.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":115105,"byte_end":115157,"line_start":428,"line_end":428,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":115162,"byte_end":115171,"line_start":429,"line_end":429,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":116069,"byte_end":116083,"line_start":455,"line_end":455,"column_start":12,"column_end":26},"name":"with_hasher_in","qualname":"<HashMap<K, V, S, A>>::with_hasher_in","value":"pub fn with_hasher_in(S, A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap` which will use the given hash builder to hash\n keys. It will be allocated with the given allocator.","sig":null,"attributes":[{"value":"/ Creates an empty `HashMap` which will use the given hash builder to hash","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":115250,"byte_end":115326,"line_start":434,"line_end":434,"column_start":5,"column_end":81}},{"value":"/ keys. It will be allocated with the given allocator.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":115331,"byte_end":115387,"line_start":435,"line_end":435,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":115392,"byte_end":115395,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ The created map has the default initial capacity.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":115400,"byte_end":115453,"line_start":437,"line_end":437,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":115458,"byte_end":115461,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ Warning: `hash_builder` is normally randomly generated, and","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":115466,"byte_end":115529,"line_start":439,"line_end":439,"column_start":5,"column_end":68}},{"value":"/ is designed to allow HashMaps to be resistant to attacks that","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":115534,"byte_end":115599,"line_start":440,"line_end":440,"column_start":5,"column_end":70}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":115604,"byte_end":115667,"line_start":441,"line_end":441,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":115672,"byte_end":115736,"line_start":442,"line_end":442,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":115741,"byte_end":115744,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":115749,"byte_end":115763,"line_start":444,"line_end":444,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":115768,"byte_end":115771,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":115776,"byte_end":115783,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":115788,"byte_end":115815,"line_start":447,"line_end":447,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":115820,"byte_end":115868,"line_start":448,"line_end":448,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":115873,"byte_end":115876,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ let s = DefaultHashBuilder::default();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":115881,"byte_end":115923,"line_start":450,"line_end":450,"column_start":5,"column_end":47}},{"value":"/ let mut map = HashMap::with_hasher(s);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":115928,"byte_end":115970,"line_start":451,"line_end":451,"column_start":5,"column_end":47}},{"value":"/ map.insert(1, 2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":115975,"byte_end":115996,"line_start":452,"line_end":452,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":116001,"byte_end":116008,"line_start":453,"line_end":453,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":116049,"byte_end":116055,"line_start":454,"line_end":454,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":117174,"byte_end":117201,"line_start":484,"line_end":484,"column_start":12,"column_end":39},"name":"with_capacity_and_hasher_in","qualname":"<HashMap<K, V, S, A>>::with_capacity_and_hasher_in","value":"pub fn with_capacity_and_hasher_in(usize, S, A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap` with the specified capacity, using `hash_builder`\n to hash the keys. It will be allocated with the given allocator.","sig":null,"attributes":[{"value":"/ Creates an empty `HashMap` with the specified capacity, using `hash_builder`","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":116227,"byte_end":116307,"line_start":462,"line_end":462,"column_start":5,"column_end":85}},{"value":"/ to hash the keys. It will be allocated with the given allocator.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":116312,"byte_end":116380,"line_start":463,"line_end":463,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":116385,"byte_end":116388,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ The hash map will be able to hold at least `capacity` elements without","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":116393,"byte_end":116467,"line_start":465,"line_end":465,"column_start":5,"column_end":79}},{"value":"/ reallocating. If `capacity` is 0, the hash map will not allocate.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":116472,"byte_end":116541,"line_start":466,"line_end":466,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":116546,"byte_end":116549,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ Warning: `hash_builder` is normally randomly generated, and","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":116554,"byte_end":116617,"line_start":468,"line_end":468,"column_start":5,"column_end":68}},{"value":"/ is designed to allow HashMaps to be resistant to attacks that","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":116622,"byte_end":116687,"line_start":469,"line_end":469,"column_start":5,"column_end":70}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":116692,"byte_end":116755,"line_start":470,"line_end":470,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":116760,"byte_end":116824,"line_start":471,"line_end":471,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":116829,"byte_end":116832,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":116837,"byte_end":116851,"line_start":473,"line_end":473,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":116856,"byte_end":116859,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":116864,"byte_end":116871,"line_start":475,"line_end":475,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":116876,"byte_end":116903,"line_start":476,"line_end":476,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":116908,"byte_end":116956,"line_start":477,"line_end":477,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":116961,"byte_end":116964,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ let s = DefaultHashBuilder::default();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":116969,"byte_end":117011,"line_start":479,"line_end":479,"column_start":5,"column_end":47}},{"value":"/ let mut map = HashMap::with_capacity_and_hasher(10, s);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":117016,"byte_end":117075,"line_start":480,"line_end":480,"column_start":5,"column_end":64}},{"value":"/ map.insert(1, 2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":117080,"byte_end":117101,"line_start":481,"line_end":481,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":117106,"byte_end":117113,"line_start":482,"line_end":482,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":117154,"byte_end":117160,"line_start":483,"line_end":483,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":117914,"byte_end":117920,"line_start":506,"line_end":506,"column_start":12,"column_end":18},"name":"hasher","qualname":"<HashMap<K, V, S, A>>::hasher","value":"pub fn hasher(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the map's [`BuildHasher`].","sig":null,"attributes":[{"value":"/ Returns a reference to the map's [`BuildHasher`].","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":117382,"byte_end":117435,"line_start":491,"line_end":491,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":117440,"byte_end":117443,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ [`BuildHasher`]: https://doc.rust-lang.org/std/hash/trait.BuildHasher.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":117448,"byte_end":117526,"line_start":493,"line_end":493,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":117531,"byte_end":117534,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":117539,"byte_end":117553,"line_start":495,"line_end":495,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":117558,"byte_end":117561,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":117566,"byte_end":117573,"line_start":497,"line_end":497,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":117578,"byte_end":117605,"line_start":498,"line_end":498,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":117610,"byte_end":117658,"line_start":499,"line_end":499,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":117663,"byte_end":117666,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ let hasher = DefaultHashBuilder::default();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":117671,"byte_end":117718,"line_start":501,"line_end":501,"column_start":5,"column_end":52}},{"value":"/ let map: HashMap<i32, i32> = HashMap::with_hasher(hasher);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":117723,"byte_end":117785,"line_start":502,"line_end":502,"column_start":5,"column_end":67}},{"value":"/ let hasher: &DefaultHashBuilder = map.hasher();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":117790,"byte_end":117841,"line_start":503,"line_end":503,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":117846,"byte_end":117853,"line_start":504,"line_end":504,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":117894,"byte_end":117900,"line_start":505,"line_end":505,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":118498,"byte_end":118506,"line_start":524,"line_end":524,"column_start":12,"column_end":20},"name":"capacity","qualname":"<HashMap<K, V, S, A>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the map can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the map can hold without reallocating.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":117974,"byte_end":118047,"line_start":510,"line_end":510,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":118052,"byte_end":118055,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ This number is a lower bound; the `HashMap<K, V>` might be able to hold","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":118060,"byte_end":118135,"line_start":512,"line_end":512,"column_start":5,"column_end":80}},{"value":"/ more, but is guaranteed to be able to hold at least this many.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":118140,"byte_end":118206,"line_start":513,"line_end":513,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":118211,"byte_end":118214,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":118219,"byte_end":118233,"line_start":515,"line_end":515,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":118238,"byte_end":118241,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":118246,"byte_end":118253,"line_start":517,"line_end":517,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":118258,"byte_end":118285,"line_start":518,"line_end":518,"column_start":5,"column_end":32}},{"value":"/ let map: HashMap<i32, i32> = HashMap::with_capacity(100);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":118290,"byte_end":118351,"line_start":519,"line_end":519,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(map.len(), 0);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":118356,"byte_end":118385,"line_start":520,"line_end":520,"column_start":5,"column_end":34}},{"value":"/ assert!(map.capacity() >= 100);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":118390,"byte_end":118425,"line_start":521,"line_end":521,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":118430,"byte_end":118437,"line_start":522,"line_end":522,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":118478,"byte_end":118484,"line_start":523,"line_end":523,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":119398,"byte_end":119402,"line_start":556,"line_end":556,"column_start":12,"column_end":16},"name":"keys","qualname":"<HashMap<K, V, S, A>>::keys","value":"pub fn keys(&Self) -> Keys<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all keys in arbitrary order.\n The iterator element type is `&'a K`.","sig":null,"attributes":[{"value":"/ An iterator visiting all keys in arbitrary order.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":118566,"byte_end":118619,"line_start":528,"line_end":528,"column_start":5,"column_end":58}},{"value":"/ The iterator element type is `&'a K`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":118624,"byte_end":118665,"line_start":529,"line_end":529,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":118670,"byte_end":118673,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":118678,"byte_end":118692,"line_start":531,"line_end":531,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":118697,"byte_end":118700,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":118705,"byte_end":118712,"line_start":533,"line_end":533,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":118717,"byte_end":118744,"line_start":534,"line_end":534,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":118749,"byte_end":118752,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":118757,"byte_end":118790,"line_start":536,"line_end":536,"column_start":5,"column_end":38}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":118795,"byte_end":118818,"line_start":537,"line_end":537,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":118823,"byte_end":118846,"line_start":538,"line_end":538,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":118851,"byte_end":118874,"line_start":539,"line_end":539,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":118879,"byte_end":118908,"line_start":540,"line_end":540,"column_start":5,"column_end":34}},{"value":"/ let mut vec: Vec<&str> = Vec::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":118913,"byte_end":118953,"line_start":541,"line_end":541,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":118958,"byte_end":118961,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ for key in map.keys() {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":118966,"byte_end":118993,"line_start":543,"line_end":543,"column_start":5,"column_end":32}},{"value":"/     println!(\"{}\", key);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":118998,"byte_end":119026,"line_start":544,"line_end":544,"column_start":5,"column_end":33}},{"value":"/     vec.push(*key);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":119031,"byte_end":119054,"line_start":545,"line_end":545,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":119059,"byte_end":119064,"line_start":546,"line_end":546,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":119069,"byte_end":119072,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ // The `Keys` iterator produces keys in arbitrary order, so the","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":119077,"byte_end":119144,"line_start":548,"line_end":548,"column_start":5,"column_end":72}},{"value":"/ // keys must be sorted to test them against a sorted array.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":119149,"byte_end":119212,"line_start":549,"line_end":549,"column_start":5,"column_end":68}},{"value":"/ vec.sort_unstable();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":119217,"byte_end":119241,"line_start":550,"line_end":550,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(vec, [\"a\", \"b\", \"c\"]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":119246,"byte_end":119283,"line_start":551,"line_end":551,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":119288,"byte_end":119291,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":119296,"byte_end":119325,"line_start":553,"line_end":553,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":119330,"byte_end":119337,"line_start":554,"line_end":554,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":119378,"byte_end":119384,"line_start":555,"line_end":555,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":120312,"byte_end":120318,"line_start":588,"line_end":588,"column_start":12,"column_end":18},"name":"values","qualname":"<HashMap<K, V, S, A>>::values","value":"pub fn values(&Self) -> Values<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values in arbitrary order.\n The iterator element type is `&'a V`.","sig":null,"attributes":[{"value":"/ An iterator visiting all values in arbitrary order.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":119477,"byte_end":119532,"line_start":560,"line_end":560,"column_start":5,"column_end":60}},{"value":"/ The iterator element type is `&'a V`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":119537,"byte_end":119578,"line_start":561,"line_end":561,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":119583,"byte_end":119586,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":119591,"byte_end":119605,"line_start":563,"line_end":563,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":119610,"byte_end":119613,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":119618,"byte_end":119625,"line_start":565,"line_end":565,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":119630,"byte_end":119657,"line_start":566,"line_end":566,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":119662,"byte_end":119665,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":119670,"byte_end":119703,"line_start":568,"line_end":568,"column_start":5,"column_end":38}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":119708,"byte_end":119731,"line_start":569,"line_end":569,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":119736,"byte_end":119759,"line_start":570,"line_end":570,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":119764,"byte_end":119787,"line_start":571,"line_end":571,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":119792,"byte_end":119821,"line_start":572,"line_end":572,"column_start":5,"column_end":34}},{"value":"/ let mut vec: Vec<i32> = Vec::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":119826,"byte_end":119865,"line_start":573,"line_end":573,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":119870,"byte_end":119873,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ for val in map.values() {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":119878,"byte_end":119907,"line_start":575,"line_end":575,"column_start":5,"column_end":34}},{"value":"/     println!(\"{}\", val);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":119912,"byte_end":119940,"line_start":576,"line_end":576,"column_start":5,"column_end":33}},{"value":"/     vec.push(*val);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":119945,"byte_end":119968,"line_start":577,"line_end":577,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":119973,"byte_end":119978,"line_start":578,"line_end":578,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":119983,"byte_end":119986,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ // The `Values` iterator produces values in arbitrary order, so the","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":119991,"byte_end":120062,"line_start":580,"line_end":580,"column_start":5,"column_end":76}},{"value":"/ // values must be sorted to test them against a sorted array.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":120067,"byte_end":120132,"line_start":581,"line_end":581,"column_start":5,"column_end":70}},{"value":"/ vec.sort_unstable();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":120137,"byte_end":120161,"line_start":582,"line_end":582,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(vec, [1, 2, 3]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":120166,"byte_end":120197,"line_start":583,"line_end":583,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":120202,"byte_end":120205,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":120210,"byte_end":120239,"line_start":585,"line_end":585,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":120244,"byte_end":120251,"line_start":586,"line_end":586,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":120292,"byte_end":120298,"line_start":587,"line_end":587,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":121349,"byte_end":121359,"line_start":626,"line_end":626,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<HashMap<K, V, S, A>>::values_mut","value":"pub fn values_mut(&mut Self) -> ValuesMut<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values mutably in arbitrary order.\n The iterator element type is `&'a mut V`.","sig":null,"attributes":[{"value":"/ An iterator visiting all values mutably in arbitrary order.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":120397,"byte_end":120460,"line_start":592,"line_end":592,"column_start":5,"column_end":68}},{"value":"/ The iterator element type is `&'a mut V`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":120465,"byte_end":120510,"line_start":593,"line_end":593,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":120515,"byte_end":120518,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":120523,"byte_end":120537,"line_start":595,"line_end":595,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":120542,"byte_end":120545,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":120550,"byte_end":120557,"line_start":597,"line_end":597,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":120562,"byte_end":120589,"line_start":598,"line_end":598,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":120594,"byte_end":120597,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":120602,"byte_end":120635,"line_start":600,"line_end":600,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":120640,"byte_end":120643,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":120648,"byte_end":120671,"line_start":602,"line_end":602,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":120676,"byte_end":120699,"line_start":603,"line_end":603,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":120704,"byte_end":120727,"line_start":604,"line_end":604,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":120732,"byte_end":120735,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ for val in map.values_mut() {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":120740,"byte_end":120773,"line_start":606,"line_end":606,"column_start":5,"column_end":38}},{"value":"/     *val = *val + 10;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":120778,"byte_end":120803,"line_start":607,"line_end":607,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":120808,"byte_end":120813,"line_start":608,"line_end":608,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":120818,"byte_end":120821,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":120826,"byte_end":120855,"line_start":610,"line_end":610,"column_start":5,"column_end":34}},{"value":"/ let mut vec: Vec<i32> = Vec::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":120860,"byte_end":120899,"line_start":611,"line_end":611,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":120904,"byte_end":120907,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ for val in map.values() {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":120912,"byte_end":120941,"line_start":613,"line_end":613,"column_start":5,"column_end":34}},{"value":"/     println!(\"{}\", val);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":120946,"byte_end":120974,"line_start":614,"line_end":614,"column_start":5,"column_end":33}},{"value":"/     vec.push(*val);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":120979,"byte_end":121002,"line_start":615,"line_end":615,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":121007,"byte_end":121012,"line_start":616,"line_end":616,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":121017,"byte_end":121020,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ // The `Values` iterator produces values in arbitrary order, so the","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":121025,"byte_end":121096,"line_start":618,"line_end":618,"column_start":5,"column_end":76}},{"value":"/ // values must be sorted to test them against a sorted array.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":121101,"byte_end":121166,"line_start":619,"line_end":619,"column_start":5,"column_end":70}},{"value":"/ vec.sort_unstable();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":121171,"byte_end":121195,"line_start":620,"line_end":620,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(vec, [11, 12, 13]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":121200,"byte_end":121234,"line_start":621,"line_end":621,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":121239,"byte_end":121242,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":121247,"byte_end":121276,"line_start":623,"line_end":623,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":121281,"byte_end":121288,"line_start":624,"line_end":624,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":121329,"byte_end":121335,"line_start":625,"line_end":625,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":122382,"byte_end":122386,"line_start":660,"line_end":660,"column_start":12,"column_end":16},"name":"iter","qualname":"<HashMap<K, V, S, A>>::iter","value":"pub fn iter(&Self) -> Iter<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all key-value pairs in arbitrary order.\n The iterator element type is `(&'a K, &'a V)`.","sig":null,"attributes":[{"value":"/ An iterator visiting all key-value pairs in arbitrary order.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":121473,"byte_end":121537,"line_start":632,"line_end":632,"column_start":5,"column_end":69}},{"value":"/ The iterator element type is `(&'a K, &'a V)`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":121542,"byte_end":121592,"line_start":633,"line_end":633,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":121597,"byte_end":121600,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":121605,"byte_end":121619,"line_start":635,"line_end":635,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":121624,"byte_end":121627,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":121632,"byte_end":121639,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":121644,"byte_end":121671,"line_start":638,"line_end":638,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":121676,"byte_end":121679,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":121684,"byte_end":121717,"line_start":640,"line_end":640,"column_start":5,"column_end":38}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":121722,"byte_end":121745,"line_start":641,"line_end":641,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":121750,"byte_end":121773,"line_start":642,"line_end":642,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":121778,"byte_end":121801,"line_start":643,"line_end":643,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":121806,"byte_end":121835,"line_start":644,"line_end":644,"column_start":5,"column_end":34}},{"value":"/ let mut vec: Vec<(&str, i32)> = Vec::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":121840,"byte_end":121887,"line_start":645,"line_end":645,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":121892,"byte_end":121895,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ for (key, val) in map.iter() {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":121900,"byte_end":121934,"line_start":647,"line_end":647,"column_start":5,"column_end":39}},{"value":"/     println!(\"key: {} val: {}\", key, val);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":121939,"byte_end":121985,"line_start":648,"line_end":648,"column_start":5,"column_end":51}},{"value":"/     vec.push((*key, *val));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":121990,"byte_end":122021,"line_start":649,"line_end":649,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":122026,"byte_end":122031,"line_start":650,"line_end":650,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":122036,"byte_end":122039,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ // The `Iter` iterator produces items in arbitrary order, so the","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":122044,"byte_end":122112,"line_start":652,"line_end":652,"column_start":5,"column_end":73}},{"value":"/ // items must be sorted to test them against a sorted array.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":122117,"byte_end":122181,"line_start":653,"line_end":653,"column_start":5,"column_end":69}},{"value":"/ vec.sort_unstable();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":122186,"byte_end":122210,"line_start":654,"line_end":654,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(vec, [(\"a\", 1), (\"b\", 2), (\"c\", 3)]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":122215,"byte_end":122267,"line_start":655,"line_end":655,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":122272,"byte_end":122275,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":122280,"byte_end":122309,"line_start":657,"line_end":657,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":122314,"byte_end":122321,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":122362,"byte_end":122368,"line_start":659,"line_end":659,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":123694,"byte_end":123702,"line_start":705,"line_end":705,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<HashMap<K, V, S, A>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all key-value pairs in arbitrary order,\n with mutable references to the values.\n The iterator element type is `(&'a K, &'a mut V)`.","sig":null,"attributes":[{"value":"/ An iterator visiting all key-value pairs in arbitrary order,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":122621,"byte_end":122685,"line_start":670,"line_end":670,"column_start":5,"column_end":69}},{"value":"/ with mutable references to the values.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":122690,"byte_end":122732,"line_start":671,"line_end":671,"column_start":5,"column_end":47}},{"value":"/ The iterator element type is `(&'a K, &'a mut V)`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":122737,"byte_end":122791,"line_start":672,"line_end":672,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":122796,"byte_end":122799,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":122804,"byte_end":122818,"line_start":674,"line_end":674,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":122823,"byte_end":122826,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":122831,"byte_end":122838,"line_start":676,"line_end":676,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":122843,"byte_end":122870,"line_start":677,"line_end":677,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":122875,"byte_end":122878,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":122883,"byte_end":122916,"line_start":679,"line_end":679,"column_start":5,"column_end":38}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":122921,"byte_end":122944,"line_start":680,"line_end":680,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":122949,"byte_end":122972,"line_start":681,"line_end":681,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":122977,"byte_end":123000,"line_start":682,"line_end":682,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":123005,"byte_end":123008,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ // Update all values","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":123013,"byte_end":123037,"line_start":684,"line_end":684,"column_start":5,"column_end":29}},{"value":"/ for (_, val) in map.iter_mut() {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":123042,"byte_end":123078,"line_start":685,"line_end":685,"column_start":5,"column_end":41}},{"value":"/     *val *= 2;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":123083,"byte_end":123101,"line_start":686,"line_end":686,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":123106,"byte_end":123111,"line_start":687,"line_end":687,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":123116,"byte_end":123119,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":123124,"byte_end":123153,"line_start":689,"line_end":689,"column_start":5,"column_end":34}},{"value":"/ let mut vec: Vec<(&str, i32)> = Vec::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":123158,"byte_end":123205,"line_start":690,"line_end":690,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":123210,"byte_end":123213,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ for (key, val) in &map {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":123218,"byte_end":123246,"line_start":692,"line_end":692,"column_start":5,"column_end":33}},{"value":"/     println!(\"key: {} val: {}\", key, val);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":123251,"byte_end":123297,"line_start":693,"line_end":693,"column_start":5,"column_end":51}},{"value":"/     vec.push((*key, *val));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":123302,"byte_end":123333,"line_start":694,"line_end":694,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":123338,"byte_end":123343,"line_start":695,"line_end":695,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":123348,"byte_end":123351,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ // The `Iter` iterator produces items in arbitrary order, so the","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":123356,"byte_end":123424,"line_start":697,"line_end":697,"column_start":5,"column_end":73}},{"value":"/ // items must be sorted to test them against a sorted array.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":123429,"byte_end":123493,"line_start":698,"line_end":698,"column_start":5,"column_end":69}},{"value":"/ vec.sort_unstable();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":123498,"byte_end":123522,"line_start":699,"line_end":699,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(vec, [(\"a\", 2), (\"b\", 4), (\"c\", 6)]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":123527,"byte_end":123579,"line_start":700,"line_end":700,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":123584,"byte_end":123587,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":123592,"byte_end":123621,"line_start":702,"line_end":702,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":123626,"byte_end":123633,"line_start":703,"line_end":703,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":123674,"byte_end":123680,"line_start":704,"line_end":704,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":124419,"byte_end":124422,"line_start":734,"line_end":734,"column_start":12,"column_end":15},"name":"len","qualname":"<HashMap<K, V, S, A>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the map.","sig":null,"attributes":[{"value":"/ Returns the number of elements in the map.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":124087,"byte_end":124133,"line_start":721,"line_end":721,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":124138,"byte_end":124141,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":124146,"byte_end":124160,"line_start":723,"line_end":723,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":124165,"byte_end":124168,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":124173,"byte_end":124180,"line_start":725,"line_end":725,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":124185,"byte_end":124212,"line_start":726,"line_end":726,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":124217,"byte_end":124220,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":124225,"byte_end":124256,"line_start":728,"line_end":728,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(a.len(), 0);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":124261,"byte_end":124288,"line_start":729,"line_end":729,"column_start":5,"column_end":32}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":124293,"byte_end":124314,"line_start":730,"line_end":730,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(a.len(), 1);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":124319,"byte_end":124346,"line_start":731,"line_end":731,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":124351,"byte_end":124358,"line_start":732,"line_end":732,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":124399,"byte_end":124405,"line_start":733,"line_end":733,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":124813,"byte_end":124821,"line_start":751,"line_end":751,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<HashMap<K, V, S, A>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains no elements.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":124477,"byte_end":124528,"line_start":738,"line_end":738,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":124533,"byte_end":124536,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":124541,"byte_end":124555,"line_start":740,"line_end":740,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":124560,"byte_end":124563,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":124568,"byte_end":124575,"line_start":742,"line_end":742,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":124580,"byte_end":124607,"line_start":743,"line_end":743,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":124612,"byte_end":124615,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":124620,"byte_end":124651,"line_start":745,"line_end":745,"column_start":5,"column_end":36}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":124656,"byte_end":124682,"line_start":746,"line_end":746,"column_start":5,"column_end":31}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":124687,"byte_end":124708,"line_start":747,"line_end":747,"column_start":5,"column_end":26}},{"value":"/ assert!(!a.is_empty());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":124713,"byte_end":124740,"line_start":748,"line_end":748,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":124745,"byte_end":124752,"line_start":749,"line_end":749,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":124793,"byte_end":124799,"line_start":750,"line_end":750,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":126195,"byte_end":126200,"line_start":794,"line_end":794,"column_start":12,"column_end":17},"name":"drain","qualname":"<HashMap<K, V, S, A>>::drain","value":"pub fn drain(&mut Self) -> Drain<, K, V, A>","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, returning all key-value pairs as an iterator. Keeps the\n allocated memory for reuse.","sig":null,"attributes":[{"value":"/ Clears the map, returning all key-value pairs as an iterator. Keeps the","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":124874,"byte_end":124949,"line_start":755,"line_end":755,"column_start":5,"column_end":80}},{"value":"/ allocated memory for reuse.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":124954,"byte_end":124985,"line_start":756,"line_end":756,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":124990,"byte_end":124993,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ If the returned iterator is dropped before being fully consumed, it","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":124998,"byte_end":125069,"line_start":758,"line_end":758,"column_start":5,"column_end":76}},{"value":"/ drops the remaining key-value pairs. The returned iterator keeps a","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":125074,"byte_end":125144,"line_start":759,"line_end":759,"column_start":5,"column_end":75}},{"value":"/ mutable borrow on the vector to optimize its implementation.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":125149,"byte_end":125213,"line_start":760,"line_end":760,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":125218,"byte_end":125221,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":125226,"byte_end":125240,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":125245,"byte_end":125248,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":125253,"byte_end":125260,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":125265,"byte_end":125292,"line_start":765,"line_end":765,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":125297,"byte_end":125300,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":125305,"byte_end":125336,"line_start":767,"line_end":767,"column_start":5,"column_end":36}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":125341,"byte_end":125362,"line_start":768,"line_end":768,"column_start":5,"column_end":26}},{"value":"/ a.insert(2, \"b\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":125367,"byte_end":125388,"line_start":769,"line_end":769,"column_start":5,"column_end":26}},{"value":"/ let capacity_before_drain = a.capacity();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":125393,"byte_end":125438,"line_start":770,"line_end":770,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":125443,"byte_end":125446,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ for (k, v) in a.drain().take(1) {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":125451,"byte_end":125488,"line_start":772,"line_end":772,"column_start":5,"column_end":42}},{"value":"/     assert!(k == 1 || k == 2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":125493,"byte_end":125527,"line_start":773,"line_end":773,"column_start":5,"column_end":39}},{"value":"/     assert!(v == \"a\" || v == \"b\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":125532,"byte_end":125570,"line_start":774,"line_end":774,"column_start":5,"column_end":43}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":125575,"byte_end":125580,"line_start":775,"line_end":775,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":125585,"byte_end":125588,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ // As we can see, the map is empty and contains no element.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":125593,"byte_end":125656,"line_start":777,"line_end":777,"column_start":5,"column_end":68}},{"value":"/ assert!(a.is_empty() && a.len() == 0);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":125661,"byte_end":125703,"line_start":778,"line_end":778,"column_start":5,"column_end":47}},{"value":"/ // But map capacity is equal to old one.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":125708,"byte_end":125752,"line_start":779,"line_end":779,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(a.capacity(), capacity_before_drain);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":125757,"byte_end":125809,"line_start":780,"line_end":780,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":125814,"byte_end":125817,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":125822,"byte_end":125853,"line_start":782,"line_end":782,"column_start":5,"column_end":36}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":125858,"byte_end":125879,"line_start":783,"line_end":783,"column_start":5,"column_end":26}},{"value":"/ a.insert(2, \"b\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":125884,"byte_end":125905,"line_start":784,"line_end":784,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":125910,"byte_end":125913,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ {   // Iterator is dropped without being consumed.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":125918,"byte_end":125972,"line_start":786,"line_end":786,"column_start":5,"column_end":59}},{"value":"/     let d = a.drain();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":125977,"byte_end":126003,"line_start":787,"line_end":787,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":126008,"byte_end":126013,"line_start":788,"line_end":788,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":126018,"byte_end":126021,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ // But the map is empty even if we do not use Drain iterator.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":126026,"byte_end":126091,"line_start":790,"line_end":790,"column_start":5,"column_end":70}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":126096,"byte_end":126122,"line_start":791,"line_end":791,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":126127,"byte_end":126134,"line_start":792,"line_end":792,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":126175,"byte_end":126181,"line_start":793,"line_end":793,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":127317,"byte_end":127323,"line_start":826,"line_end":826,"column_start":12,"column_end":18},"name":"retain","qualname":"<HashMap<K, V, S, A>>::retain","value":"pub fn retain<F>(&mut Self, F) where F: FnMut(&K, &mut V) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Retains only the elements specified by the predicate. Keeps the\n allocated memory for reuse.","sig":null,"attributes":[{"value":"/ Retains only the elements specified by the predicate. Keeps the","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":126312,"byte_end":126379,"line_start":800,"line_end":800,"column_start":5,"column_end":72}},{"value":"/ allocated memory for reuse.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":126384,"byte_end":126415,"line_start":801,"line_end":801,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":126420,"byte_end":126423,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ In other words, remove all pairs `(k, v)` such that `f(&k, &mut v)` returns `false`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":126428,"byte_end":126516,"line_start":803,"line_end":803,"column_start":5,"column_end":93}},{"value":"/ The elements are visited in unsorted (and unspecified) order.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":126521,"byte_end":126586,"line_start":804,"line_end":804,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":126591,"byte_end":126594,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":126599,"byte_end":126613,"line_start":806,"line_end":806,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":126618,"byte_end":126621,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":126626,"byte_end":126633,"line_start":808,"line_end":808,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":126638,"byte_end":126665,"line_start":809,"line_end":809,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":126670,"byte_end":126673,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<i32, i32> = (0..8).map(|x|(x, x*10)).collect();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":126678,"byte_end":126750,"line_start":811,"line_end":811,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(map.len(), 8);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":126755,"byte_end":126784,"line_start":812,"line_end":812,"column_start":5,"column_end":34}},{"value":"/ let capacity_before_retain = map.capacity();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":126789,"byte_end":126837,"line_start":813,"line_end":813,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":126842,"byte_end":126845,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ map.retain(|&k, _| k % 2 == 0);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":126850,"byte_end":126885,"line_start":815,"line_end":815,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":126890,"byte_end":126893,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ // We can see, that the number of elements inside map is changed.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":126898,"byte_end":126967,"line_start":817,"line_end":817,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(map.len(), 4);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":126972,"byte_end":127001,"line_start":818,"line_end":818,"column_start":5,"column_end":34}},{"value":"/ // But map capacity is equal to old one.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":127006,"byte_end":127050,"line_start":819,"line_end":819,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(map.capacity(), capacity_before_retain);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":127055,"byte_end":127110,"line_start":820,"line_end":820,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":127115,"byte_end":127118,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ let mut vec: Vec<(i32, i32)> = map.iter().map(|(&k, &v)| (k, v)).collect();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":127123,"byte_end":127202,"line_start":822,"line_end":822,"column_start":5,"column_end":84}},{"value":"/ vec.sort_unstable();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":127207,"byte_end":127231,"line_start":823,"line_end":823,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(vec, [(0, 0), (2, 20), (4, 40), (6, 60)]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":127236,"byte_end":127293,"line_start":824,"line_end":824,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":127298,"byte_end":127305,"line_start":825,"line_end":825,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":129714,"byte_end":129726,"line_start":889,"line_end":889,"column_start":12,"column_end":24},"name":"drain_filter","qualname":"<HashMap<K, V, S, A>>::drain_filter","value":"pub fn drain_filter<F>(&mut Self, F) -> DrainFilter<, K, V, F, A> where\nF: FnMut(&K, &mut V) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Drains elements which are true under the given predicate,\n and returns an iterator over the removed items.","sig":null,"attributes":[{"value":"/ Drains elements which are true under the given predicate,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":127740,"byte_end":127801,"line_start":841,"line_end":841,"column_start":5,"column_end":66}},{"value":"/ and returns an iterator over the removed items.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":127806,"byte_end":127857,"line_start":842,"line_end":842,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":127862,"byte_end":127865,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ In other words, move all pairs `(k, v)` such that `f(&k, &mut v)` returns `true` out","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":127870,"byte_end":127958,"line_start":844,"line_end":844,"column_start":5,"column_end":93}},{"value":"/ into another iterator.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":127963,"byte_end":127989,"line_start":845,"line_end":845,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":127994,"byte_end":127997,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ Note that `drain_filter` lets you mutate every value in the filter closure, regardless of","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":128002,"byte_end":128095,"line_start":847,"line_end":847,"column_start":5,"column_end":98}},{"value":"/ whether you choose to keep or remove it.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":128100,"byte_end":128144,"line_start":848,"line_end":848,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":128149,"byte_end":128152,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ When the returned DrainedFilter is dropped, any remaining elements that satisfy","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":128157,"byte_end":128240,"line_start":850,"line_end":850,"column_start":5,"column_end":88}},{"value":"/ the predicate are dropped from the table.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":128245,"byte_end":128290,"line_start":851,"line_end":851,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":128295,"byte_end":128298,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ It is unspecified how many more elements will be subjected to the closure","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":128303,"byte_end":128380,"line_start":853,"line_end":853,"column_start":5,"column_end":82}},{"value":"/ if a panic occurs in the closure, or a panic occurs while dropping an element,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":128385,"byte_end":128467,"line_start":854,"line_end":854,"column_start":5,"column_end":87}},{"value":"/ or if the `DrainFilter` value is leaked.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":128472,"byte_end":128516,"line_start":855,"line_end":855,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":128521,"byte_end":128524,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ Keeps the allocated memory for reuse.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":128529,"byte_end":128570,"line_start":857,"line_end":857,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":128575,"byte_end":128578,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":128583,"byte_end":128597,"line_start":859,"line_end":859,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":128602,"byte_end":128605,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":128610,"byte_end":128617,"line_start":861,"line_end":861,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":128622,"byte_end":128649,"line_start":862,"line_end":862,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":128654,"byte_end":128657,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<i32, i32> = (0..8).map(|x| (x, x)).collect();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":128662,"byte_end":128732,"line_start":864,"line_end":864,"column_start":5,"column_end":75}},{"value":"/ let capacity_before_drain_filter = map.capacity();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":128737,"byte_end":128791,"line_start":865,"line_end":865,"column_start":5,"column_end":59}},{"value":"/ let drained: HashMap<i32, i32> = map.drain_filter(|k, _v| k % 2 == 0).collect();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":128796,"byte_end":128880,"line_start":866,"line_end":866,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":128885,"byte_end":128888,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ let mut evens = drained.keys().cloned().collect::<Vec<_>>();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":128893,"byte_end":128957,"line_start":868,"line_end":868,"column_start":5,"column_end":69}},{"value":"/ let mut odds = map.keys().cloned().collect::<Vec<_>>();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":128962,"byte_end":129021,"line_start":869,"line_end":869,"column_start":5,"column_end":64}},{"value":"/ evens.sort();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":129026,"byte_end":129043,"line_start":870,"line_end":870,"column_start":5,"column_end":22}},{"value":"/ odds.sort();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":129048,"byte_end":129064,"line_start":871,"line_end":871,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":129069,"byte_end":129072,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens, vec![0, 2, 4, 6]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":129077,"byte_end":129117,"line_start":873,"line_end":873,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(odds, vec![1, 3, 5, 7]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":129122,"byte_end":129161,"line_start":874,"line_end":874,"column_start":5,"column_end":44}},{"value":"/ // Map capacity is equal to old one.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":129166,"byte_end":129206,"line_start":875,"line_end":875,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(map.capacity(), capacity_before_drain_filter);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":129211,"byte_end":129272,"line_start":876,"line_end":876,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":129277,"byte_end":129280,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<i32, i32> = (0..8).map(|x| (x, x)).collect();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":129285,"byte_end":129355,"line_start":878,"line_end":878,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":129360,"byte_end":129363,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ {   // Iterator is dropped without being consumed.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":129368,"byte_end":129422,"line_start":880,"line_end":880,"column_start":5,"column_end":59}},{"value":"/     let d = map.drain_filter(|k, _v| k % 2 != 0);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":129427,"byte_end":129480,"line_start":881,"line_end":881,"column_start":5,"column_end":58}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":129485,"byte_end":129490,"line_start":882,"line_end":882,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":129495,"byte_end":129498,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ // But the map lens have been reduced by half","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":129503,"byte_end":129552,"line_start":884,"line_end":884,"column_start":5,"column_end":54}},{"value":"/ // even if we do not use DrainFilter iterator.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":129557,"byte_end":129607,"line_start":885,"line_end":885,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(map.len(), 4);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":129612,"byte_end":129641,"line_start":886,"line_end":886,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":129646,"byte_end":129653,"line_start":887,"line_end":887,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":129694,"byte_end":129700,"line_start":888,"line_end":888,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":130599,"byte_end":130604,"line_start":922,"line_end":922,"column_start":12,"column_end":17},"name":"clear","qualname":"<HashMap<K, V, S, A>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, removing all key-value pairs. Keeps the allocated memory\n for reuse.","sig":null,"attributes":[{"value":"/ Clears the map, removing all key-value pairs. Keeps the allocated memory","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":130035,"byte_end":130111,"line_start":902,"line_end":902,"column_start":5,"column_end":81}},{"value":"/ for reuse.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":130116,"byte_end":130130,"line_start":903,"line_end":903,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":130135,"byte_end":130138,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":130143,"byte_end":130157,"line_start":905,"line_end":905,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":130162,"byte_end":130165,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":130170,"byte_end":130177,"line_start":907,"line_end":907,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":130182,"byte_end":130209,"line_start":908,"line_end":908,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":130214,"byte_end":130217,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":130222,"byte_end":130253,"line_start":910,"line_end":910,"column_start":5,"column_end":36}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":130258,"byte_end":130279,"line_start":911,"line_end":911,"column_start":5,"column_end":26}},{"value":"/ let capacity_before_clear = a.capacity();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":130284,"byte_end":130329,"line_start":912,"line_end":912,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":130334,"byte_end":130337,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ a.clear();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":130342,"byte_end":130356,"line_start":914,"line_end":914,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":130361,"byte_end":130364,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ // Map is empty.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":130369,"byte_end":130389,"line_start":916,"line_end":916,"column_start":5,"column_end":25}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":130394,"byte_end":130420,"line_start":917,"line_end":917,"column_start":5,"column_end":31}},{"value":"/ // But map capacity is equal to old one.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":130425,"byte_end":130469,"line_start":918,"line_end":918,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(a.capacity(), capacity_before_clear);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":130474,"byte_end":130526,"line_start":919,"line_end":919,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":130531,"byte_end":130538,"line_start":920,"line_end":920,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":130579,"byte_end":130585,"line_start":921,"line_end":921,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":131362,"byte_end":131371,"line_start":948,"line_end":948,"column_start":12,"column_end":21},"name":"into_keys","qualname":"<HashMap<K, V, S, A>>::into_keys","value":"pub fn into_keys(Self) -> IntoKeys<K, V, A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a consuming iterator visiting all the keys in arbitrary order.\n The map cannot be used after calling this.\n The iterator element type is `K`.","sig":null,"attributes":[{"value":"/ Creates a consuming iterator visiting all the keys in arbitrary order.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":130657,"byte_end":130731,"line_start":926,"line_end":926,"column_start":5,"column_end":79}},{"value":"/ The map cannot be used after calling this.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":130736,"byte_end":130782,"line_start":927,"line_end":927,"column_start":5,"column_end":51}},{"value":"/ The iterator element type is `K`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":130787,"byte_end":130824,"line_start":928,"line_end":928,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":130829,"byte_end":130832,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":130837,"byte_end":130851,"line_start":930,"line_end":930,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":130856,"byte_end":130859,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":130864,"byte_end":130871,"line_start":932,"line_end":932,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":130876,"byte_end":130903,"line_start":933,"line_end":933,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":130908,"byte_end":130911,"line_start":934,"line_end":934,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":130916,"byte_end":130949,"line_start":935,"line_end":935,"column_start":5,"column_end":38}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":130954,"byte_end":130977,"line_start":936,"line_end":936,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":130982,"byte_end":131005,"line_start":937,"line_end":937,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":131010,"byte_end":131033,"line_start":938,"line_end":938,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":131038,"byte_end":131041,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ let mut vec: Vec<&str> = map.into_keys().collect();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":131046,"byte_end":131101,"line_start":940,"line_end":940,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":131106,"byte_end":131109,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ // The `IntoKeys` iterator produces keys in arbitrary order, so the","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":131114,"byte_end":131185,"line_start":942,"line_end":942,"column_start":5,"column_end":76}},{"value":"/ // keys must be sorted to test them against a sorted array.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":131190,"byte_end":131253,"line_start":943,"line_end":943,"column_start":5,"column_end":68}},{"value":"/ vec.sort_unstable();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":131258,"byte_end":131282,"line_start":944,"line_end":944,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(vec, [\"a\", \"b\", \"c\"]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":131287,"byte_end":131324,"line_start":945,"line_end":945,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":131329,"byte_end":131336,"line_start":946,"line_end":946,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":131341,"byte_end":131350,"line_start":947,"line_end":947,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":132186,"byte_end":132197,"line_start":976,"line_end":976,"column_start":12,"column_end":23},"name":"into_values","qualname":"<HashMap<K, V, S, A>>::into_values","value":"pub fn into_values(Self) -> IntoValues<K, V, A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a consuming iterator visiting all the values in arbitrary order.\n The map cannot be used after calling this.\n The iterator element type is `V`.","sig":null,"attributes":[{"value":"/ Creates a consuming iterator visiting all the values in arbitrary order.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":131478,"byte_end":131554,"line_start":954,"line_end":954,"column_start":5,"column_end":81}},{"value":"/ The map cannot be used after calling this.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":131559,"byte_end":131605,"line_start":955,"line_end":955,"column_start":5,"column_end":51}},{"value":"/ The iterator element type is `V`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":131610,"byte_end":131647,"line_start":956,"line_end":956,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":131652,"byte_end":131655,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":131660,"byte_end":131674,"line_start":958,"line_end":958,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":131679,"byte_end":131682,"line_start":959,"line_end":959,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":131687,"byte_end":131694,"line_start":960,"line_end":960,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":131699,"byte_end":131726,"line_start":961,"line_end":961,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":131731,"byte_end":131734,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":131739,"byte_end":131772,"line_start":963,"line_end":963,"column_start":5,"column_end":38}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":131777,"byte_end":131800,"line_start":964,"line_end":964,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":131805,"byte_end":131828,"line_start":965,"line_end":965,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":131833,"byte_end":131856,"line_start":966,"line_end":966,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":131861,"byte_end":131864,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ let mut vec: Vec<i32> = map.into_values().collect();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":131869,"byte_end":131925,"line_start":968,"line_end":968,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":131930,"byte_end":131933,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ // The `IntoValues` iterator produces values in arbitrary order, so","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":131938,"byte_end":132009,"line_start":970,"line_end":970,"column_start":5,"column_end":76}},{"value":"/ // the values must be sorted to test them against a sorted array.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":132014,"byte_end":132083,"line_start":971,"line_end":971,"column_start":5,"column_end":74}},{"value":"/ vec.sort_unstable();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":132088,"byte_end":132112,"line_start":972,"line_end":972,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(vec, [1, 2, 3]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":132117,"byte_end":132148,"line_start":973,"line_end":973,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":132153,"byte_end":132160,"line_start":974,"line_end":974,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":132165,"byte_end":132174,"line_start":975,"line_end":975,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":133208,"byte_end":133215,"line_start":1013,"line_end":1013,"column_start":12,"column_end":19},"name":"reserve","qualname":"<HashMap<K, V, S, A>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more elements to be inserted\n in the `HashMap`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more elements to be inserted","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":132419,"byte_end":132495,"line_start":989,"line_end":989,"column_start":5,"column_end":81}},{"value":"/ in the `HashMap`. The collection may reserve more space to avoid","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":132500,"byte_end":132568,"line_start":990,"line_end":990,"column_start":5,"column_end":73}},{"value":"/ frequent reallocations.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":132573,"byte_end":132600,"line_start":991,"line_end":991,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":132605,"byte_end":132608,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":132613,"byte_end":132625,"line_start":993,"line_end":993,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":132630,"byte_end":132633,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ Panics if the new allocation size overflows [`usize`].","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":132638,"byte_end":132696,"line_start":995,"line_end":995,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":132701,"byte_end":132704,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ [`usize`]: https://doc.rust-lang.org/std/primitive.usize.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":132709,"byte_end":132774,"line_start":997,"line_end":997,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":132779,"byte_end":132782,"line_start":998,"line_end":998,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":132787,"byte_end":132801,"line_start":999,"line_end":999,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":132806,"byte_end":132809,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":132814,"byte_end":132821,"line_start":1001,"line_end":1001,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":132826,"byte_end":132853,"line_start":1002,"line_end":1002,"column_start":5,"column_end":32}},{"value":"/ let mut map: HashMap<&str, i32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":132858,"byte_end":132911,"line_start":1003,"line_end":1003,"column_start":5,"column_end":58}},{"value":"/ // Map is empty and doesn't allocate memory","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":132916,"byte_end":132963,"line_start":1004,"line_end":1004,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(map.capacity(), 0);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":132968,"byte_end":133002,"line_start":1005,"line_end":1005,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":133007,"byte_end":133010,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ map.reserve(10);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":133015,"byte_end":133035,"line_start":1007,"line_end":1007,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":133040,"byte_end":133043,"line_start":1008,"line_end":1008,"column_start":5,"column_end":8}},{"value":"/ // And now map can hold at least 10 elements","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":133048,"byte_end":133096,"line_start":1009,"line_end":1009,"column_start":5,"column_end":53}},{"value":"/ assert!(map.capacity() >= 10);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":133101,"byte_end":133135,"line_start":1010,"line_end":1010,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":133140,"byte_end":133147,"line_start":1011,"line_end":1011,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":133188,"byte_end":133194,"line_start":1012,"line_end":1012,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":134842,"byte_end":134853,"line_start":1063,"line_end":1063,"column_start":12,"column_end":23},"name":"try_reserve","qualname":"<HashMap<K, V, S, A>>::try_reserve","value":"pub fn try_reserve(&mut Self, usize) -> Result<(), TryReserveError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to reserve capacity for at least `additional` more elements to be inserted\n in the given `HashMap<K,V>`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[{"value":"/ Tries to reserve capacity for at least `additional` more elements to be inserted","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":133359,"byte_end":133443,"line_start":1018,"line_end":1018,"column_start":5,"column_end":89}},{"value":"/ in the given `HashMap<K,V>`. The collection may reserve more space to avoid","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":133448,"byte_end":133527,"line_start":1019,"line_end":1019,"column_start":5,"column_end":84}},{"value":"/ frequent reallocations.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":133532,"byte_end":133559,"line_start":1020,"line_end":1020,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":133564,"byte_end":133567,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":133572,"byte_end":133584,"line_start":1022,"line_end":1022,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":133589,"byte_end":133592,"line_start":1023,"line_end":1023,"column_start":5,"column_end":8}},{"value":"/ If the capacity overflows, or the allocator reports a failure, then an error","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":133597,"byte_end":133677,"line_start":1024,"line_end":1024,"column_start":5,"column_end":85}},{"value":"/ is returned.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":133682,"byte_end":133698,"line_start":1025,"line_end":1025,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":133703,"byte_end":133706,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":133711,"byte_end":133725,"line_start":1027,"line_end":1027,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":133730,"byte_end":133733,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":133738,"byte_end":133745,"line_start":1029,"line_end":1029,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":133750,"byte_end":133777,"line_start":1030,"line_end":1030,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":133782,"byte_end":133785,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, isize> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":133790,"byte_end":133845,"line_start":1032,"line_end":1032,"column_start":5,"column_end":60}},{"value":"/ // Map is empty and doesn't allocate memory","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":133850,"byte_end":133897,"line_start":1033,"line_end":1033,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(map.capacity(), 0);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":133902,"byte_end":133936,"line_start":1034,"line_end":1034,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":133941,"byte_end":133944,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ map.try_reserve(10).expect(\"why is the test harness OOMing on 10 bytes?\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":133949,"byte_end":134027,"line_start":1036,"line_end":1036,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":134032,"byte_end":134035,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ // And now map can hold at least 10 elements","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":134040,"byte_end":134088,"line_start":1038,"line_end":1038,"column_start":5,"column_end":53}},{"value":"/ assert!(map.capacity() >= 10);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":134093,"byte_end":134127,"line_start":1039,"line_end":1039,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":134132,"byte_end":134139,"line_start":1040,"line_end":1040,"column_start":5,"column_end":12}},{"value":"/ If the capacity overflows, or the allocator reports a failure, then an error","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":134144,"byte_end":134224,"line_start":1041,"line_end":1041,"column_start":5,"column_end":85}},{"value":"/ is returned:","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":134229,"byte_end":134245,"line_start":1042,"line_end":1042,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":134250,"byte_end":134257,"line_start":1043,"line_end":1043,"column_start":5,"column_end":12}},{"value":"/ # fn test() {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":134262,"byte_end":134279,"line_start":1044,"line_end":1044,"column_start":5,"column_end":22}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":134284,"byte_end":134311,"line_start":1045,"line_end":1045,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::TryReserveError;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":134316,"byte_end":134351,"line_start":1046,"line_end":1046,"column_start":5,"column_end":40}},{"value":"/ let mut map: HashMap<i32, i32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":134356,"byte_end":134408,"line_start":1047,"line_end":1047,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":134413,"byte_end":134416,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/ match map.try_reserve(usize::MAX) {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":134421,"byte_end":134460,"line_start":1049,"line_end":1049,"column_start":5,"column_end":44}},{"value":"/     Err(error) => match error {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":134465,"byte_end":134500,"line_start":1050,"line_end":1050,"column_start":5,"column_end":40}},{"value":"/         TryReserveError::CapacityOverflow => {}","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":134505,"byte_end":134556,"line_start":1051,"line_end":1051,"column_start":5,"column_end":56}},{"value":"/         _ => panic!(\"TryReserveError::AllocError ?\"),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":134561,"byte_end":134618,"line_start":1052,"line_end":1052,"column_start":5,"column_end":62}},{"value":"/     },","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":134623,"byte_end":134633,"line_start":1053,"line_end":1053,"column_start":5,"column_end":15}},{"value":"/     _ => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":134638,"byte_end":134660,"line_start":1054,"line_end":1054,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":134665,"byte_end":134670,"line_start":1055,"line_end":1055,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":134675,"byte_end":134682,"line_start":1056,"line_end":1056,"column_start":5,"column_end":12}},{"value":"/ # fn main() {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":134687,"byte_end":134704,"line_start":1057,"line_end":1057,"column_start":5,"column_end":22}},{"value":"/ #     #[cfg(not(miri))]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":134709,"byte_end":134736,"line_start":1058,"line_end":1058,"column_start":5,"column_end":32}},{"value":"/ #     test()","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":134741,"byte_end":134757,"line_start":1059,"line_end":1059,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":134762,"byte_end":134769,"line_start":1060,"line_end":1060,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":134774,"byte_end":134781,"line_start":1061,"line_end":1061,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":134822,"byte_end":134828,"line_start":1062,"line_end":1062,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":135637,"byte_end":135650,"line_start":1085,"line_end":1085,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<HashMap<K, V, S, A>>::shrink_to_fit","value":"pub fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the map as much as possible. It will drop\n down as much as possible while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the map as much as possible. It will drop","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":135031,"byte_end":135100,"line_start":1068,"line_end":1068,"column_start":5,"column_end":74}},{"value":"/ down as much as possible while maintaining the internal rules","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":135105,"byte_end":135170,"line_start":1069,"line_end":1069,"column_start":5,"column_end":70}},{"value":"/ and possibly leaving some space in accordance with the resize policy.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":135175,"byte_end":135248,"line_start":1070,"line_end":1070,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":135253,"byte_end":135256,"line_start":1071,"line_end":1071,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":135261,"byte_end":135275,"line_start":1072,"line_end":1072,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":135280,"byte_end":135283,"line_start":1073,"line_end":1073,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":135288,"byte_end":135295,"line_start":1074,"line_end":1074,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":135300,"byte_end":135327,"line_start":1075,"line_end":1075,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":135332,"byte_end":135335,"line_start":1076,"line_end":1076,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<i32, i32> = HashMap::with_capacity(100);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":135340,"byte_end":135405,"line_start":1077,"line_end":1077,"column_start":5,"column_end":70}},{"value":"/ map.insert(1, 2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":135410,"byte_end":135431,"line_start":1078,"line_end":1078,"column_start":5,"column_end":26}},{"value":"/ map.insert(3, 4);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":135436,"byte_end":135457,"line_start":1079,"line_end":1079,"column_start":5,"column_end":26}},{"value":"/ assert!(map.capacity() >= 100);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":135462,"byte_end":135497,"line_start":1080,"line_end":1080,"column_start":5,"column_end":40}},{"value":"/ map.shrink_to_fit();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":135502,"byte_end":135526,"line_start":1081,"line_end":1081,"column_start":5,"column_end":29}},{"value":"/ assert!(map.capacity() >= 2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":135531,"byte_end":135564,"line_start":1082,"line_end":1082,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":135569,"byte_end":135576,"line_start":1083,"line_end":1083,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":135617,"byte_end":135623,"line_start":1084,"line_end":1084,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":136636,"byte_end":136645,"line_start":1114,"line_end":1114,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<HashMap<K, V, S, A>>::shrink_to","value":"pub fn shrink_to(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the map with a lower limit. It will drop\n down no lower than the supplied limit while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the map with a lower limit. It will drop","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":135768,"byte_end":135836,"line_start":1090,"line_end":1090,"column_start":5,"column_end":73}},{"value":"/ down no lower than the supplied limit while maintaining the internal rules","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":135841,"byte_end":135919,"line_start":1091,"line_end":1091,"column_start":5,"column_end":83}},{"value":"/ and possibly leaving some space in accordance with the resize policy.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":135924,"byte_end":135997,"line_start":1092,"line_end":1092,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":136002,"byte_end":136005,"line_start":1093,"line_end":1093,"column_start":5,"column_end":8}},{"value":"/ This function does nothing if the current capacity is smaller than the","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":136010,"byte_end":136084,"line_start":1094,"line_end":1094,"column_start":5,"column_end":79}},{"value":"/ supplied minimum capacity.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":136089,"byte_end":136119,"line_start":1095,"line_end":1095,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":136124,"byte_end":136127,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":136132,"byte_end":136146,"line_start":1097,"line_end":1097,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":136151,"byte_end":136154,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":136159,"byte_end":136166,"line_start":1099,"line_end":1099,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":136171,"byte_end":136198,"line_start":1100,"line_end":1100,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":136203,"byte_end":136206,"line_start":1101,"line_end":1101,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<i32, i32> = HashMap::with_capacity(100);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":136211,"byte_end":136276,"line_start":1102,"line_end":1102,"column_start":5,"column_end":70}},{"value":"/ map.insert(1, 2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":136281,"byte_end":136302,"line_start":1103,"line_end":1103,"column_start":5,"column_end":26}},{"value":"/ map.insert(3, 4);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":136307,"byte_end":136328,"line_start":1104,"line_end":1104,"column_start":5,"column_end":26}},{"value":"/ assert!(map.capacity() >= 100);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":136333,"byte_end":136368,"line_start":1105,"line_end":1105,"column_start":5,"column_end":40}},{"value":"/ map.shrink_to(10);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":136373,"byte_end":136395,"line_start":1106,"line_end":1106,"column_start":5,"column_end":27}},{"value":"/ assert!(map.capacity() >= 10);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":136400,"byte_end":136434,"line_start":1107,"line_end":1107,"column_start":5,"column_end":39}},{"value":"/ map.shrink_to(0);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":136439,"byte_end":136460,"line_start":1108,"line_end":1108,"column_start":5,"column_end":26}},{"value":"/ assert!(map.capacity() >= 2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":136465,"byte_end":136498,"line_start":1109,"line_end":1109,"column_start":5,"column_end":38}},{"value":"/ map.shrink_to(10);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":136503,"byte_end":136525,"line_start":1110,"line_end":1110,"column_start":5,"column_end":27}},{"value":"/ assert!(map.capacity() >= 2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":136530,"byte_end":136563,"line_start":1111,"line_end":1111,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":136568,"byte_end":136575,"line_start":1112,"line_end":1112,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":136616,"byte_end":136622,"line_start":1113,"line_end":1113,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":137405,"byte_end":137410,"line_start":1139,"line_end":1139,"column_start":12,"column_end":17},"name":"entry","qualname":"<HashMap<K, V, S, A>>::entry","value":"pub fn entry(&mut Self, K) -> Entry<, K, V, S, A>","parent":null,"children":[],"decl_id":null,"docs":" Gets the given key's corresponding entry in the map for in-place manipulation.","sig":null,"attributes":[{"value":"/ Gets the given key's corresponding entry in the map for in-place manipulation.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":136795,"byte_end":136877,"line_start":1119,"line_end":1119,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":136882,"byte_end":136885,"line_start":1120,"line_end":1120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":136890,"byte_end":136904,"line_start":1121,"line_end":1121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":136909,"byte_end":136912,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":136917,"byte_end":136924,"line_start":1123,"line_end":1123,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":136929,"byte_end":136956,"line_start":1124,"line_end":1124,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":136961,"byte_end":136964,"line_start":1125,"line_end":1125,"column_start":5,"column_end":8}},{"value":"/ let mut letters = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":136969,"byte_end":137006,"line_start":1126,"line_end":1126,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":137011,"byte_end":137014,"line_start":1127,"line_end":1127,"column_start":5,"column_end":8}},{"value":"/ for ch in \"a short treatise on fungi\".chars() {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":137019,"byte_end":137070,"line_start":1128,"line_end":1128,"column_start":5,"column_end":56}},{"value":"/     let counter = letters.entry(ch).or_insert(0);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":137075,"byte_end":137128,"line_start":1129,"line_end":1129,"column_start":5,"column_end":58}},{"value":"/     *counter += 1;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":137133,"byte_end":137155,"line_start":1130,"line_end":1130,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":137160,"byte_end":137165,"line_start":1131,"line_end":1131,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":137170,"byte_end":137173,"line_start":1132,"line_end":1132,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(letters[&'s'], 2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":137178,"byte_end":137211,"line_start":1133,"line_end":1133,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(letters[&'t'], 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":137216,"byte_end":137249,"line_start":1134,"line_end":1134,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(letters[&'u'], 1);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":137254,"byte_end":137287,"line_start":1135,"line_end":1135,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(letters.get(&'y'), None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":137292,"byte_end":137332,"line_start":1136,"line_end":1136,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":137337,"byte_end":137344,"line_start":1137,"line_end":1137,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":137385,"byte_end":137391,"line_start":1138,"line_end":1138,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":138568,"byte_end":138577,"line_start":1175,"line_end":1175,"column_start":12,"column_end":21},"name":"entry_ref","qualname":"<HashMap<K, V, S, A>>::entry_ref","value":"pub fn entry_ref<'a, 'b, Q: ?Sized>(&'a mut Self, &'b Q) -> EntryRef where\nK: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Gets the given key's corresponding entry by reference in the map for in-place manipulation.","sig":null,"attributes":[{"value":"/ Gets the given key's corresponding entry by reference in the map for in-place manipulation.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":137931,"byte_end":138026,"line_start":1157,"line_end":1157,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":138031,"byte_end":138034,"line_start":1158,"line_end":1158,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":138039,"byte_end":138053,"line_start":1159,"line_end":1159,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":138058,"byte_end":138061,"line_start":1160,"line_end":1160,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":138066,"byte_end":138073,"line_start":1161,"line_end":1161,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":138078,"byte_end":138105,"line_start":1162,"line_end":1162,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":138110,"byte_end":138113,"line_start":1163,"line_end":1163,"column_start":5,"column_end":8}},{"value":"/ let mut words: HashMap<String, usize> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":138118,"byte_end":138177,"line_start":1164,"line_end":1164,"column_start":5,"column_end":64}},{"value":"/ let source = [\"poneyland\", \"horseyland\", \"poneyland\", \"poneyland\"];","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":138182,"byte_end":138253,"line_start":1165,"line_end":1165,"column_start":5,"column_end":76}},{"value":"/ for (i, &s) in source.iter().enumerate() {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":138258,"byte_end":138304,"line_start":1166,"line_end":1166,"column_start":5,"column_end":51}},{"value":"/     let counter = words.entry_ref(s).or_insert(0);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":138309,"byte_end":138363,"line_start":1167,"line_end":1167,"column_start":5,"column_end":59}},{"value":"/     *counter += 1;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":138368,"byte_end":138390,"line_start":1168,"line_end":1168,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":138395,"byte_end":138400,"line_start":1169,"line_end":1169,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":138405,"byte_end":138408,"line_start":1170,"line_end":1170,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(words[\"poneyland\"], 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":138413,"byte_end":138451,"line_start":1171,"line_end":1171,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(words[\"horseyland\"], 1);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":138456,"byte_end":138495,"line_start":1172,"line_end":1172,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":138500,"byte_end":138507,"line_start":1173,"line_end":1173,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":138548,"byte_end":138554,"line_start":1174,"line_end":1174,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":139891,"byte_end":139894,"line_start":1217,"line_end":1217,"column_start":12,"column_end":15},"name":"get","qualname":"<HashMap<K, V, S, A>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&V> where K: Borrow<Q>, Q: Hash +\nEq","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a reference to the value corresponding to the key.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":139243,"byte_end":139305,"line_start":1197,"line_end":1197,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":139310,"byte_end":139313,"line_start":1198,"line_end":1198,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":139318,"byte_end":139381,"line_start":1199,"line_end":1199,"column_start":5,"column_end":68}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":139386,"byte_end":139453,"line_start":1200,"line_end":1200,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":139458,"byte_end":139475,"line_start":1201,"line_end":1201,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":139480,"byte_end":139483,"line_start":1202,"line_end":1202,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":139488,"byte_end":139547,"line_start":1203,"line_end":1203,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":139552,"byte_end":139616,"line_start":1204,"line_end":1204,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":139621,"byte_end":139624,"line_start":1205,"line_end":1205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":139629,"byte_end":139643,"line_start":1206,"line_end":1206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":139648,"byte_end":139651,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":139656,"byte_end":139663,"line_start":1208,"line_end":1208,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":139668,"byte_end":139695,"line_start":1209,"line_end":1209,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":139700,"byte_end":139703,"line_start":1210,"line_end":1210,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":139708,"byte_end":139741,"line_start":1211,"line_end":1211,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":139746,"byte_end":139769,"line_start":1212,"line_end":1212,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.get(&1), Some(&\"a\"));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":139774,"byte_end":139814,"line_start":1213,"line_end":1213,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(map.get(&2), None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":139819,"byte_end":139853,"line_start":1214,"line_end":1214,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":139858,"byte_end":139865,"line_start":1215,"line_end":1215,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":139870,"byte_end":139879,"line_start":1216,"line_end":1216,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":140861,"byte_end":140874,"line_start":1249,"line_end":1249,"column_start":12,"column_end":25},"name":"get_key_value","qualname":"<HashMap<K, V, S, A>>::get_key_value","value":"pub fn get_key_value<Q: ?Sized>(&Self, &Q) -> Option<(&K, &V)> where\nK: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns the key-value pair corresponding to the supplied key.","sig":null,"attributes":[{"value":"/ Returns the key-value pair corresponding to the supplied key.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":140175,"byte_end":140240,"line_start":1229,"line_end":1229,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":140245,"byte_end":140248,"line_start":1230,"line_end":1230,"column_start":5,"column_end":8}},{"value":"/ The supplied key may be any borrowed form of the map's key type, but","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":140253,"byte_end":140325,"line_start":1231,"line_end":1231,"column_start":5,"column_end":77}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":140330,"byte_end":140397,"line_start":1232,"line_end":1232,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":140402,"byte_end":140419,"line_start":1233,"line_end":1233,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":140424,"byte_end":140427,"line_start":1234,"line_end":1234,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":140432,"byte_end":140491,"line_start":1235,"line_end":1235,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":140496,"byte_end":140560,"line_start":1236,"line_end":1236,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":140565,"byte_end":140568,"line_start":1237,"line_end":1237,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":140573,"byte_end":140587,"line_start":1238,"line_end":1238,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":140592,"byte_end":140595,"line_start":1239,"line_end":1239,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":140600,"byte_end":140607,"line_start":1240,"line_end":1240,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":140612,"byte_end":140639,"line_start":1241,"line_end":1241,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":140644,"byte_end":140647,"line_start":1242,"line_end":1242,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":140652,"byte_end":140685,"line_start":1243,"line_end":1243,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":140690,"byte_end":140713,"line_start":1244,"line_end":1244,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.get_key_value(&1), Some((&1, &\"a\")));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":140718,"byte_end":140774,"line_start":1245,"line_end":1245,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(map.get_key_value(&2), None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":140779,"byte_end":140823,"line_start":1246,"line_end":1246,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":140828,"byte_end":140835,"line_start":1247,"line_end":1247,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":140840,"byte_end":140849,"line_start":1248,"line_end":1248,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":142391,"byte_end":142408,"line_start":1299,"line_end":1299,"column_start":12,"column_end":29},"name":"get_key_value_mut","qualname":"<HashMap<K, V, S, A>>::get_key_value_mut","value":"pub fn get_key_value_mut<Q: ?Sized>(&mut Self, &Q) -> Option<(&K, &mut V)>\nwhere K: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns the key-value pair corresponding to the supplied key, with a mutable reference to value.","sig":null,"attributes":[{"value":"/ Returns the key-value pair corresponding to the supplied key, with a mutable reference to value.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":141523,"byte_end":141623,"line_start":1275,"line_end":1275,"column_start":5,"column_end":105}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":141628,"byte_end":141631,"line_start":1276,"line_end":1276,"column_start":5,"column_end":8}},{"value":"/ The supplied key may be any borrowed form of the map's key type, but","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":141636,"byte_end":141708,"line_start":1277,"line_end":1277,"column_start":5,"column_end":77}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":141713,"byte_end":141780,"line_start":1278,"line_end":1278,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":141785,"byte_end":141802,"line_start":1279,"line_end":1279,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":141807,"byte_end":141810,"line_start":1280,"line_end":1280,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":141815,"byte_end":141874,"line_start":1281,"line_end":1281,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":141879,"byte_end":141943,"line_start":1282,"line_end":1282,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":141948,"byte_end":141951,"line_start":1283,"line_end":1283,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":141956,"byte_end":141970,"line_start":1284,"line_end":1284,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":141975,"byte_end":141978,"line_start":1285,"line_end":1285,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":141983,"byte_end":141990,"line_start":1286,"line_end":1286,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":141995,"byte_end":142022,"line_start":1287,"line_end":1287,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":142027,"byte_end":142030,"line_start":1288,"line_end":1288,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":142035,"byte_end":142068,"line_start":1289,"line_end":1289,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":142073,"byte_end":142096,"line_start":1290,"line_end":1290,"column_start":5,"column_end":28}},{"value":"/ let (k, v) = map.get_key_value_mut(&1).unwrap();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":142101,"byte_end":142153,"line_start":1291,"line_end":1291,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(k, &1);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":142158,"byte_end":142180,"line_start":1292,"line_end":1292,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(v, &mut \"a\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":142185,"byte_end":142213,"line_start":1293,"line_end":1293,"column_start":5,"column_end":33}},{"value":"/ *v = \"b\";","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":142218,"byte_end":142231,"line_start":1294,"line_end":1294,"column_start":5,"column_end":18}},{"value":"/ assert_eq!(map.get_key_value_mut(&1), Some((&1, &mut \"b\")));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":142236,"byte_end":142300,"line_start":1295,"line_end":1295,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(map.get_key_value_mut(&2), None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":142305,"byte_end":142353,"line_start":1296,"line_end":1296,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":142358,"byte_end":142365,"line_start":1297,"line_end":1297,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":142370,"byte_end":142379,"line_start":1298,"line_end":1298,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":143439,"byte_end":143451,"line_start":1331,"line_end":1331,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<HashMap<K, V, S, A>>::contains_key","value":"pub fn contains_key<Q: ?Sized>(&Self, &Q) -> bool where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains a value for the specified key.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains a value for the specified key.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":142736,"byte_end":142805,"line_start":1311,"line_end":1311,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":142810,"byte_end":142813,"line_start":1312,"line_end":1312,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":142818,"byte_end":142881,"line_start":1313,"line_end":1313,"column_start":5,"column_end":68}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":142886,"byte_end":142953,"line_start":1314,"line_end":1314,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":142958,"byte_end":142975,"line_start":1315,"line_end":1315,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":142980,"byte_end":142983,"line_start":1316,"line_end":1316,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":142988,"byte_end":143047,"line_start":1317,"line_end":1317,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":143052,"byte_end":143116,"line_start":1318,"line_end":1318,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":143121,"byte_end":143124,"line_start":1319,"line_end":1319,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":143129,"byte_end":143143,"line_start":1320,"line_end":1320,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":143148,"byte_end":143151,"line_start":1321,"line_end":1321,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":143156,"byte_end":143163,"line_start":1322,"line_end":1322,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":143168,"byte_end":143195,"line_start":1323,"line_end":1323,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":143200,"byte_end":143203,"line_start":1324,"line_end":1324,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":143208,"byte_end":143241,"line_start":1325,"line_end":1325,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":143246,"byte_end":143269,"line_start":1326,"line_end":1326,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.contains_key(&1), true);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":143274,"byte_end":143317,"line_start":1327,"line_end":1327,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(map.contains_key(&2), false);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":143322,"byte_end":143366,"line_start":1328,"line_end":1328,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":143371,"byte_end":143378,"line_start":1329,"line_end":1329,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":143419,"byte_end":143425,"line_start":1330,"line_end":1330,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":144359,"byte_end":144366,"line_start":1363,"line_end":1363,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<HashMap<K, V, S, A>>::get_mut","value":"pub fn get_mut<Q: ?Sized>(&mut Self, &Q) -> Option<&mut V> where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the value corresponding to the key.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":143592,"byte_end":143662,"line_start":1339,"line_end":1339,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":143667,"byte_end":143670,"line_start":1340,"line_end":1340,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":143675,"byte_end":143738,"line_start":1341,"line_end":1341,"column_start":5,"column_end":68}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":143743,"byte_end":143810,"line_start":1342,"line_end":1342,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":143815,"byte_end":143832,"line_start":1343,"line_end":1343,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":143837,"byte_end":143840,"line_start":1344,"line_end":1344,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":143845,"byte_end":143904,"line_start":1345,"line_end":1345,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":143909,"byte_end":143973,"line_start":1346,"line_end":1346,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":143978,"byte_end":143981,"line_start":1347,"line_end":1347,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":143986,"byte_end":144000,"line_start":1348,"line_end":1348,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":144005,"byte_end":144008,"line_start":1349,"line_end":1349,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":144013,"byte_end":144020,"line_start":1350,"line_end":1350,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":144025,"byte_end":144052,"line_start":1351,"line_end":1351,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":144057,"byte_end":144060,"line_start":1352,"line_end":1352,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":144065,"byte_end":144098,"line_start":1353,"line_end":1353,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":144103,"byte_end":144126,"line_start":1354,"line_end":1354,"column_start":5,"column_end":28}},{"value":"/ if let Some(x) = map.get_mut(&1) {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":144131,"byte_end":144169,"line_start":1355,"line_end":1355,"column_start":5,"column_end":43}},{"value":"/     *x = \"b\";","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":144174,"byte_end":144191,"line_start":1356,"line_end":1356,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":144196,"byte_end":144201,"line_start":1357,"line_end":1357,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map[&1], \"b\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":144206,"byte_end":144235,"line_start":1358,"line_end":1358,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":144240,"byte_end":144243,"line_start":1359,"line_end":1359,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.get_mut(&2), None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":144248,"byte_end":144286,"line_start":1360,"line_end":1360,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":144291,"byte_end":144298,"line_start":1361,"line_end":1361,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":144339,"byte_end":144345,"line_start":1362,"line_end":1362,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":146401,"byte_end":146413,"line_start":1432,"line_end":1432,"column_start":12,"column_end":24},"name":"get_many_mut","qualname":"<HashMap<K, V, S, A>>::get_many_mut","value":"pub fn get_many_mut<Q: ?Sized, const N: usize>(&mut Self, [&Q; ])\n-> Option<[&mut V; ]> where K: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Attempts to get mutable references to `N` values in the map at once.","sig":null,"attributes":[{"value":"/ Attempts to get mutable references to `N` values in the map at once.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":145024,"byte_end":145096,"line_start":1389,"line_end":1389,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":145101,"byte_end":145104,"line_start":1390,"line_end":1390,"column_start":5,"column_end":8}},{"value":"/ Returns an array of length `N` with the results of each query. For soundness, at most one","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":145109,"byte_end":145202,"line_start":1391,"line_end":1391,"column_start":5,"column_end":98}},{"value":"/ mutable reference will be returned to any value. `None` will be returned if any of the","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":145207,"byte_end":145297,"line_start":1392,"line_end":1392,"column_start":5,"column_end":95}},{"value":"/ keys are duplicates or missing.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":145302,"byte_end":145337,"line_start":1393,"line_end":1393,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":145342,"byte_end":145345,"line_start":1394,"line_end":1394,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":145350,"byte_end":145364,"line_start":1395,"line_end":1395,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":145369,"byte_end":145372,"line_start":1396,"line_end":1396,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":145377,"byte_end":145384,"line_start":1397,"line_end":1397,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":145389,"byte_end":145416,"line_start":1398,"line_end":1398,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":145421,"byte_end":145424,"line_start":1399,"line_end":1399,"column_start":5,"column_end":8}},{"value":"/ let mut libraries = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":145429,"byte_end":145468,"line_start":1400,"line_end":1400,"column_start":5,"column_end":44}},{"value":"/ libraries.insert(\"Bodleian Library\".to_string(), 1602);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":145473,"byte_end":145532,"line_start":1401,"line_end":1401,"column_start":5,"column_end":64}},{"value":"/ libraries.insert(\"Athenæum\".to_string(), 1807);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":145537,"byte_end":145589,"line_start":1402,"line_end":1402,"column_start":5,"column_end":56}},{"value":"/ libraries.insert(\"Herzogin-Anna-Amalia-Bibliothek\".to_string(), 1691);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":145594,"byte_end":145668,"line_start":1403,"line_end":1403,"column_start":5,"column_end":79}},{"value":"/ libraries.insert(\"Library of Congress\".to_string(), 1800);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":145673,"byte_end":145735,"line_start":1404,"line_end":1404,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":145740,"byte_end":145743,"line_start":1405,"line_end":1405,"column_start":5,"column_end":8}},{"value":"/ let got = libraries.get_many_mut([","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":145748,"byte_end":145786,"line_start":1406,"line_end":1406,"column_start":5,"column_end":43}},{"value":"/     \"Athenæum\",","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":145791,"byte_end":145811,"line_start":1407,"line_end":1407,"column_start":5,"column_end":24}},{"value":"/     \"Library of Congress\",","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":145816,"byte_end":145846,"line_start":1408,"line_end":1408,"column_start":5,"column_end":35}},{"value":"/ ]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":145851,"byte_end":145858,"line_start":1409,"line_end":1409,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":145863,"byte_end":145878,"line_start":1410,"line_end":1410,"column_start":5,"column_end":20}},{"value":"/     got,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":145883,"byte_end":145895,"line_start":1411,"line_end":1411,"column_start":5,"column_end":17}},{"value":"/     Some([","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":145900,"byte_end":145914,"line_start":1412,"line_end":1412,"column_start":5,"column_end":19}},{"value":"/         &mut 1807,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":145919,"byte_end":145941,"line_start":1413,"line_end":1413,"column_start":5,"column_end":27}},{"value":"/         &mut 1800,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":145946,"byte_end":145968,"line_start":1414,"line_end":1414,"column_start":5,"column_end":27}},{"value":"/     ]),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":145973,"byte_end":145984,"line_start":1415,"line_end":1415,"column_start":5,"column_end":16}},{"value":"/ );","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":145989,"byte_end":145995,"line_start":1416,"line_end":1416,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":146000,"byte_end":146003,"line_start":1417,"line_end":1417,"column_start":5,"column_end":8}},{"value":"/ // Missing keys result in None","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":146008,"byte_end":146042,"line_start":1418,"line_end":1418,"column_start":5,"column_end":39}},{"value":"/ let got = libraries.get_many_mut([","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":146047,"byte_end":146085,"line_start":1419,"line_end":1419,"column_start":5,"column_end":43}},{"value":"/     \"Athenæum\",","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":146090,"byte_end":146110,"line_start":1420,"line_end":1420,"column_start":5,"column_end":24}},{"value":"/     \"New York Public Library\",","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":146115,"byte_end":146149,"line_start":1421,"line_end":1421,"column_start":5,"column_end":39}},{"value":"/ ]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":146154,"byte_end":146161,"line_start":1422,"line_end":1422,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(got, None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":146166,"byte_end":146192,"line_start":1423,"line_end":1423,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":146197,"byte_end":146200,"line_start":1424,"line_end":1424,"column_start":5,"column_end":8}},{"value":"/ // Duplicate keys result in None","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":146205,"byte_end":146241,"line_start":1425,"line_end":1425,"column_start":5,"column_end":41}},{"value":"/ let got = libraries.get_many_mut([","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":146246,"byte_end":146284,"line_start":1426,"line_end":1426,"column_start":5,"column_end":43}},{"value":"/     \"Athenæum\",","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":146289,"byte_end":146309,"line_start":1427,"line_end":1427,"column_start":5,"column_end":24}},{"value":"/     \"Athenæum\",","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":146314,"byte_end":146334,"line_start":1428,"line_end":1428,"column_start":5,"column_end":24}},{"value":"/ ]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":146339,"byte_end":146346,"line_start":1429,"line_end":1429,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(got, None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":146351,"byte_end":146377,"line_start":1430,"line_end":1430,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":146382,"byte_end":146389,"line_start":1431,"line_end":1431,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":148144,"byte_end":148166,"line_start":1485,"line_end":1485,"column_start":19,"column_end":41},"name":"get_many_unchecked_mut","qualname":"<HashMap<K, V, S, A>>::get_many_unchecked_mut","value":"pub unsafe fn get_many_unchecked_mut<Q: ?Sized, const N:\nusize>(&mut Self, [&Q; ]) -> Option<[&mut V; ]> where K: Borrow<Q>, Q: Hash +\nEq","parent":null,"children":[],"decl_id":null,"docs":" Attempts to get mutable references to `N` values in the map at once, without validating that\n the values are unique.","sig":null,"attributes":[{"value":"/ Attempts to get mutable references to `N` values in the map at once, without validating that","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":146629,"byte_end":146725,"line_start":1440,"line_end":1440,"column_start":5,"column_end":101}},{"value":"/ the values are unique.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":146730,"byte_end":146756,"line_start":1441,"line_end":1441,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":146761,"byte_end":146764,"line_start":1442,"line_end":1442,"column_start":5,"column_end":8}},{"value":"/ Returns an array of length `N` with the results of each query. `None` will be returned if","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":146769,"byte_end":146862,"line_start":1443,"line_end":1443,"column_start":5,"column_end":98}},{"value":"/ any of the keys are missing.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":146867,"byte_end":146899,"line_start":1444,"line_end":1444,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":146904,"byte_end":146907,"line_start":1445,"line_end":1445,"column_start":5,"column_end":8}},{"value":"/ For a safe alternative see [`get_many_mut`](`HashMap::get_many_mut`).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":146912,"byte_end":146985,"line_start":1446,"line_end":1446,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":146990,"byte_end":146993,"line_start":1447,"line_end":1447,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":146998,"byte_end":147010,"line_start":1448,"line_end":1448,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":147015,"byte_end":147018,"line_start":1449,"line_end":1449,"column_start":5,"column_end":8}},{"value":"/ Calling this method with overlapping keys is *[undefined behavior]* even if the resulting","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":147023,"byte_end":147116,"line_start":1450,"line_end":1450,"column_start":5,"column_end":98}},{"value":"/ references are not used.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":147121,"byte_end":147149,"line_start":1451,"line_end":1451,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":147154,"byte_end":147157,"line_start":1452,"line_end":1452,"column_start":5,"column_end":8}},{"value":"/ [undefined behavior]: https://doc.rust-lang.org/reference/behavior-considered-undefined.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":147162,"byte_end":147258,"line_start":1453,"line_end":1453,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":147263,"byte_end":147266,"line_start":1454,"line_end":1454,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":147271,"byte_end":147285,"line_start":1455,"line_end":1455,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":147290,"byte_end":147293,"line_start":1456,"line_end":1456,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":147298,"byte_end":147305,"line_start":1457,"line_end":1457,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":147310,"byte_end":147337,"line_start":1458,"line_end":1458,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":147342,"byte_end":147345,"line_start":1459,"line_end":1459,"column_start":5,"column_end":8}},{"value":"/ let mut libraries = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":147350,"byte_end":147389,"line_start":1460,"line_end":1460,"column_start":5,"column_end":44}},{"value":"/ libraries.insert(\"Bodleian Library\".to_string(), 1602);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":147394,"byte_end":147453,"line_start":1461,"line_end":1461,"column_start":5,"column_end":64}},{"value":"/ libraries.insert(\"Athenæum\".to_string(), 1807);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":147458,"byte_end":147510,"line_start":1462,"line_end":1462,"column_start":5,"column_end":56}},{"value":"/ libraries.insert(\"Herzogin-Anna-Amalia-Bibliothek\".to_string(), 1691);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":147515,"byte_end":147589,"line_start":1463,"line_end":1463,"column_start":5,"column_end":79}},{"value":"/ libraries.insert(\"Library of Congress\".to_string(), 1800);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":147594,"byte_end":147656,"line_start":1464,"line_end":1464,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":147661,"byte_end":147664,"line_start":1465,"line_end":1465,"column_start":5,"column_end":8}},{"value":"/ let got = libraries.get_many_mut([","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":147669,"byte_end":147707,"line_start":1466,"line_end":1466,"column_start":5,"column_end":43}},{"value":"/     \"Athenæum\",","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":147712,"byte_end":147732,"line_start":1467,"line_end":1467,"column_start":5,"column_end":24}},{"value":"/     \"Library of Congress\",","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":147737,"byte_end":147767,"line_start":1468,"line_end":1468,"column_start":5,"column_end":35}},{"value":"/ ]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":147772,"byte_end":147779,"line_start":1469,"line_end":1469,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":147784,"byte_end":147799,"line_start":1470,"line_end":1470,"column_start":5,"column_end":20}},{"value":"/     got,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":147804,"byte_end":147816,"line_start":1471,"line_end":1471,"column_start":5,"column_end":17}},{"value":"/     Some([","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":147821,"byte_end":147835,"line_start":1472,"line_end":1472,"column_start":5,"column_end":19}},{"value":"/         &mut 1807,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":147840,"byte_end":147862,"line_start":1473,"line_end":1473,"column_start":5,"column_end":27}},{"value":"/         &mut 1800,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":147867,"byte_end":147889,"line_start":1474,"line_end":1474,"column_start":5,"column_end":27}},{"value":"/     ]),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":147894,"byte_end":147905,"line_start":1475,"line_end":1475,"column_start":5,"column_end":16}},{"value":"/ );","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":147910,"byte_end":147916,"line_start":1476,"line_end":1476,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":147921,"byte_end":147924,"line_start":1477,"line_end":1477,"column_start":5,"column_end":8}},{"value":"/ // Missing keys result in None","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":147929,"byte_end":147963,"line_start":1478,"line_end":1478,"column_start":5,"column_end":39}},{"value":"/ let got = libraries.get_many_mut([","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":147968,"byte_end":148006,"line_start":1479,"line_end":1479,"column_start":5,"column_end":43}},{"value":"/     \"Athenæum\",","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":148011,"byte_end":148031,"line_start":1480,"line_end":1480,"column_start":5,"column_end":24}},{"value":"/     \"New York Public Library\",","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":148036,"byte_end":148070,"line_start":1481,"line_end":1481,"column_start":5,"column_end":39}},{"value":"/ ]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":148075,"byte_end":148082,"line_start":1482,"line_end":1482,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(got, None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":148087,"byte_end":148113,"line_start":1483,"line_end":1483,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":148118,"byte_end":148125,"line_start":1484,"line_end":1484,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":150062,"byte_end":150084,"line_start":1541,"line_end":1541,"column_start":12,"column_end":34},"name":"get_many_key_value_mut","qualname":"<HashMap<K, V, S, A>>::get_many_key_value_mut","value":"pub fn get_many_key_value_mut<Q: ?Sized, const N: usize>(&mut Self, [&Q; ])\n-> Option<[(&K, &mut V); ]> where K: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Attempts to get mutable references to `N` values in the map at once, with immutable\n references to the corresponding keys.","sig":null,"attributes":[{"value":"/ Attempts to get mutable references to `N` values in the map at once, with immutable","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":148428,"byte_end":148515,"line_start":1497,"line_end":1497,"column_start":5,"column_end":92}},{"value":"/ references to the corresponding keys.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":148520,"byte_end":148561,"line_start":1498,"line_end":1498,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":148566,"byte_end":148569,"line_start":1499,"line_end":1499,"column_start":5,"column_end":8}},{"value":"/ Returns an array of length `N` with the results of each query. For soundness, at most one","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":148574,"byte_end":148667,"line_start":1500,"line_end":1500,"column_start":5,"column_end":98}},{"value":"/ mutable reference will be returned to any value. `None` will be returned if any of the keys","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":148672,"byte_end":148767,"line_start":1501,"line_end":1501,"column_start":5,"column_end":100}},{"value":"/ are duplicates or missing.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":148772,"byte_end":148802,"line_start":1502,"line_end":1502,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":148807,"byte_end":148810,"line_start":1503,"line_end":1503,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":148815,"byte_end":148829,"line_start":1504,"line_end":1504,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":148834,"byte_end":148837,"line_start":1505,"line_end":1505,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":148842,"byte_end":148849,"line_start":1506,"line_end":1506,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":148854,"byte_end":148881,"line_start":1507,"line_end":1507,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":148886,"byte_end":148889,"line_start":1508,"line_end":1508,"column_start":5,"column_end":8}},{"value":"/ let mut libraries = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":148894,"byte_end":148933,"line_start":1509,"line_end":1509,"column_start":5,"column_end":44}},{"value":"/ libraries.insert(\"Bodleian Library\".to_string(), 1602);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":148938,"byte_end":148997,"line_start":1510,"line_end":1510,"column_start":5,"column_end":64}},{"value":"/ libraries.insert(\"Athenæum\".to_string(), 1807);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":149002,"byte_end":149054,"line_start":1511,"line_end":1511,"column_start":5,"column_end":56}},{"value":"/ libraries.insert(\"Herzogin-Anna-Amalia-Bibliothek\".to_string(), 1691);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":149059,"byte_end":149133,"line_start":1512,"line_end":1512,"column_start":5,"column_end":79}},{"value":"/ libraries.insert(\"Library of Congress\".to_string(), 1800);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":149138,"byte_end":149200,"line_start":1513,"line_end":1513,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":149205,"byte_end":149208,"line_start":1514,"line_end":1514,"column_start":5,"column_end":8}},{"value":"/ let got = libraries.get_many_key_value_mut([","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":149213,"byte_end":149261,"line_start":1515,"line_end":1515,"column_start":5,"column_end":53}},{"value":"/     \"Bodleian Library\",","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":149266,"byte_end":149293,"line_start":1516,"line_end":1516,"column_start":5,"column_end":32}},{"value":"/     \"Herzogin-Anna-Amalia-Bibliothek\",","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":149298,"byte_end":149340,"line_start":1517,"line_end":1517,"column_start":5,"column_end":47}},{"value":"/ ]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":149345,"byte_end":149352,"line_start":1518,"line_end":1518,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":149357,"byte_end":149372,"line_start":1519,"line_end":1519,"column_start":5,"column_end":20}},{"value":"/     got,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":149377,"byte_end":149389,"line_start":1520,"line_end":1520,"column_start":5,"column_end":17}},{"value":"/     Some([","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":149394,"byte_end":149408,"line_start":1521,"line_end":1521,"column_start":5,"column_end":19}},{"value":"/         (&\"Bodleian Library\".to_string(), &mut 1602),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":149413,"byte_end":149470,"line_start":1522,"line_end":1522,"column_start":5,"column_end":62}},{"value":"/         (&\"Herzogin-Anna-Amalia-Bibliothek\".to_string(), &mut 1691),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":149475,"byte_end":149547,"line_start":1523,"line_end":1523,"column_start":5,"column_end":77}},{"value":"/     ]),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":149552,"byte_end":149563,"line_start":1524,"line_end":1524,"column_start":5,"column_end":16}},{"value":"/ );","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":149568,"byte_end":149574,"line_start":1525,"line_end":1525,"column_start":5,"column_end":11}},{"value":"/ // Missing keys result in None","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":149579,"byte_end":149613,"line_start":1526,"line_end":1526,"column_start":5,"column_end":39}},{"value":"/ let got = libraries.get_many_key_value_mut([","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":149618,"byte_end":149666,"line_start":1527,"line_end":1527,"column_start":5,"column_end":53}},{"value":"/     \"Bodleian Library\",","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":149671,"byte_end":149698,"line_start":1528,"line_end":1528,"column_start":5,"column_end":32}},{"value":"/     \"Gewandhaus\",","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":149703,"byte_end":149724,"line_start":1529,"line_end":1529,"column_start":5,"column_end":26}},{"value":"/ ]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":149729,"byte_end":149736,"line_start":1530,"line_end":1530,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(got, None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":149741,"byte_end":149767,"line_start":1531,"line_end":1531,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":149772,"byte_end":149775,"line_start":1532,"line_end":1532,"column_start":5,"column_end":8}},{"value":"/ // Duplicate keys result in None","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":149780,"byte_end":149816,"line_start":1533,"line_end":1533,"column_start":5,"column_end":41}},{"value":"/ let got = libraries.get_many_key_value_mut([","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":149821,"byte_end":149869,"line_start":1534,"line_end":1534,"column_start":5,"column_end":53}},{"value":"/     \"Bodleian Library\",","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":149874,"byte_end":149901,"line_start":1535,"line_end":1535,"column_start":5,"column_end":32}},{"value":"/     \"Herzogin-Anna-Amalia-Bibliothek\",","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":149906,"byte_end":149948,"line_start":1536,"line_end":1536,"column_start":5,"column_end":47}},{"value":"/     \"Herzogin-Anna-Amalia-Bibliothek\",","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":149953,"byte_end":149995,"line_start":1537,"line_end":1537,"column_start":5,"column_end":47}},{"value":"/ ]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":150000,"byte_end":150007,"line_start":1538,"line_end":1538,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(got, None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":150012,"byte_end":150038,"line_start":1539,"line_end":1539,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":150043,"byte_end":150050,"line_start":1540,"line_end":1540,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":152050,"byte_end":152082,"line_start":1597,"line_end":1597,"column_start":19,"column_end":51},"name":"get_many_key_value_unchecked_mut","qualname":"<HashMap<K, V, S, A>>::get_many_key_value_unchecked_mut","value":"pub unsafe fn get_many_key_value_unchecked_mut<Q: ?Sized, const N:\nusize>(&mut Self, [&Q; ]) -> Option<[(&K, &mut V); ]> where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Attempts to get mutable references to `N` values in the map at once, with immutable\n references to the corresponding keys, without validating that the values are unique.","sig":null,"attributes":[{"value":"/ Attempts to get mutable references to `N` values in the map at once, with immutable","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":150352,"byte_end":150439,"line_start":1553,"line_end":1553,"column_start":5,"column_end":92}},{"value":"/ references to the corresponding keys, without validating that the values are unique.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":150444,"byte_end":150532,"line_start":1554,"line_end":1554,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":150537,"byte_end":150540,"line_start":1555,"line_end":1555,"column_start":5,"column_end":8}},{"value":"/ Returns an array of length `N` with the results of each query. `None` will be returned if","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":150545,"byte_end":150638,"line_start":1556,"line_end":1556,"column_start":5,"column_end":98}},{"value":"/ any of the keys are missing.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":150643,"byte_end":150675,"line_start":1557,"line_end":1557,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":150680,"byte_end":150683,"line_start":1558,"line_end":1558,"column_start":5,"column_end":8}},{"value":"/ For a safe alternative see [`get_many_key_value_mut`](`HashMap::get_many_key_value_mut`).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":150688,"byte_end":150781,"line_start":1559,"line_end":1559,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":150786,"byte_end":150789,"line_start":1560,"line_end":1560,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":150794,"byte_end":150806,"line_start":1561,"line_end":1561,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":150811,"byte_end":150814,"line_start":1562,"line_end":1562,"column_start":5,"column_end":8}},{"value":"/ Calling this method with overlapping keys is *[undefined behavior]* even if the resulting","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":150819,"byte_end":150912,"line_start":1563,"line_end":1563,"column_start":5,"column_end":98}},{"value":"/ references are not used.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":150917,"byte_end":150945,"line_start":1564,"line_end":1564,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":150950,"byte_end":150953,"line_start":1565,"line_end":1565,"column_start":5,"column_end":8}},{"value":"/ [undefined behavior]: https://doc.rust-lang.org/reference/behavior-considered-undefined.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":150958,"byte_end":151054,"line_start":1566,"line_end":1566,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":151059,"byte_end":151062,"line_start":1567,"line_end":1567,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":151067,"byte_end":151081,"line_start":1568,"line_end":1568,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":151086,"byte_end":151089,"line_start":1569,"line_end":1569,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":151094,"byte_end":151101,"line_start":1570,"line_end":1570,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":151106,"byte_end":151133,"line_start":1571,"line_end":1571,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":151138,"byte_end":151141,"line_start":1572,"line_end":1572,"column_start":5,"column_end":8}},{"value":"/ let mut libraries = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":151146,"byte_end":151185,"line_start":1573,"line_end":1573,"column_start":5,"column_end":44}},{"value":"/ libraries.insert(\"Bodleian Library\".to_string(), 1602);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":151190,"byte_end":151249,"line_start":1574,"line_end":1574,"column_start":5,"column_end":64}},{"value":"/ libraries.insert(\"Athenæum\".to_string(), 1807);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":151254,"byte_end":151306,"line_start":1575,"line_end":1575,"column_start":5,"column_end":56}},{"value":"/ libraries.insert(\"Herzogin-Anna-Amalia-Bibliothek\".to_string(), 1691);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":151311,"byte_end":151385,"line_start":1576,"line_end":1576,"column_start":5,"column_end":79}},{"value":"/ libraries.insert(\"Library of Congress\".to_string(), 1800);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":151390,"byte_end":151452,"line_start":1577,"line_end":1577,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":151457,"byte_end":151460,"line_start":1578,"line_end":1578,"column_start":5,"column_end":8}},{"value":"/ let got = libraries.get_many_key_value_mut([","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":151465,"byte_end":151513,"line_start":1579,"line_end":1579,"column_start":5,"column_end":53}},{"value":"/     \"Bodleian Library\",","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":151518,"byte_end":151545,"line_start":1580,"line_end":1580,"column_start":5,"column_end":32}},{"value":"/     \"Herzogin-Anna-Amalia-Bibliothek\",","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":151550,"byte_end":151592,"line_start":1581,"line_end":1581,"column_start":5,"column_end":47}},{"value":"/ ]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":151597,"byte_end":151604,"line_start":1582,"line_end":1582,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":151609,"byte_end":151624,"line_start":1583,"line_end":1583,"column_start":5,"column_end":20}},{"value":"/     got,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":151629,"byte_end":151641,"line_start":1584,"line_end":1584,"column_start":5,"column_end":17}},{"value":"/     Some([","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":151646,"byte_end":151660,"line_start":1585,"line_end":1585,"column_start":5,"column_end":19}},{"value":"/         (&\"Bodleian Library\".to_string(), &mut 1602),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":151665,"byte_end":151722,"line_start":1586,"line_end":1586,"column_start":5,"column_end":62}},{"value":"/         (&\"Herzogin-Anna-Amalia-Bibliothek\".to_string(), &mut 1691),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":151727,"byte_end":151799,"line_start":1587,"line_end":1587,"column_start":5,"column_end":77}},{"value":"/     ]),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":151804,"byte_end":151815,"line_start":1588,"line_end":1588,"column_start":5,"column_end":16}},{"value":"/ );","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":151820,"byte_end":151826,"line_start":1589,"line_end":1589,"column_start":5,"column_end":11}},{"value":"/ // Missing keys result in None","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":151831,"byte_end":151865,"line_start":1590,"line_end":1590,"column_start":5,"column_end":39}},{"value":"/ let got = libraries.get_many_key_value_mut([","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":151870,"byte_end":151918,"line_start":1591,"line_end":1591,"column_start":5,"column_end":53}},{"value":"/     \"Bodleian Library\",","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":151923,"byte_end":151950,"line_start":1592,"line_end":1592,"column_start":5,"column_end":32}},{"value":"/     \"Gewandhaus\",","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":151955,"byte_end":151976,"line_start":1593,"line_end":1593,"column_start":5,"column_end":26}},{"value":"/ ]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":151981,"byte_end":151988,"line_start":1594,"line_end":1594,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(got, None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":151993,"byte_end":152019,"line_start":1595,"line_end":1595,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":152024,"byte_end":152031,"line_start":1596,"line_end":1596,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":154489,"byte_end":154495,"line_start":1674,"line_end":1674,"column_start":12,"column_end":18},"name":"insert","qualname":"<HashMap<K, V, S, A>>::insert","value":"pub fn insert(&mut Self, K, V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a key-value pair into the map.","sig":null,"attributes":[{"value":"/ Inserts a key-value pair into the map.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":153368,"byte_end":153410,"line_start":1647,"line_end":1647,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":153415,"byte_end":153418,"line_start":1648,"line_end":1648,"column_start":5,"column_end":8}},{"value":"/ If the map did not have this key present, [`None`] is returned.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":153423,"byte_end":153490,"line_start":1649,"line_end":1649,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":153495,"byte_end":153498,"line_start":1650,"line_end":1650,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the value is updated, and the old","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":153503,"byte_end":153578,"line_start":1651,"line_end":1651,"column_start":5,"column_end":80}},{"value":"/ value is returned. The key is not updated, though; this matters for","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":153583,"byte_end":153654,"line_start":1652,"line_end":1652,"column_start":5,"column_end":76}},{"value":"/ types that can be `==` without being identical. See the [`std::collections`]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":153659,"byte_end":153739,"line_start":1653,"line_end":1653,"column_start":5,"column_end":85}},{"value":"/ [module-level documentation] for more.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":153744,"byte_end":153786,"line_start":1654,"line_end":1654,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":153791,"byte_end":153794,"line_start":1655,"line_end":1655,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":153799,"byte_end":153879,"line_start":1656,"line_end":1656,"column_start":5,"column_end":85}},{"value":"/ [`std::collections`]: https://doc.rust-lang.org/std/collections/index.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":153884,"byte_end":153962,"line_start":1657,"line_end":1657,"column_start":5,"column_end":83}},{"value":"/ [module-level documentation]: https://doc.rust-lang.org/std/collections/index.html#insert-and-complex-keys","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":153967,"byte_end":154077,"line_start":1658,"line_end":1658,"column_start":5,"column_end":115}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":154082,"byte_end":154085,"line_start":1659,"line_end":1659,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":154090,"byte_end":154104,"line_start":1660,"line_end":1660,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":154109,"byte_end":154112,"line_start":1661,"line_end":1661,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":154117,"byte_end":154124,"line_start":1662,"line_end":1662,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":154129,"byte_end":154156,"line_start":1663,"line_end":1663,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":154161,"byte_end":154164,"line_start":1664,"line_end":1664,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":154169,"byte_end":154202,"line_start":1665,"line_end":1665,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(map.insert(37, \"a\"), None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":154207,"byte_end":154249,"line_start":1666,"line_end":1666,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(map.is_empty(), false);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":154254,"byte_end":154292,"line_start":1667,"line_end":1667,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":154297,"byte_end":154300,"line_start":1668,"line_end":1668,"column_start":5,"column_end":8}},{"value":"/ map.insert(37, \"b\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":154305,"byte_end":154329,"line_start":1669,"line_end":1669,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(map.insert(37, \"c\"), Some(\"b\"));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":154334,"byte_end":154381,"line_start":1670,"line_end":1670,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(map[&37], \"c\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":154386,"byte_end":154416,"line_start":1671,"line_end":1671,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":154421,"byte_end":154428,"line_start":1672,"line_end":1672,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":154469,"byte_end":154475,"line_start":1673,"line_end":1673,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":156685,"byte_end":156708,"line_start":1735,"line_end":1735,"column_start":12,"column_end":35},"name":"insert_unique_unchecked","qualname":"<HashMap<K, V, S, A>>::insert_unique_unchecked","value":"pub fn insert_unique_unchecked(&mut Self, K, V) -> (&K, &mut V)","parent":null,"children":[],"decl_id":null,"docs":" Insert a key-value pair into the map without checking\n if the key already exists in the map.","sig":null,"attributes":[{"value":"/ Insert a key-value pair into the map without checking","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":154887,"byte_end":154944,"line_start":1685,"line_end":1685,"column_start":5,"column_end":62}},{"value":"/ if the key already exists in the map.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":154949,"byte_end":154990,"line_start":1686,"line_end":1686,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":154995,"byte_end":154998,"line_start":1687,"line_end":1687,"column_start":5,"column_end":8}},{"value":"/ Returns a reference to the key and value just inserted.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":155003,"byte_end":155062,"line_start":1688,"line_end":1688,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":155067,"byte_end":155070,"line_start":1689,"line_end":1689,"column_start":5,"column_end":8}},{"value":"/ This operation is safe if a key does not exist in the map.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":155075,"byte_end":155137,"line_start":1690,"line_end":1690,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":155142,"byte_end":155145,"line_start":1691,"line_end":1691,"column_start":5,"column_end":8}},{"value":"/ However, if a key exists in the map already, the behavior is unspecified:","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":155150,"byte_end":155227,"line_start":1692,"line_end":1692,"column_start":5,"column_end":82}},{"value":"/ this operation may panic, loop forever, or any following operation with the map","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":155232,"byte_end":155315,"line_start":1693,"line_end":1693,"column_start":5,"column_end":88}},{"value":"/ may panic, loop forever or return arbitrary result.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":155320,"byte_end":155375,"line_start":1694,"line_end":1694,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":155380,"byte_end":155383,"line_start":1695,"line_end":1695,"column_start":5,"column_end":8}},{"value":"/ That said, this operation (and following operations) are guaranteed to","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":155388,"byte_end":155462,"line_start":1696,"line_end":1696,"column_start":5,"column_end":79}},{"value":"/ not violate memory safety.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":155467,"byte_end":155497,"line_start":1697,"line_end":1697,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":155502,"byte_end":155505,"line_start":1698,"line_end":1698,"column_start":5,"column_end":8}},{"value":"/ This operation is faster than regular insert, because it does not perform","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":155510,"byte_end":155587,"line_start":1699,"line_end":1699,"column_start":5,"column_end":82}},{"value":"/ lookup before insertion.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":155592,"byte_end":155620,"line_start":1700,"line_end":1700,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":155625,"byte_end":155628,"line_start":1701,"line_end":1701,"column_start":5,"column_end":8}},{"value":"/ This operation is useful during initial population of the map.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":155633,"byte_end":155699,"line_start":1702,"line_end":1702,"column_start":5,"column_end":71}},{"value":"/ For example, when constructing a map from another map, we know","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":155704,"byte_end":155770,"line_start":1703,"line_end":1703,"column_start":5,"column_end":71}},{"value":"/ that keys are unique.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":155775,"byte_end":155800,"line_start":1704,"line_end":1704,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":155805,"byte_end":155808,"line_start":1705,"line_end":1705,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":155813,"byte_end":155827,"line_start":1706,"line_end":1706,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":155832,"byte_end":155835,"line_start":1707,"line_end":1707,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":155840,"byte_end":155847,"line_start":1708,"line_end":1708,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":155852,"byte_end":155879,"line_start":1709,"line_end":1709,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":155884,"byte_end":155887,"line_start":1710,"line_end":1710,"column_start":5,"column_end":8}},{"value":"/ let mut map1 = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":155892,"byte_end":155926,"line_start":1711,"line_end":1711,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(map1.insert(1, \"a\"), None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":155931,"byte_end":155973,"line_start":1712,"line_end":1712,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(map1.insert(2, \"b\"), None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":155978,"byte_end":156020,"line_start":1713,"line_end":1713,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(map1.insert(3, \"c\"), None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":156025,"byte_end":156067,"line_start":1714,"line_end":1714,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(map1.len(), 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":156072,"byte_end":156102,"line_start":1715,"line_end":1715,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":156107,"byte_end":156110,"line_start":1716,"line_end":1716,"column_start":5,"column_end":8}},{"value":"/ let mut map2 = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":156115,"byte_end":156149,"line_start":1717,"line_end":1717,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":156154,"byte_end":156157,"line_start":1718,"line_end":1718,"column_start":5,"column_end":8}},{"value":"/ for (key, value) in map1.into_iter() {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":156162,"byte_end":156204,"line_start":1719,"line_end":1719,"column_start":5,"column_end":47}},{"value":"/     map2.insert_unique_unchecked(key, value);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":156209,"byte_end":156258,"line_start":1720,"line_end":1720,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":156263,"byte_end":156268,"line_start":1721,"line_end":1721,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":156273,"byte_end":156276,"line_start":1722,"line_end":1722,"column_start":5,"column_end":8}},{"value":"/ let (key, value) = map2.insert_unique_unchecked(4, \"d\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":156281,"byte_end":156341,"line_start":1723,"line_end":1723,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(key, &4);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":156346,"byte_end":156370,"line_start":1724,"line_end":1724,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(value, &mut \"d\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":156375,"byte_end":156407,"line_start":1725,"line_end":1725,"column_start":5,"column_end":37}},{"value":"/ *value = \"e\";","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":156412,"byte_end":156429,"line_start":1726,"line_end":1726,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":156434,"byte_end":156437,"line_start":1727,"line_end":1727,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map2[&1], \"a\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":156442,"byte_end":156472,"line_start":1728,"line_end":1728,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(map2[&2], \"b\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":156477,"byte_end":156507,"line_start":1729,"line_end":1729,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(map2[&3], \"c\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":156512,"byte_end":156542,"line_start":1730,"line_end":1730,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(map2[&4], \"e\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":156547,"byte_end":156577,"line_start":1731,"line_end":1731,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(map2.len(), 4);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":156582,"byte_end":156612,"line_start":1732,"line_end":1732,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":156617,"byte_end":156624,"line_start":1733,"line_end":1733,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":156665,"byte_end":156671,"line_start":1734,"line_end":1734,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":157953,"byte_end":157963,"line_start":1773,"line_end":1773,"column_start":12,"column_end":22},"name":"try_insert","qualname":"<HashMap<K, V, S, A>>::try_insert","value":"pub fn try_insert(&mut Self, K, V)\n-> Result<&mut V, OccupiedError<, K, V, S, A>>","parent":null,"children":[],"decl_id":null,"docs":" Tries to insert a key-value pair into the map, and returns\n a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Tries to insert a key-value pair into the map, and returns","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":157037,"byte_end":157099,"line_start":1744,"line_end":1744,"column_start":5,"column_end":67}},{"value":"/ a mutable reference to the value in the entry.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":157104,"byte_end":157154,"line_start":1745,"line_end":1745,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":157159,"byte_end":157162,"line_start":1746,"line_end":1746,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":157167,"byte_end":157179,"line_start":1747,"line_end":1747,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":157184,"byte_end":157187,"line_start":1748,"line_end":1748,"column_start":5,"column_end":8}},{"value":"/ If the map already had this key present, nothing is updated, and","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":157192,"byte_end":157260,"line_start":1749,"line_end":1749,"column_start":5,"column_end":73}},{"value":"/ an error containing the occupied entry and the value is returned.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":157265,"byte_end":157334,"line_start":1750,"line_end":1750,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":157339,"byte_end":157342,"line_start":1751,"line_end":1751,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":157347,"byte_end":157361,"line_start":1752,"line_end":1752,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":157366,"byte_end":157369,"line_start":1753,"line_end":1753,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":157374,"byte_end":157390,"line_start":1754,"line_end":1754,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":157395,"byte_end":157398,"line_start":1755,"line_end":1755,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":157403,"byte_end":157410,"line_start":1756,"line_end":1756,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":157415,"byte_end":157442,"line_start":1757,"line_end":1757,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::OccupiedError;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":157447,"byte_end":157490,"line_start":1758,"line_end":1758,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":157495,"byte_end":157498,"line_start":1759,"line_end":1759,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":157503,"byte_end":157536,"line_start":1760,"line_end":1760,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(map.try_insert(37, \"a\").unwrap(), &\"a\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":157541,"byte_end":157596,"line_start":1761,"line_end":1761,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":157601,"byte_end":157604,"line_start":1762,"line_end":1762,"column_start":5,"column_end":8}},{"value":"/ match map.try_insert(37, \"b\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":157609,"byte_end":157644,"line_start":1763,"line_end":1763,"column_start":5,"column_end":40}},{"value":"/     Err(OccupiedError { entry, value }) => {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":157649,"byte_end":157697,"line_start":1764,"line_end":1764,"column_start":5,"column_end":53}},{"value":"/         assert_eq!(entry.key(), &37);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":157702,"byte_end":157743,"line_start":1765,"line_end":1765,"column_start":5,"column_end":46}},{"value":"/         assert_eq!(entry.get(), &\"a\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":157748,"byte_end":157790,"line_start":1766,"line_end":1766,"column_start":5,"column_end":47}},{"value":"/         assert_eq!(value, \"b\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":157795,"byte_end":157830,"line_start":1767,"line_end":1767,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":157835,"byte_end":157844,"line_start":1768,"line_end":1768,"column_start":5,"column_end":14}},{"value":"/     _ => panic!()","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":157849,"byte_end":157870,"line_start":1769,"line_end":1769,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":157875,"byte_end":157880,"line_start":1770,"line_end":1770,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":157885,"byte_end":157892,"line_start":1771,"line_end":1771,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":157933,"byte_end":157939,"line_start":1772,"line_end":1772,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":159350,"byte_end":159356,"line_start":1813,"line_end":1813,"column_start":12,"column_end":18},"name":"remove","qualname":"<HashMap<K, V, S, A>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the value at the key if the key\n was previously in the map. Keeps the allocated memory for reuse.","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the value at the key if the key","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":158264,"byte_end":158337,"line_start":1784,"line_end":1784,"column_start":5,"column_end":78}},{"value":"/ was previously in the map. Keeps the allocated memory for reuse.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":158342,"byte_end":158410,"line_start":1785,"line_end":1785,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":158415,"byte_end":158418,"line_start":1786,"line_end":1786,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":158423,"byte_end":158486,"line_start":1787,"line_end":1787,"column_start":5,"column_end":68}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":158491,"byte_end":158558,"line_start":1788,"line_end":1788,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":158563,"byte_end":158580,"line_start":1789,"line_end":1789,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":158585,"byte_end":158588,"line_start":1790,"line_end":1790,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":158593,"byte_end":158652,"line_start":1791,"line_end":1791,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":158657,"byte_end":158721,"line_start":1792,"line_end":1792,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":158726,"byte_end":158729,"line_start":1793,"line_end":1793,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":158734,"byte_end":158748,"line_start":1794,"line_end":1794,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":158753,"byte_end":158756,"line_start":1795,"line_end":1795,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":158761,"byte_end":158768,"line_start":1796,"line_end":1796,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":158773,"byte_end":158800,"line_start":1797,"line_end":1797,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":158805,"byte_end":158808,"line_start":1798,"line_end":1798,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":158813,"byte_end":158846,"line_start":1799,"line_end":1799,"column_start":5,"column_end":38}},{"value":"/ // The map is empty","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":158851,"byte_end":158874,"line_start":1800,"line_end":1800,"column_start":5,"column_end":28}},{"value":"/ assert!(map.is_empty() && map.capacity() == 0);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":158879,"byte_end":158930,"line_start":1801,"line_end":1801,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":158935,"byte_end":158938,"line_start":1802,"line_end":1802,"column_start":5,"column_end":8}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":158943,"byte_end":158966,"line_start":1803,"line_end":1803,"column_start":5,"column_end":28}},{"value":"/ let capacity_before_remove = map.capacity();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":158971,"byte_end":159019,"line_start":1804,"line_end":1804,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":159024,"byte_end":159027,"line_start":1805,"line_end":1805,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.remove(&1), Some(\"a\"));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":159032,"byte_end":159074,"line_start":1806,"line_end":1806,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(map.remove(&1), None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":159079,"byte_end":159116,"line_start":1807,"line_end":1807,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":159121,"byte_end":159124,"line_start":1808,"line_end":1808,"column_start":5,"column_end":8}},{"value":"/ // Now map holds none elements but capacity is equal to the old one","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":159129,"byte_end":159200,"line_start":1809,"line_end":1809,"column_start":5,"column_end":76}},{"value":"/ assert!(map.len() == 0 && map.capacity() == capacity_before_remove);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":159205,"byte_end":159277,"line_start":1810,"line_end":1810,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":159282,"byte_end":159289,"line_start":1811,"line_end":1811,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":159330,"byte_end":159336,"line_start":1812,"line_end":1812,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":160738,"byte_end":160750,"line_start":1854,"line_end":1854,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<HashMap<K, V, S, A>>::remove_entry","value":"pub fn remove_entry<Q: ?Sized>(&mut Self, &Q) -> Option<(K, V)> where\nK: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the stored key and value if the\n key was previously in the map. Keeps the allocated memory for reuse.","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the stored key and value if the","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":159638,"byte_end":159711,"line_start":1825,"line_end":1825,"column_start":5,"column_end":78}},{"value":"/ key was previously in the map. Keeps the allocated memory for reuse.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":159716,"byte_end":159788,"line_start":1826,"line_end":1826,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":159793,"byte_end":159796,"line_start":1827,"line_end":1827,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":159801,"byte_end":159864,"line_start":1828,"line_end":1828,"column_start":5,"column_end":68}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":159869,"byte_end":159936,"line_start":1829,"line_end":1829,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":159941,"byte_end":159958,"line_start":1830,"line_end":1830,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":159963,"byte_end":159966,"line_start":1831,"line_end":1831,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":159971,"byte_end":160030,"line_start":1832,"line_end":1832,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":160035,"byte_end":160099,"line_start":1833,"line_end":1833,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":160104,"byte_end":160107,"line_start":1834,"line_end":1834,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":160112,"byte_end":160126,"line_start":1835,"line_end":1835,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":160131,"byte_end":160134,"line_start":1836,"line_end":1836,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":160139,"byte_end":160146,"line_start":1837,"line_end":1837,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":160151,"byte_end":160178,"line_start":1838,"line_end":1838,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":160183,"byte_end":160186,"line_start":1839,"line_end":1839,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":160191,"byte_end":160224,"line_start":1840,"line_end":1840,"column_start":5,"column_end":38}},{"value":"/ // The map is empty","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":160229,"byte_end":160252,"line_start":1841,"line_end":1841,"column_start":5,"column_end":28}},{"value":"/ assert!(map.is_empty() && map.capacity() == 0);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":160257,"byte_end":160308,"line_start":1842,"line_end":1842,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":160313,"byte_end":160316,"line_start":1843,"line_end":1843,"column_start":5,"column_end":8}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":160321,"byte_end":160344,"line_start":1844,"line_end":1844,"column_start":5,"column_end":28}},{"value":"/ let capacity_before_remove = map.capacity();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":160349,"byte_end":160397,"line_start":1845,"line_end":1845,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":160402,"byte_end":160405,"line_start":1846,"line_end":1846,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.remove_entry(&1), Some((1, \"a\")));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":160410,"byte_end":160463,"line_start":1847,"line_end":1847,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(map.remove(&1), None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":160468,"byte_end":160505,"line_start":1848,"line_end":1848,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":160510,"byte_end":160513,"line_start":1849,"line_end":1849,"column_start":5,"column_end":8}},{"value":"/ // Now map hold none elements but capacity is equal to the old one","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":160518,"byte_end":160588,"line_start":1850,"line_end":1850,"column_start":5,"column_end":75}},{"value":"/ assert!(map.len() == 0 && map.capacity() == capacity_before_remove);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":160593,"byte_end":160665,"line_start":1851,"line_end":1851,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":160670,"byte_end":160677,"line_start":1852,"line_end":1852,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":160718,"byte_end":160724,"line_start":1853,"line_end":1853,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":165349,"byte_end":165362,"line_start":1963,"line_end":1963,"column_start":12,"column_end":25},"name":"raw_entry_mut","qualname":"<HashMap<K, V, S, A>>::raw_entry_mut","value":"pub fn raw_entry_mut(&mut Self) -> RawEntryBuilderMut<, K, V, S, A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a raw entry builder for the HashMap.","sig":null,"attributes":[{"value":"/ Creates a raw entry builder for the HashMap.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":161050,"byte_end":161098,"line_start":1865,"line_end":1865,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":161103,"byte_end":161106,"line_start":1866,"line_end":1866,"column_start":5,"column_end":8}},{"value":"/ Raw entries provide the lowest level of control for searching and","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":161111,"byte_end":161180,"line_start":1867,"line_end":1867,"column_start":5,"column_end":74}},{"value":"/ manipulating a map. They must be manually initialized with a hash and","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":161185,"byte_end":161258,"line_start":1868,"line_end":1868,"column_start":5,"column_end":78}},{"value":"/ then manually searched. After this, insertions into a vacant entry","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":161263,"byte_end":161333,"line_start":1869,"line_end":1869,"column_start":5,"column_end":75}},{"value":"/ still require an owned key to be provided.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":161338,"byte_end":161384,"line_start":1870,"line_end":1870,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":161389,"byte_end":161392,"line_start":1871,"line_end":1871,"column_start":5,"column_end":8}},{"value":"/ Raw entries are useful for such exotic situations as:","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":161397,"byte_end":161454,"line_start":1872,"line_end":1872,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":161459,"byte_end":161462,"line_start":1873,"line_end":1873,"column_start":5,"column_end":8}},{"value":"/ * Hash memoization","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":161467,"byte_end":161489,"line_start":1874,"line_end":1874,"column_start":5,"column_end":27}},{"value":"/ * Deferring the creation of an owned key until it is known to be required","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":161494,"byte_end":161571,"line_start":1875,"line_end":1875,"column_start":5,"column_end":82}},{"value":"/ * Using a search key that doesn't work with the Borrow trait","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":161576,"byte_end":161640,"line_start":1876,"line_end":1876,"column_start":5,"column_end":69}},{"value":"/ * Using custom comparison logic without newtype wrappers","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":161645,"byte_end":161705,"line_start":1877,"line_end":1877,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":161710,"byte_end":161713,"line_start":1878,"line_end":1878,"column_start":5,"column_end":8}},{"value":"/ Because raw entries provide much more low-level control, it's much easier","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":161718,"byte_end":161795,"line_start":1879,"line_end":1879,"column_start":5,"column_end":82}},{"value":"/ to put the HashMap into an inconsistent state which, while memory-safe,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":161800,"byte_end":161875,"line_start":1880,"line_end":1880,"column_start":5,"column_end":80}},{"value":"/ will cause the map to produce seemingly random results. Higher-level and","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":161880,"byte_end":161956,"line_start":1881,"line_end":1881,"column_start":5,"column_end":81}},{"value":"/ more foolproof APIs like `entry` should be preferred when possible.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":161961,"byte_end":162032,"line_start":1882,"line_end":1882,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":162037,"byte_end":162040,"line_start":1883,"line_end":1883,"column_start":5,"column_end":8}},{"value":"/ In particular, the hash used to initialized the raw entry must still be","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":162045,"byte_end":162120,"line_start":1884,"line_end":1884,"column_start":5,"column_end":80}},{"value":"/ consistent with the hash of the key that is ultimately stored in the entry.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":162125,"byte_end":162204,"line_start":1885,"line_end":1885,"column_start":5,"column_end":84}},{"value":"/ This is because implementations of HashMap may need to recompute hashes","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":162209,"byte_end":162284,"line_start":1886,"line_end":1886,"column_start":5,"column_end":80}},{"value":"/ when resizing, at which point only the keys are available.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":162289,"byte_end":162351,"line_start":1887,"line_end":1887,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":162356,"byte_end":162359,"line_start":1888,"line_end":1888,"column_start":5,"column_end":8}},{"value":"/ Raw entries give mutable access to the keys. This must not be used","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":162364,"byte_end":162434,"line_start":1889,"line_end":1889,"column_start":5,"column_end":75}},{"value":"/ to modify how the key would compare or hash, as the map will not re-evaluate","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":162439,"byte_end":162519,"line_start":1890,"line_end":1890,"column_start":5,"column_end":85}},{"value":"/ where the key should go, meaning the keys may become \"lost\" if their","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":162524,"byte_end":162596,"line_start":1891,"line_end":1891,"column_start":5,"column_end":77}},{"value":"/ location does not reflect their state. For instance, if you change a key","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":162601,"byte_end":162677,"line_start":1892,"line_end":1892,"column_start":5,"column_end":81}},{"value":"/ so that the map now contains keys which compare equal, search may start","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":162682,"byte_end":162757,"line_start":1893,"line_end":1893,"column_start":5,"column_end":80}},{"value":"/ acting erratically, with two keys randomly masking each other. Implementations","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":162762,"byte_end":162844,"line_start":1894,"line_end":1894,"column_start":5,"column_end":87}},{"value":"/ are free to assume this doesn't happen (within the limits of memory-safety).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":162849,"byte_end":162929,"line_start":1895,"line_end":1895,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":162934,"byte_end":162937,"line_start":1896,"line_end":1896,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":162942,"byte_end":162956,"line_start":1897,"line_end":1897,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":162961,"byte_end":162964,"line_start":1898,"line_end":1898,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":162969,"byte_end":162976,"line_start":1899,"line_end":1899,"column_start":5,"column_end":12}},{"value":"/ use core::hash::{BuildHasher, Hash};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":162981,"byte_end":163021,"line_start":1900,"line_end":1900,"column_start":5,"column_end":45}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":163026,"byte_end":163078,"line_start":1901,"line_end":1901,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":163083,"byte_end":163086,"line_start":1902,"line_end":1902,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":163091,"byte_end":163124,"line_start":1903,"line_end":1903,"column_start":5,"column_end":38}},{"value":"/ map.extend([(\"a\", 100), (\"b\", 200), (\"c\", 300)]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":163129,"byte_end":163182,"line_start":1904,"line_end":1904,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":163187,"byte_end":163190,"line_start":1905,"line_end":1905,"column_start":5,"column_end":8}},{"value":"/ fn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":163195,"byte_end":163284,"line_start":1906,"line_end":1906,"column_start":5,"column_end":94}},{"value":"/     use core::hash::Hasher;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":163289,"byte_end":163320,"line_start":1907,"line_end":1907,"column_start":5,"column_end":36}},{"value":"/     let mut state = hash_builder.build_hasher();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":163325,"byte_end":163377,"line_start":1908,"line_end":1908,"column_start":5,"column_end":57}},{"value":"/     key.hash(&mut state);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":163382,"byte_end":163411,"line_start":1909,"line_end":1909,"column_start":5,"column_end":34}},{"value":"/     state.finish()","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":163416,"byte_end":163438,"line_start":1910,"line_end":1910,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":163443,"byte_end":163448,"line_start":1911,"line_end":1911,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":163453,"byte_end":163456,"line_start":1912,"line_end":1912,"column_start":5,"column_end":8}},{"value":"/ // Existing key (insert and update)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":163461,"byte_end":163500,"line_start":1913,"line_end":1913,"column_start":5,"column_end":44}},{"value":"/ match map.raw_entry_mut().from_key(&\"a\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":163505,"byte_end":163551,"line_start":1914,"line_end":1914,"column_start":5,"column_end":51}},{"value":"/     RawEntryMut::Vacant(_) => unreachable!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":163556,"byte_end":163605,"line_start":1915,"line_end":1915,"column_start":5,"column_end":54}},{"value":"/     RawEntryMut::Occupied(mut view) => {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":163610,"byte_end":163654,"line_start":1916,"line_end":1916,"column_start":5,"column_end":49}},{"value":"/         assert_eq!(view.get(), &100);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":163659,"byte_end":163700,"line_start":1917,"line_end":1917,"column_start":5,"column_end":46}},{"value":"/         let v = view.get_mut();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":163705,"byte_end":163740,"line_start":1918,"line_end":1918,"column_start":5,"column_end":40}},{"value":"/         let new_v = (*v) * 10;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":163745,"byte_end":163779,"line_start":1919,"line_end":1919,"column_start":5,"column_end":39}},{"value":"/         *v = new_v;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":163784,"byte_end":163807,"line_start":1920,"line_end":1920,"column_start":5,"column_end":28}},{"value":"/         assert_eq!(view.insert(1111), 1000);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":163812,"byte_end":163860,"line_start":1921,"line_end":1921,"column_start":5,"column_end":53}},{"value":"/     }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":163865,"byte_end":163874,"line_start":1922,"line_end":1922,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":163879,"byte_end":163884,"line_start":1923,"line_end":1923,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":163889,"byte_end":163892,"line_start":1924,"line_end":1924,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[&\"a\"], 1111);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":163897,"byte_end":163929,"line_start":1925,"line_end":1925,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":163934,"byte_end":163963,"line_start":1926,"line_end":1926,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":163968,"byte_end":163971,"line_start":1927,"line_end":1927,"column_start":5,"column_end":8}},{"value":"/ // Existing key (take)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":163976,"byte_end":164002,"line_start":1928,"line_end":1928,"column_start":5,"column_end":31}},{"value":"/ let hash = compute_hash(map.hasher(), &\"c\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":164007,"byte_end":164055,"line_start":1929,"line_end":1929,"column_start":5,"column_end":53}},{"value":"/ match map.raw_entry_mut().from_key_hashed_nocheck(hash, &\"c\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":164060,"byte_end":164127,"line_start":1930,"line_end":1930,"column_start":5,"column_end":72}},{"value":"/     RawEntryMut::Vacant(_) => unreachable!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":164132,"byte_end":164181,"line_start":1931,"line_end":1931,"column_start":5,"column_end":54}},{"value":"/     RawEntryMut::Occupied(view) => {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":164186,"byte_end":164226,"line_start":1932,"line_end":1932,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(view.remove_entry(), (\"c\", 300));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":164231,"byte_end":164287,"line_start":1933,"line_end":1933,"column_start":5,"column_end":61}},{"value":"/     }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":164292,"byte_end":164301,"line_start":1934,"line_end":1934,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":164306,"byte_end":164311,"line_start":1935,"line_end":1935,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map.raw_entry().from_key(&\"c\"), None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":164316,"byte_end":164369,"line_start":1936,"line_end":1936,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(map.len(), 2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":164374,"byte_end":164403,"line_start":1937,"line_end":1937,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":164408,"byte_end":164411,"line_start":1938,"line_end":1938,"column_start":5,"column_end":8}},{"value":"/ // Nonexistent key (insert and update)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":164416,"byte_end":164458,"line_start":1939,"line_end":1939,"column_start":5,"column_end":47}},{"value":"/ let key = \"d\";","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":164463,"byte_end":164481,"line_start":1940,"line_end":1940,"column_start":5,"column_end":23}},{"value":"/ let hash = compute_hash(map.hasher(), &key);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":164486,"byte_end":164534,"line_start":1941,"line_end":1941,"column_start":5,"column_end":53}},{"value":"/ match map.raw_entry_mut().from_hash(hash, |q| *q == key) {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":164539,"byte_end":164601,"line_start":1942,"line_end":1942,"column_start":5,"column_end":67}},{"value":"/     RawEntryMut::Occupied(_) => unreachable!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":164606,"byte_end":164657,"line_start":1943,"line_end":1943,"column_start":5,"column_end":56}},{"value":"/     RawEntryMut::Vacant(view) => {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":164662,"byte_end":164700,"line_start":1944,"line_end":1944,"column_start":5,"column_end":43}},{"value":"/         let (k, value) = view.insert(\"d\", 4000);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":164705,"byte_end":164757,"line_start":1945,"line_end":1945,"column_start":5,"column_end":57}},{"value":"/         assert_eq!((*k, *value), (\"d\", 4000));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":164762,"byte_end":164812,"line_start":1946,"line_end":1946,"column_start":5,"column_end":55}},{"value":"/         *value = 40000;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":164817,"byte_end":164844,"line_start":1947,"line_end":1947,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":164849,"byte_end":164858,"line_start":1948,"line_end":1948,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":164863,"byte_end":164868,"line_start":1949,"line_end":1949,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map[&\"d\"], 40000);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":164873,"byte_end":164906,"line_start":1950,"line_end":1950,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":164911,"byte_end":164940,"line_start":1951,"line_end":1951,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":164945,"byte_end":164948,"line_start":1952,"line_end":1952,"column_start":5,"column_end":8}},{"value":"/ match map.raw_entry_mut().from_hash(hash, |q| *q == key) {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":164953,"byte_end":165015,"line_start":1953,"line_end":1953,"column_start":5,"column_end":67}},{"value":"/     RawEntryMut::Vacant(_) => unreachable!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":165020,"byte_end":165069,"line_start":1954,"line_end":1954,"column_start":5,"column_end":54}},{"value":"/     RawEntryMut::Occupied(view) => {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":165074,"byte_end":165114,"line_start":1955,"line_end":1955,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(view.remove_entry(), (\"d\", 40000));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":165119,"byte_end":165177,"line_start":1956,"line_end":1956,"column_start":5,"column_end":63}},{"value":"/     }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":165182,"byte_end":165191,"line_start":1957,"line_end":1957,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":165196,"byte_end":165201,"line_start":1958,"line_end":1958,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map.get(&\"d\"), None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":165206,"byte_end":165242,"line_start":1959,"line_end":1959,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(map.len(), 2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":165247,"byte_end":165276,"line_start":1960,"line_end":1960,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":165281,"byte_end":165288,"line_start":1961,"line_end":1961,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":165329,"byte_end":165335,"line_start":1962,"line_end":1962,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":167205,"byte_end":167214,"line_start":2012,"line_end":2012,"column_start":12,"column_end":21},"name":"raw_entry","qualname":"<HashMap<K, V, S, A>>::raw_entry","value":"pub fn raw_entry(&Self) -> RawEntryBuilder<, K, V, S, A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a raw immutable entry builder for the HashMap.","sig":null,"attributes":[{"value":"/ Creates a raw immutable entry builder for the HashMap.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":165466,"byte_end":165524,"line_start":1967,"line_end":1967,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":165529,"byte_end":165532,"line_start":1968,"line_end":1968,"column_start":5,"column_end":8}},{"value":"/ Raw entries provide the lowest level of control for searching and","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":165537,"byte_end":165606,"line_start":1969,"line_end":1969,"column_start":5,"column_end":74}},{"value":"/ manipulating a map. They must be manually initialized with a hash and","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":165611,"byte_end":165684,"line_start":1970,"line_end":1970,"column_start":5,"column_end":78}},{"value":"/ then manually searched.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":165689,"byte_end":165716,"line_start":1971,"line_end":1971,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":165721,"byte_end":165724,"line_start":1972,"line_end":1972,"column_start":5,"column_end":8}},{"value":"/ This is useful for","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":165729,"byte_end":165751,"line_start":1973,"line_end":1973,"column_start":5,"column_end":27}},{"value":"/ * Hash memoization","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":165756,"byte_end":165778,"line_start":1974,"line_end":1974,"column_start":5,"column_end":27}},{"value":"/ * Using a search key that doesn't work with the Borrow trait","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":165783,"byte_end":165847,"line_start":1975,"line_end":1975,"column_start":5,"column_end":69}},{"value":"/ * Using custom comparison logic without newtype wrappers","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":165852,"byte_end":165912,"line_start":1976,"line_end":1976,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":165917,"byte_end":165920,"line_start":1977,"line_end":1977,"column_start":5,"column_end":8}},{"value":"/ Unless you are in such a situation, higher-level and more foolproof APIs like","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":165925,"byte_end":166006,"line_start":1978,"line_end":1978,"column_start":5,"column_end":86}},{"value":"/ `get` should be preferred.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":166011,"byte_end":166041,"line_start":1979,"line_end":1979,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":166046,"byte_end":166049,"line_start":1980,"line_end":1980,"column_start":5,"column_end":8}},{"value":"/ Immutable raw entries have very limited use; you might instead want `raw_entry_mut`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":166054,"byte_end":166142,"line_start":1981,"line_end":1981,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":166147,"byte_end":166150,"line_start":1982,"line_end":1982,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":166155,"byte_end":166169,"line_start":1983,"line_end":1983,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":166174,"byte_end":166177,"line_start":1984,"line_end":1984,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":166182,"byte_end":166189,"line_start":1985,"line_end":1985,"column_start":5,"column_end":12}},{"value":"/ use core::hash::{BuildHasher, Hash};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":166194,"byte_end":166234,"line_start":1986,"line_end":1986,"column_start":5,"column_end":45}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":166239,"byte_end":166266,"line_start":1987,"line_end":1987,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":166271,"byte_end":166274,"line_start":1988,"line_end":1988,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":166279,"byte_end":166312,"line_start":1989,"line_end":1989,"column_start":5,"column_end":38}},{"value":"/ map.extend([(\"a\", 100), (\"b\", 200), (\"c\", 300)]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":166317,"byte_end":166370,"line_start":1990,"line_end":1990,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":166375,"byte_end":166378,"line_start":1991,"line_end":1991,"column_start":5,"column_end":8}},{"value":"/ fn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":166383,"byte_end":166472,"line_start":1992,"line_end":1992,"column_start":5,"column_end":94}},{"value":"/     use core::hash::Hasher;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":166477,"byte_end":166508,"line_start":1993,"line_end":1993,"column_start":5,"column_end":36}},{"value":"/     let mut state = hash_builder.build_hasher();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":166513,"byte_end":166565,"line_start":1994,"line_end":1994,"column_start":5,"column_end":57}},{"value":"/     key.hash(&mut state);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":166570,"byte_end":166599,"line_start":1995,"line_end":1995,"column_start":5,"column_end":34}},{"value":"/     state.finish()","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":166604,"byte_end":166626,"line_start":1996,"line_end":1996,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":166631,"byte_end":166636,"line_start":1997,"line_end":1997,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":166641,"byte_end":166644,"line_start":1998,"line_end":1998,"column_start":5,"column_end":8}},{"value":"/ for k in [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"] {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":166649,"byte_end":166694,"line_start":1999,"line_end":1999,"column_start":5,"column_end":50}},{"value":"/     let hash = compute_hash(map.hasher(), k);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":166699,"byte_end":166748,"line_start":2000,"line_end":2000,"column_start":5,"column_end":54}},{"value":"/     let v = map.get(&k).cloned();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":166753,"byte_end":166790,"line_start":2001,"line_end":2001,"column_start":5,"column_end":42}},{"value":"/     let kv = v.as_ref().map(|v| (&k, v));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":166795,"byte_end":166840,"line_start":2002,"line_end":2002,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":166845,"byte_end":166848,"line_start":2003,"line_end":2003,"column_start":5,"column_end":8}},{"value":"/     println!(\"Key: {} and value: {:?}\", k, v);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":166853,"byte_end":166903,"line_start":2004,"line_end":2004,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":166908,"byte_end":166911,"line_start":2005,"line_end":2005,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(map.raw_entry().from_key(&k), kv);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":166916,"byte_end":166969,"line_start":2006,"line_end":2006,"column_start":5,"column_end":58}},{"value":"/     assert_eq!(map.raw_entry().from_hash(hash, |q| *q == k), kv);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":166974,"byte_end":167043,"line_start":2007,"line_end":2007,"column_start":5,"column_end":74}},{"value":"/     assert_eq!(map.raw_entry().from_key_hashed_nocheck(hash, &k), kv);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":167048,"byte_end":167122,"line_start":2008,"line_end":2008,"column_start":5,"column_end":79}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":167127,"byte_end":167132,"line_start":2009,"line_end":2009,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":167137,"byte_end":167144,"line_start":2010,"line_end":2010,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":167185,"byte_end":167191,"line_start":2011,"line_end":2011,"column_start":41,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":770},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":173478,"byte_end":173482,"line_start":2221,"line_end":2221,"column_start":12,"column_end":16},"name":"Iter","qualname":"::map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":774},{"krate":0,"index":775}],"decl_id":null,"docs":" An iterator over the entries of a `HashMap` in arbitrary order.\n The iterator element type is `(&'a K, &'a V)`.","sig":null,"attributes":[{"value":"/ An iterator over the entries of a `HashMap` in arbitrary order.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":172574,"byte_end":172641,"line_start":2193,"line_end":2193,"column_start":1,"column_end":68}},{"value":"/ The iterator element type is `(&'a K, &'a V)`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":172642,"byte_end":172692,"line_start":2194,"line_end":2194,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":172693,"byte_end":172696,"line_start":2195,"line_end":2195,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`HashMap`]. See its","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":172697,"byte_end":172772,"line_start":2196,"line_end":2196,"column_start":1,"column_end":76}},{"value":"/ documentation for more.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":172773,"byte_end":172800,"line_start":2197,"line_end":2197,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":172801,"byte_end":172804,"line_start":2198,"line_end":2198,"column_start":1,"column_end":4}},{"value":"/ [`iter`]: struct.HashMap.html#method.iter","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":172805,"byte_end":172850,"line_start":2199,"line_end":2199,"column_start":1,"column_end":46}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":172851,"byte_end":172887,"line_start":2200,"line_end":2200,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":172888,"byte_end":172891,"line_start":2201,"line_end":2201,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":172892,"byte_end":172906,"line_start":2202,"line_end":2202,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":172907,"byte_end":172910,"line_start":2203,"line_end":2203,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":172911,"byte_end":172918,"line_start":2204,"line_end":2204,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":172919,"byte_end":172946,"line_start":2205,"line_end":2205,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":172947,"byte_end":172950,"line_start":2206,"line_end":2206,"column_start":1,"column_end":4}},{"value":"/ let map: HashMap<_, _> = [(1, \"a\"), (2, \"b\"), (3, \"c\")].into();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":172951,"byte_end":173018,"line_start":2207,"line_end":2207,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":173019,"byte_end":173022,"line_start":2208,"line_end":2208,"column_start":1,"column_end":4}},{"value":"/ let mut iter = map.iter();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":173023,"byte_end":173053,"line_start":2209,"line_end":2209,"column_start":1,"column_end":31}},{"value":"/ let mut vec = vec![iter.next(), iter.next(), iter.next()];","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":173054,"byte_end":173116,"line_start":2210,"line_end":2210,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":173117,"byte_end":173120,"line_start":2211,"line_end":2211,"column_start":1,"column_end":4}},{"value":"/ // The `Iter` iterator produces items in arbitrary order, so the","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":173121,"byte_end":173189,"line_start":2212,"line_end":2212,"column_start":1,"column_end":69}},{"value":"/ // items must be sorted to test them against a sorted array.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":173190,"byte_end":173254,"line_start":2213,"line_end":2213,"column_start":1,"column_end":65}},{"value":"/ vec.sort_unstable();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":173255,"byte_end":173279,"line_start":2214,"line_end":2214,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(vec, [Some((&1, &\"a\")), Some((&2, &\"b\")), Some((&3, &\"c\"))]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":173280,"byte_end":173356,"line_start":2215,"line_end":2215,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":173357,"byte_end":173360,"line_start":2216,"line_end":2216,"column_start":1,"column_end":4}},{"value":"/ // It is fused iterator","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":173361,"byte_end":173388,"line_start":2217,"line_end":2217,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(iter.next(), None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":173389,"byte_end":173423,"line_start":2218,"line_end":2218,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(iter.next(), None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":173424,"byte_end":173458,"line_start":2219,"line_end":2219,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":173459,"byte_end":173466,"line_start":2220,"line_end":2220,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":784},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":174930,"byte_end":174937,"line_start":2270,"line_end":2270,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":788},{"krate":0,"index":789}],"decl_id":null,"docs":" A mutable iterator over the entries of a `HashMap` in arbitrary order.\n The iterator element type is `(&'a K, &'a mut V)`.","sig":null,"attributes":[{"value":"/ A mutable iterator over the entries of a `HashMap` in arbitrary order.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":174028,"byte_end":174102,"line_start":2243,"line_end":2243,"column_start":1,"column_end":75}},{"value":"/ The iterator element type is `(&'a K, &'a mut V)`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":174103,"byte_end":174157,"line_start":2244,"line_end":2244,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":174158,"byte_end":174161,"line_start":2245,"line_end":2245,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter_mut`] method on [`HashMap`]. See its","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":174162,"byte_end":174241,"line_start":2246,"line_end":2246,"column_start":1,"column_end":80}},{"value":"/ documentation for more.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":174242,"byte_end":174269,"line_start":2247,"line_end":2247,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":174270,"byte_end":174273,"line_start":2248,"line_end":2248,"column_start":1,"column_end":4}},{"value":"/ [`iter_mut`]: struct.HashMap.html#method.iter_mut","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":174274,"byte_end":174327,"line_start":2249,"line_end":2249,"column_start":1,"column_end":54}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":174328,"byte_end":174364,"line_start":2250,"line_end":2250,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":174365,"byte_end":174368,"line_start":2251,"line_end":2251,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":174369,"byte_end":174383,"line_start":2252,"line_end":2252,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":174384,"byte_end":174387,"line_start":2253,"line_end":2253,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":174388,"byte_end":174395,"line_start":2254,"line_end":2254,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":174396,"byte_end":174423,"line_start":2255,"line_end":2255,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":174424,"byte_end":174427,"line_start":2256,"line_end":2256,"column_start":1,"column_end":4}},{"value":"/ let mut map: HashMap<_, _> = [(1, \"One\".to_owned()), (2, \"Two\".into())].into();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":174428,"byte_end":174511,"line_start":2257,"line_end":2257,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":174512,"byte_end":174515,"line_start":2258,"line_end":2258,"column_start":1,"column_end":4}},{"value":"/ let mut iter = map.iter_mut();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":174516,"byte_end":174550,"line_start":2259,"line_end":2259,"column_start":1,"column_end":35}},{"value":"/ iter.next().map(|(_, v)| v.push_str(\" Mississippi\"));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":174551,"byte_end":174608,"line_start":2260,"line_end":2260,"column_start":1,"column_end":58}},{"value":"/ iter.next().map(|(_, v)| v.push_str(\" Mississippi\"));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":174609,"byte_end":174666,"line_start":2261,"line_end":2261,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":174667,"byte_end":174670,"line_start":2262,"line_end":2262,"column_start":1,"column_end":4}},{"value":"/ // It is fused iterator","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":174671,"byte_end":174698,"line_start":2263,"line_end":2263,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(iter.next(), None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":174699,"byte_end":174733,"line_start":2264,"line_end":2264,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(iter.next(), None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":174734,"byte_end":174768,"line_start":2265,"line_end":2265,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":174769,"byte_end":174772,"line_start":2266,"line_end":2266,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(map.get(&1).unwrap(), &\"One Mississippi\".to_owned());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":174773,"byte_end":174841,"line_start":2267,"line_end":2267,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(map.get(&2).unwrap(), &\"Two Mississippi\".to_owned());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":174842,"byte_end":174910,"line_start":2268,"line_end":2268,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":174911,"byte_end":174918,"line_start":2269,"line_end":2269,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":797},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":176718,"byte_end":176726,"line_start":2322,"line_end":2322,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":801}],"decl_id":null,"docs":" An owning iterator over the entries of a `HashMap` in arbitrary order.\n The iterator element type is `(K, V)`.","sig":null,"attributes":[{"value":"/ An owning iterator over the entries of a `HashMap` in arbitrary order.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":175620,"byte_end":175694,"line_start":2292,"line_end":2292,"column_start":1,"column_end":75}},{"value":"/ The iterator element type is `(K, V)`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":175695,"byte_end":175737,"line_start":2293,"line_end":2293,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":175738,"byte_end":175741,"line_start":2294,"line_end":2294,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_iter`] method on [`HashMap`]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":175742,"byte_end":175813,"line_start":2295,"line_end":2295,"column_start":1,"column_end":72}},{"value":"/ (provided by the [`IntoIterator`] trait). See its documentation for more.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":175814,"byte_end":175891,"line_start":2296,"line_end":2296,"column_start":1,"column_end":78}},{"value":"/ The map cannot be used after calling that method.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":175892,"byte_end":175945,"line_start":2297,"line_end":2297,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":175946,"byte_end":175949,"line_start":2298,"line_end":2298,"column_start":1,"column_end":4}},{"value":"/ [`into_iter`]: struct.HashMap.html#method.into_iter","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":175950,"byte_end":176005,"line_start":2299,"line_end":2299,"column_start":1,"column_end":56}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":176006,"byte_end":176042,"line_start":2300,"line_end":2300,"column_start":1,"column_end":37}},{"value":"/ [`IntoIterator`]: https://doc.rust-lang.org/core/iter/trait.IntoIterator.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":176043,"byte_end":176124,"line_start":2301,"line_end":2301,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":176125,"byte_end":176128,"line_start":2302,"line_end":2302,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":176129,"byte_end":176143,"line_start":2303,"line_end":2303,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":176144,"byte_end":176147,"line_start":2304,"line_end":2304,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":176148,"byte_end":176155,"line_start":2305,"line_end":2305,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":176156,"byte_end":176183,"line_start":2306,"line_end":2306,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":176184,"byte_end":176187,"line_start":2307,"line_end":2307,"column_start":1,"column_end":4}},{"value":"/ let map: HashMap<_, _> = [(1, \"a\"), (2, \"b\"), (3, \"c\")].into();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":176188,"byte_end":176255,"line_start":2308,"line_end":2308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":176256,"byte_end":176259,"line_start":2309,"line_end":2309,"column_start":1,"column_end":4}},{"value":"/ let mut iter = map.into_iter();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":176260,"byte_end":176295,"line_start":2310,"line_end":2310,"column_start":1,"column_end":36}},{"value":"/ let mut vec = vec![iter.next(), iter.next(), iter.next()];","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":176296,"byte_end":176358,"line_start":2311,"line_end":2311,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":176359,"byte_end":176362,"line_start":2312,"line_end":2312,"column_start":1,"column_end":4}},{"value":"/ // The `IntoIter` iterator produces items in arbitrary order, so the","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":176363,"byte_end":176435,"line_start":2313,"line_end":2313,"column_start":1,"column_end":73}},{"value":"/ // items must be sorted to test them against a sorted array.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":176436,"byte_end":176500,"line_start":2314,"line_end":2314,"column_start":1,"column_end":65}},{"value":"/ vec.sort_unstable();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":176501,"byte_end":176525,"line_start":2315,"line_end":2315,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(vec, [Some((1, \"a\")), Some((2, \"b\")), Some((3, \"c\"))]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":176526,"byte_end":176596,"line_start":2316,"line_end":2316,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":176597,"byte_end":176600,"line_start":2317,"line_end":2317,"column_start":1,"column_end":4}},{"value":"/ // It is fused iterator","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":176601,"byte_end":176628,"line_start":2318,"line_end":2318,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(iter.next(), None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":176629,"byte_end":176663,"line_start":2319,"line_end":2319,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(iter.next(), None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":176664,"byte_end":176698,"line_start":2320,"line_end":2320,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":176699,"byte_end":176706,"line_start":2321,"line_end":2321,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":807},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":178072,"byte_end":178080,"line_start":2366,"line_end":2366,"column_start":12,"column_end":20},"name":"IntoKeys","qualname":"::map::IntoKeys","value":"IntoKeys {  }","parent":null,"children":[{"krate":0,"index":811}],"decl_id":null,"docs":" An owning iterator over the keys of a `HashMap` in arbitrary order.\n The iterator element type is `K`.","sig":null,"attributes":[{"value":"/ An owning iterator over the keys of a `HashMap` in arbitrary order.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":177128,"byte_end":177199,"line_start":2337,"line_end":2337,"column_start":1,"column_end":72}},{"value":"/ The iterator element type is `K`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":177200,"byte_end":177237,"line_start":2338,"line_end":2338,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":177238,"byte_end":177241,"line_start":2339,"line_end":2339,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_keys`] method on [`HashMap`].","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":177242,"byte_end":177314,"line_start":2340,"line_end":2340,"column_start":1,"column_end":73}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":177315,"byte_end":177350,"line_start":2341,"line_end":2341,"column_start":1,"column_end":36}},{"value":"/ The map cannot be used after calling that method.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":177351,"byte_end":177404,"line_start":2342,"line_end":2342,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":177405,"byte_end":177408,"line_start":2343,"line_end":2343,"column_start":1,"column_end":4}},{"value":"/ [`into_keys`]: struct.HashMap.html#method.into_keys","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":177409,"byte_end":177464,"line_start":2344,"line_end":2344,"column_start":1,"column_end":56}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":177465,"byte_end":177501,"line_start":2345,"line_end":2345,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":177502,"byte_end":177505,"line_start":2346,"line_end":2346,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":177506,"byte_end":177520,"line_start":2347,"line_end":2347,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":177521,"byte_end":177524,"line_start":2348,"line_end":2348,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":177525,"byte_end":177532,"line_start":2349,"line_end":2349,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":177533,"byte_end":177560,"line_start":2350,"line_end":2350,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":177561,"byte_end":177564,"line_start":2351,"line_end":2351,"column_start":1,"column_end":4}},{"value":"/ let map: HashMap<_, _> = [(1, \"a\"), (2, \"b\"), (3, \"c\")].into();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":177565,"byte_end":177632,"line_start":2352,"line_end":2352,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":177633,"byte_end":177636,"line_start":2353,"line_end":2353,"column_start":1,"column_end":4}},{"value":"/ let mut keys = map.into_keys();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":177637,"byte_end":177672,"line_start":2354,"line_end":2354,"column_start":1,"column_end":36}},{"value":"/ let mut vec = vec![keys.next(), keys.next(), keys.next()];","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":177673,"byte_end":177735,"line_start":2355,"line_end":2355,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":177736,"byte_end":177739,"line_start":2356,"line_end":2356,"column_start":1,"column_end":4}},{"value":"/ // The `IntoKeys` iterator produces keys in arbitrary order, so the","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":177740,"byte_end":177811,"line_start":2357,"line_end":2357,"column_start":1,"column_end":72}},{"value":"/ // keys must be sorted to test them against a sorted array.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":177812,"byte_end":177875,"line_start":2358,"line_end":2358,"column_start":1,"column_end":64}},{"value":"/ vec.sort_unstable();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":177876,"byte_end":177900,"line_start":2359,"line_end":2359,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(vec, [Some(1), Some(2), Some(3)]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":177901,"byte_end":177950,"line_start":2360,"line_end":2360,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":177951,"byte_end":177954,"line_start":2361,"line_end":2361,"column_start":1,"column_end":4}},{"value":"/ // It is fused iterator","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":177955,"byte_end":177982,"line_start":2362,"line_end":2362,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(keys.next(), None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":177983,"byte_end":178017,"line_start":2363,"line_end":2363,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(keys.next(), None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":178018,"byte_end":178052,"line_start":2364,"line_end":2364,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":178053,"byte_end":178060,"line_start":2365,"line_end":2365,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":835},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":179899,"byte_end":179909,"line_start":2428,"line_end":2428,"column_start":12,"column_end":22},"name":"IntoValues","qualname":"::map::IntoValues","value":"IntoValues {  }","parent":null,"children":[{"krate":0,"index":839}],"decl_id":null,"docs":" An owning iterator over the values of a `HashMap` in arbitrary order.\n The iterator element type is `V`.","sig":null,"attributes":[{"value":"/ An owning iterator over the values of a `HashMap` in arbitrary order.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":178925,"byte_end":178998,"line_start":2400,"line_end":2400,"column_start":1,"column_end":74}},{"value":"/ The iterator element type is `V`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":178999,"byte_end":179036,"line_start":2401,"line_end":2401,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":179037,"byte_end":179040,"line_start":2402,"line_end":2402,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_values`] method on [`HashMap`].","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":179041,"byte_end":179115,"line_start":2403,"line_end":2403,"column_start":1,"column_end":75}},{"value":"/ See its documentation for more. The map cannot be used after calling that method.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":179116,"byte_end":179201,"line_start":2404,"line_end":2404,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":179202,"byte_end":179205,"line_start":2405,"line_end":2405,"column_start":1,"column_end":4}},{"value":"/ [`into_values`]: struct.HashMap.html#method.into_values","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":179206,"byte_end":179265,"line_start":2406,"line_end":2406,"column_start":1,"column_end":60}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":179266,"byte_end":179302,"line_start":2407,"line_end":2407,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":179303,"byte_end":179306,"line_start":2408,"line_end":2408,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":179307,"byte_end":179321,"line_start":2409,"line_end":2409,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":179322,"byte_end":179325,"line_start":2410,"line_end":2410,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":179326,"byte_end":179333,"line_start":2411,"line_end":2411,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":179334,"byte_end":179361,"line_start":2412,"line_end":2412,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":179362,"byte_end":179365,"line_start":2413,"line_end":2413,"column_start":1,"column_end":4}},{"value":"/ let map: HashMap<_, _> = [(1, \"a\"), (2, \"b\"), (3, \"c\")].into();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":179366,"byte_end":179433,"line_start":2414,"line_end":2414,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":179434,"byte_end":179437,"line_start":2415,"line_end":2415,"column_start":1,"column_end":4}},{"value":"/ let mut values = map.into_values();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":179438,"byte_end":179477,"line_start":2416,"line_end":2416,"column_start":1,"column_end":40}},{"value":"/ let mut vec = vec![values.next(), values.next(), values.next()];","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":179478,"byte_end":179546,"line_start":2417,"line_end":2417,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":179547,"byte_end":179550,"line_start":2418,"line_end":2418,"column_start":1,"column_end":4}},{"value":"/ // The `IntoValues` iterator produces values in arbitrary order, so","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":179551,"byte_end":179622,"line_start":2419,"line_end":2419,"column_start":1,"column_end":72}},{"value":"/ // the values must be sorted to test them against a sorted array.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":179623,"byte_end":179692,"line_start":2420,"line_end":2420,"column_start":1,"column_end":70}},{"value":"/ vec.sort_unstable();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":179693,"byte_end":179717,"line_start":2421,"line_end":2421,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(vec, [Some(\"a\"), Some(\"b\"), Some(\"c\")]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":179718,"byte_end":179773,"line_start":2422,"line_end":2422,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":179774,"byte_end":179777,"line_start":2423,"line_end":2423,"column_start":1,"column_end":4}},{"value":"/ // It is fused iterator","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":179778,"byte_end":179805,"line_start":2424,"line_end":2424,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(values.next(), None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":179806,"byte_end":179842,"line_start":2425,"line_end":2425,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(values.next(), None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":179843,"byte_end":179879,"line_start":2426,"line_end":2426,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":179880,"byte_end":179887,"line_start":2427,"line_end":2427,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":863},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":181621,"byte_end":181625,"line_start":2490,"line_end":2490,"column_start":12,"column_end":16},"name":"Keys","qualname":"::map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":867}],"decl_id":null,"docs":" An iterator over the keys of a `HashMap` in arbitrary order.\n The iterator element type is `&'a K`.","sig":null,"attributes":[{"value":"/ An iterator over the keys of a `HashMap` in arbitrary order.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":180755,"byte_end":180819,"line_start":2462,"line_end":2462,"column_start":1,"column_end":65}},{"value":"/ The iterator element type is `&'a K`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":180820,"byte_end":180861,"line_start":2463,"line_end":2463,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":180862,"byte_end":180865,"line_start":2464,"line_end":2464,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`keys`] method on [`HashMap`]. See its","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":180866,"byte_end":180941,"line_start":2465,"line_end":2465,"column_start":1,"column_end":76}},{"value":"/ documentation for more.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":180942,"byte_end":180969,"line_start":2466,"line_end":2466,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":180970,"byte_end":180973,"line_start":2467,"line_end":2467,"column_start":1,"column_end":4}},{"value":"/ [`keys`]: struct.HashMap.html#method.keys","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":180974,"byte_end":181019,"line_start":2468,"line_end":2468,"column_start":1,"column_end":46}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":181020,"byte_end":181056,"line_start":2469,"line_end":2469,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":181057,"byte_end":181060,"line_start":2470,"line_end":2470,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":181061,"byte_end":181075,"line_start":2471,"line_end":2471,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":181076,"byte_end":181079,"line_start":2472,"line_end":2472,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":181080,"byte_end":181087,"line_start":2473,"line_end":2473,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":181088,"byte_end":181115,"line_start":2474,"line_end":2474,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":181116,"byte_end":181119,"line_start":2475,"line_end":2475,"column_start":1,"column_end":4}},{"value":"/ let map: HashMap<_, _> = [(1, \"a\"), (2, \"b\"), (3, \"c\")].into();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":181120,"byte_end":181187,"line_start":2476,"line_end":2476,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":181188,"byte_end":181191,"line_start":2477,"line_end":2477,"column_start":1,"column_end":4}},{"value":"/ let mut keys = map.keys();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":181192,"byte_end":181222,"line_start":2478,"line_end":2478,"column_start":1,"column_end":31}},{"value":"/ let mut vec = vec![keys.next(), keys.next(), keys.next()];","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":181223,"byte_end":181285,"line_start":2479,"line_end":2479,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":181286,"byte_end":181289,"line_start":2480,"line_end":2480,"column_start":1,"column_end":4}},{"value":"/ // The `Keys` iterator produces keys in arbitrary order, so the","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":181290,"byte_end":181357,"line_start":2481,"line_end":2481,"column_start":1,"column_end":68}},{"value":"/ // keys must be sorted to test them against a sorted array.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":181358,"byte_end":181421,"line_start":2482,"line_end":2482,"column_start":1,"column_end":64}},{"value":"/ vec.sort_unstable();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":181422,"byte_end":181446,"line_start":2483,"line_end":2483,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(vec, [Some(&1), Some(&2), Some(&3)]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":181447,"byte_end":181499,"line_start":2484,"line_end":2484,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":181500,"byte_end":181503,"line_start":2485,"line_end":2485,"column_start":1,"column_end":4}},{"value":"/ // It is fused iterator","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":181504,"byte_end":181531,"line_start":2486,"line_end":2486,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(keys.next(), None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":181532,"byte_end":181566,"line_start":2487,"line_end":2487,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(keys.next(), None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":181567,"byte_end":181601,"line_start":2488,"line_end":2488,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":181602,"byte_end":181609,"line_start":2489,"line_end":2489,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":876},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":182989,"byte_end":182995,"line_start":2538,"line_end":2538,"column_start":12,"column_end":18},"name":"Values","qualname":"::map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":880}],"decl_id":null,"docs":" An iterator over the values of a `HashMap` in arbitrary order.\n The iterator element type is `&'a V`.","sig":null,"attributes":[{"value":"/ An iterator over the values of a `HashMap` in arbitrary order.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":182089,"byte_end":182155,"line_start":2510,"line_end":2510,"column_start":1,"column_end":67}},{"value":"/ The iterator element type is `&'a V`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":182156,"byte_end":182197,"line_start":2511,"line_end":2511,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":182198,"byte_end":182201,"line_start":2512,"line_end":2512,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`values`] method on [`HashMap`]. See its","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":182202,"byte_end":182279,"line_start":2513,"line_end":2513,"column_start":1,"column_end":78}},{"value":"/ documentation for more.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":182280,"byte_end":182307,"line_start":2514,"line_end":2514,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":182308,"byte_end":182311,"line_start":2515,"line_end":2515,"column_start":1,"column_end":4}},{"value":"/ [`values`]: struct.HashMap.html#method.values","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":182312,"byte_end":182361,"line_start":2516,"line_end":2516,"column_start":1,"column_end":50}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":182362,"byte_end":182398,"line_start":2517,"line_end":2517,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":182399,"byte_end":182402,"line_start":2518,"line_end":2518,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":182403,"byte_end":182417,"line_start":2519,"line_end":2519,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":182418,"byte_end":182421,"line_start":2520,"line_end":2520,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":182422,"byte_end":182429,"line_start":2521,"line_end":2521,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":182430,"byte_end":182457,"line_start":2522,"line_end":2522,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":182458,"byte_end":182461,"line_start":2523,"line_end":2523,"column_start":1,"column_end":4}},{"value":"/ let map: HashMap<_, _> = [(1, \"a\"), (2, \"b\"), (3, \"c\")].into();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":182462,"byte_end":182529,"line_start":2524,"line_end":2524,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":182530,"byte_end":182533,"line_start":2525,"line_end":2525,"column_start":1,"column_end":4}},{"value":"/ let mut values = map.values();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":182534,"byte_end":182568,"line_start":2526,"line_end":2526,"column_start":1,"column_end":35}},{"value":"/ let mut vec = vec![values.next(), values.next(), values.next()];","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":182569,"byte_end":182637,"line_start":2527,"line_end":2527,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":182638,"byte_end":182641,"line_start":2528,"line_end":2528,"column_start":1,"column_end":4}},{"value":"/ // The `Values` iterator produces values in arbitrary order, so the","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":182642,"byte_end":182713,"line_start":2529,"line_end":2529,"column_start":1,"column_end":72}},{"value":"/ // values must be sorted to test them against a sorted array.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":182714,"byte_end":182779,"line_start":2530,"line_end":2530,"column_start":1,"column_end":66}},{"value":"/ vec.sort_unstable();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":182780,"byte_end":182804,"line_start":2531,"line_end":2531,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(vec, [Some(&\"a\"), Some(&\"b\"), Some(&\"c\")]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":182805,"byte_end":182863,"line_start":2532,"line_end":2532,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":182864,"byte_end":182867,"line_start":2533,"line_end":2533,"column_start":1,"column_end":4}},{"value":"/ // It is fused iterator","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":182868,"byte_end":182895,"line_start":2534,"line_end":2534,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(values.next(), None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":182896,"byte_end":182932,"line_start":2535,"line_end":2535,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(values.next(), None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":182933,"byte_end":182969,"line_start":2536,"line_end":2536,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":182970,"byte_end":182977,"line_start":2537,"line_end":2537,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":889},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":184408,"byte_end":184413,"line_start":2586,"line_end":2586,"column_start":12,"column_end":17},"name":"Drain","qualname":"::map::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":894}],"decl_id":null,"docs":" A draining iterator over the entries of a `HashMap` in arbitrary\n order. The iterator element type is `(K, V)`.","sig":null,"attributes":[{"value":"/ A draining iterator over the entries of a `HashMap` in arbitrary","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":183465,"byte_end":183533,"line_start":2558,"line_end":2558,"column_start":1,"column_end":69}},{"value":"/ order. The iterator element type is `(K, V)`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":183534,"byte_end":183583,"line_start":2559,"line_end":2559,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":183584,"byte_end":183587,"line_start":2560,"line_end":2560,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain`] method on [`HashMap`]. See its","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":183588,"byte_end":183664,"line_start":2561,"line_end":2561,"column_start":1,"column_end":77}},{"value":"/ documentation for more.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":183665,"byte_end":183692,"line_start":2562,"line_end":2562,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":183693,"byte_end":183696,"line_start":2563,"line_end":2563,"column_start":1,"column_end":4}},{"value":"/ [`drain`]: struct.HashMap.html#method.drain","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":183697,"byte_end":183744,"line_start":2564,"line_end":2564,"column_start":1,"column_end":48}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":183745,"byte_end":183781,"line_start":2565,"line_end":2565,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":183782,"byte_end":183785,"line_start":2566,"line_end":2566,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":183786,"byte_end":183800,"line_start":2567,"line_end":2567,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":183801,"byte_end":183804,"line_start":2568,"line_end":2568,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":183805,"byte_end":183812,"line_start":2569,"line_end":2569,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":183813,"byte_end":183840,"line_start":2570,"line_end":2570,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":183841,"byte_end":183844,"line_start":2571,"line_end":2571,"column_start":1,"column_end":4}},{"value":"/ let mut map: HashMap<_, _> = [(1, \"a\"), (2, \"b\"), (3, \"c\")].into();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":183845,"byte_end":183916,"line_start":2572,"line_end":2572,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":183917,"byte_end":183920,"line_start":2573,"line_end":2573,"column_start":1,"column_end":4}},{"value":"/ let mut drain_iter = map.drain();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":183921,"byte_end":183958,"line_start":2574,"line_end":2574,"column_start":1,"column_end":38}},{"value":"/ let mut vec = vec![drain_iter.next(), drain_iter.next(), drain_iter.next()];","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":183959,"byte_end":184039,"line_start":2575,"line_end":2575,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":184040,"byte_end":184043,"line_start":2576,"line_end":2576,"column_start":1,"column_end":4}},{"value":"/ // The `Drain` iterator produces items in arbitrary order, so the","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":184044,"byte_end":184113,"line_start":2577,"line_end":2577,"column_start":1,"column_end":70}},{"value":"/ // items must be sorted to test them against a sorted array.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":184114,"byte_end":184178,"line_start":2578,"line_end":2578,"column_start":1,"column_end":65}},{"value":"/ vec.sort_unstable();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":184179,"byte_end":184203,"line_start":2579,"line_end":2579,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(vec, [Some((1, \"a\")), Some((2, \"b\")), Some((3, \"c\"))]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":184204,"byte_end":184274,"line_start":2580,"line_end":2580,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":184275,"byte_end":184278,"line_start":2581,"line_end":2581,"column_start":1,"column_end":4}},{"value":"/ // It is fused iterator","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":184279,"byte_end":184306,"line_start":2582,"line_end":2582,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(drain_iter.next(), None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":184307,"byte_end":184347,"line_start":2583,"line_end":2583,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(drain_iter.next(), None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":184348,"byte_end":184388,"line_start":2584,"line_end":2584,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":184389,"byte_end":184396,"line_start":2585,"line_end":2585,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":900},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":185899,"byte_end":185910,"line_start":2632,"line_end":2632,"column_start":12,"column_end":23},"name":"DrainFilter","qualname":"::map::DrainFilter","value":"DrainFilter {  }","parent":null,"children":[{"krate":0,"index":906},{"krate":0,"index":907}],"decl_id":null,"docs":" A draining iterator over entries of a `HashMap` which don't satisfy the predicate\n `f(&k, &mut v)` in arbitrary order. The iterator element type is `(K, V)`.","sig":null,"attributes":[{"value":"/ A draining iterator over entries of a `HashMap` which don't satisfy the predicate","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":184821,"byte_end":184906,"line_start":2601,"line_end":2601,"column_start":1,"column_end":86}},{"value":"/ `f(&k, &mut v)` in arbitrary order. The iterator element type is `(K, V)`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":184907,"byte_end":184985,"line_start":2602,"line_end":2602,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":184986,"byte_end":184989,"line_start":2603,"line_end":2603,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain_filter`] method on [`HashMap`]. See its","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":184990,"byte_end":185073,"line_start":2604,"line_end":2604,"column_start":1,"column_end":84}},{"value":"/ documentation for more.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":185074,"byte_end":185101,"line_start":2605,"line_end":2605,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":185102,"byte_end":185105,"line_start":2606,"line_end":2606,"column_start":1,"column_end":4}},{"value":"/ [`drain_filter`]: struct.HashMap.html#method.drain_filter","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":185106,"byte_end":185167,"line_start":2607,"line_end":2607,"column_start":1,"column_end":62}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":185168,"byte_end":185204,"line_start":2608,"line_end":2608,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":185205,"byte_end":185208,"line_start":2609,"line_end":2609,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":185209,"byte_end":185223,"line_start":2610,"line_end":2610,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":185224,"byte_end":185227,"line_start":2611,"line_end":2611,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":185228,"byte_end":185235,"line_start":2612,"line_end":2612,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":185236,"byte_end":185263,"line_start":2613,"line_end":2613,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":185264,"byte_end":185267,"line_start":2614,"line_end":2614,"column_start":1,"column_end":4}},{"value":"/ let mut map: HashMap<i32, &str> = [(1, \"a\"), (2, \"b\"), (3, \"c\")].into();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":185268,"byte_end":185344,"line_start":2615,"line_end":2615,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":185345,"byte_end":185348,"line_start":2616,"line_end":2616,"column_start":1,"column_end":4}},{"value":"/ let mut drain_filter = map.drain_filter(|k, _v| k % 2 != 0);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":185349,"byte_end":185413,"line_start":2617,"line_end":2617,"column_start":1,"column_end":65}},{"value":"/ let mut vec = vec![drain_filter.next(), drain_filter.next()];","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":185414,"byte_end":185479,"line_start":2618,"line_end":2618,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":185480,"byte_end":185483,"line_start":2619,"line_end":2619,"column_start":1,"column_end":4}},{"value":"/ // The `DrainFilter` iterator produces items in arbitrary order, so the","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":185484,"byte_end":185559,"line_start":2620,"line_end":2620,"column_start":1,"column_end":76}},{"value":"/ // items must be sorted to test them against a sorted array.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":185560,"byte_end":185624,"line_start":2621,"line_end":2621,"column_start":1,"column_end":65}},{"value":"/ vec.sort_unstable();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":185625,"byte_end":185649,"line_start":2622,"line_end":2622,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(vec, [Some((1, \"a\")),Some((3, \"c\"))]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":185650,"byte_end":185703,"line_start":2623,"line_end":2623,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":185704,"byte_end":185707,"line_start":2624,"line_end":2624,"column_start":1,"column_end":4}},{"value":"/ // It is fused iterator","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":185708,"byte_end":185735,"line_start":2625,"line_end":2625,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(drain_filter.next(), None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":185736,"byte_end":185778,"line_start":2626,"line_end":2626,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(drain_filter.next(), None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":185779,"byte_end":185821,"line_start":2627,"line_end":2627,"column_start":1,"column_end":43}},{"value":"/ drop(drain_filter);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":185822,"byte_end":185845,"line_start":2628,"line_end":2628,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":185846,"byte_end":185849,"line_start":2629,"line_end":2629,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(map.len(), 1);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":185850,"byte_end":185879,"line_start":2630,"line_end":2630,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":185880,"byte_end":185887,"line_start":2631,"line_end":2631,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":948},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":188785,"byte_end":188794,"line_start":2735,"line_end":2735,"column_start":12,"column_end":21},"name":"ValuesMut","qualname":"::map::ValuesMut","value":"ValuesMut {  }","parent":null,"children":[{"krate":0,"index":952}],"decl_id":null,"docs":" A mutable iterator over the values of a `HashMap` in arbitrary order.\n The iterator element type is `&'a mut V`.","sig":null,"attributes":[{"value":"/ A mutable iterator over the values of a `HashMap` in arbitrary order.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":187885,"byte_end":187958,"line_start":2708,"line_end":2708,"column_start":1,"column_end":74}},{"value":"/ The iterator element type is `&'a mut V`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":187959,"byte_end":188004,"line_start":2709,"line_end":2709,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":188005,"byte_end":188008,"line_start":2710,"line_end":2710,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`values_mut`] method on [`HashMap`]. See its","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":188009,"byte_end":188090,"line_start":2711,"line_end":2711,"column_start":1,"column_end":82}},{"value":"/ documentation for more.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":188091,"byte_end":188118,"line_start":2712,"line_end":2712,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":188119,"byte_end":188122,"line_start":2713,"line_end":2713,"column_start":1,"column_end":4}},{"value":"/ [`values_mut`]: struct.HashMap.html#method.values_mut","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":188123,"byte_end":188180,"line_start":2714,"line_end":2714,"column_start":1,"column_end":58}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":188181,"byte_end":188217,"line_start":2715,"line_end":2715,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":188218,"byte_end":188221,"line_start":2716,"line_end":2716,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":188222,"byte_end":188236,"line_start":2717,"line_end":2717,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":188237,"byte_end":188240,"line_start":2718,"line_end":2718,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":188241,"byte_end":188248,"line_start":2719,"line_end":2719,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":188249,"byte_end":188276,"line_start":2720,"line_end":2720,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":188277,"byte_end":188280,"line_start":2721,"line_end":2721,"column_start":1,"column_end":4}},{"value":"/ let mut map: HashMap<_, _> = [(1, \"One\".to_owned()), (2, \"Two\".into())].into();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":188281,"byte_end":188364,"line_start":2722,"line_end":2722,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":188365,"byte_end":188368,"line_start":2723,"line_end":2723,"column_start":1,"column_end":4}},{"value":"/ let mut values = map.values_mut();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":188369,"byte_end":188407,"line_start":2724,"line_end":2724,"column_start":1,"column_end":39}},{"value":"/ values.next().map(|v| v.push_str(\" Mississippi\"));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":188408,"byte_end":188462,"line_start":2725,"line_end":2725,"column_start":1,"column_end":55}},{"value":"/ values.next().map(|v| v.push_str(\" Mississippi\"));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":188463,"byte_end":188517,"line_start":2726,"line_end":2726,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":188518,"byte_end":188521,"line_start":2727,"line_end":2727,"column_start":1,"column_end":4}},{"value":"/ // It is fused iterator","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":188522,"byte_end":188549,"line_start":2728,"line_end":2728,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(values.next(), None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":188550,"byte_end":188586,"line_start":2729,"line_end":2729,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(values.next(), None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":188587,"byte_end":188623,"line_start":2730,"line_end":2730,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":188624,"byte_end":188627,"line_start":2731,"line_end":2731,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(map.get(&1).unwrap(), &\"One Mississippi\".to_owned());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":188628,"byte_end":188696,"line_start":2732,"line_end":2732,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(map.get(&2).unwrap(), &\"Two Mississippi\".to_owned());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":188697,"byte_end":188765,"line_start":2733,"line_end":2733,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":188766,"byte_end":188773,"line_start":2734,"line_end":2734,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":953},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":190784,"byte_end":190802,"line_start":2794,"line_end":2794,"column_start":12,"column_end":30},"name":"RawEntryBuilderMut","qualname":"::map::RawEntryBuilderMut","value":"RawEntryBuilderMut {  }","parent":null,"children":[{"krate":0,"index":959}],"decl_id":null,"docs":" A builder for computing where in a [`HashMap`] a key-value pair would be stored.","sig":null,"attributes":[{"value":"/ A builder for computing where in a [`HashMap`] a key-value pair would be stored.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":188840,"byte_end":188924,"line_start":2739,"line_end":2739,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":188925,"byte_end":188928,"line_start":2740,"line_end":2740,"column_start":1,"column_end":4}},{"value":"/ See the [`HashMap::raw_entry_mut`] docs for usage examples.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":188929,"byte_end":188992,"line_start":2741,"line_end":2741,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":188993,"byte_end":188996,"line_start":2742,"line_end":2742,"column_start":1,"column_end":4}},{"value":"/ [`HashMap::raw_entry_mut`]: struct.HashMap.html#method.raw_entry_mut","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":188997,"byte_end":189069,"line_start":2743,"line_end":2743,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":189070,"byte_end":189073,"line_start":2744,"line_end":2744,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":189074,"byte_end":189088,"line_start":2745,"line_end":2745,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":189089,"byte_end":189092,"line_start":2746,"line_end":2746,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":189093,"byte_end":189100,"line_start":2747,"line_end":2747,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::hash_map::{RawEntryBuilderMut, RawEntryMut::Vacant, RawEntryMut::Occupied};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":189101,"byte_end":189195,"line_start":2748,"line_end":2748,"column_start":1,"column_end":95}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":189196,"byte_end":189223,"line_start":2749,"line_end":2749,"column_start":1,"column_end":28}},{"value":"/ use core::hash::{BuildHasher, Hash};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":189224,"byte_end":189264,"line_start":2750,"line_end":2750,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":189265,"byte_end":189268,"line_start":2751,"line_end":2751,"column_start":1,"column_end":4}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":189269,"byte_end":189302,"line_start":2752,"line_end":2752,"column_start":1,"column_end":34}},{"value":"/ map.extend([(1, 11), (2, 12), (3, 13), (4, 14), (5, 15), (6, 16)]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":189303,"byte_end":189374,"line_start":2753,"line_end":2753,"column_start":1,"column_end":72}},{"value":"/ assert_eq!(map.len(), 6);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":189375,"byte_end":189404,"line_start":2754,"line_end":2754,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":189405,"byte_end":189408,"line_start":2755,"line_end":2755,"column_start":1,"column_end":4}},{"value":"/ fn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":189409,"byte_end":189498,"line_start":2756,"line_end":2756,"column_start":1,"column_end":90}},{"value":"/     use core::hash::Hasher;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":189499,"byte_end":189530,"line_start":2757,"line_end":2757,"column_start":1,"column_end":32}},{"value":"/     let mut state = hash_builder.build_hasher();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":189531,"byte_end":189583,"line_start":2758,"line_end":2758,"column_start":1,"column_end":53}},{"value":"/     key.hash(&mut state);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":189584,"byte_end":189613,"line_start":2759,"line_end":2759,"column_start":1,"column_end":30}},{"value":"/     state.finish()","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":189614,"byte_end":189636,"line_start":2760,"line_end":2760,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":189637,"byte_end":189642,"line_start":2761,"line_end":2761,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":189643,"byte_end":189646,"line_start":2762,"line_end":2762,"column_start":1,"column_end":4}},{"value":"/ let builder: RawEntryBuilderMut<_, _, _> = map.raw_entry_mut();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":189647,"byte_end":189714,"line_start":2763,"line_end":2763,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":189715,"byte_end":189718,"line_start":2764,"line_end":2764,"column_start":1,"column_end":4}},{"value":"/ // Existing key","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":189719,"byte_end":189738,"line_start":2765,"line_end":2765,"column_start":1,"column_end":20}},{"value":"/ match builder.from_key(&6) {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":189739,"byte_end":189771,"line_start":2766,"line_end":2766,"column_start":1,"column_end":33}},{"value":"/     Vacant(_) => unreachable!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":189772,"byte_end":189808,"line_start":2767,"line_end":2767,"column_start":1,"column_end":37}},{"value":"/     Occupied(view) => assert_eq!(view.get(), &16),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":189809,"byte_end":189863,"line_start":2768,"line_end":2768,"column_start":1,"column_end":55}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":189864,"byte_end":189869,"line_start":2769,"line_end":2769,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":189870,"byte_end":189873,"line_start":2770,"line_end":2770,"column_start":1,"column_end":4}},{"value":"/ for key in 0..12 {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":189874,"byte_end":189896,"line_start":2771,"line_end":2771,"column_start":1,"column_end":23}},{"value":"/     let hash = compute_hash(map.hasher(), &key);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":189897,"byte_end":189949,"line_start":2772,"line_end":2772,"column_start":1,"column_end":53}},{"value":"/     let value = map.get(&key).cloned();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":189950,"byte_end":189993,"line_start":2773,"line_end":2773,"column_start":1,"column_end":44}},{"value":"/     let key_value = value.as_ref().map(|v| (&key, v));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":189994,"byte_end":190052,"line_start":2774,"line_end":2774,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":190053,"byte_end":190056,"line_start":2775,"line_end":2775,"column_start":1,"column_end":4}},{"value":"/     println!(\"Key: {} and value: {:?}\", key, value);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":190057,"byte_end":190113,"line_start":2776,"line_end":2776,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":190114,"byte_end":190117,"line_start":2777,"line_end":2777,"column_start":1,"column_end":4}},{"value":"/     match map.raw_entry_mut().from_key(&key) {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":190118,"byte_end":190168,"line_start":2778,"line_end":2778,"column_start":1,"column_end":51}},{"value":"/         Occupied(mut o) => assert_eq!(Some(o.get_key_value()), key_value),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":190169,"byte_end":190247,"line_start":2779,"line_end":2779,"column_start":1,"column_end":79}},{"value":"/         Vacant(_) => assert_eq!(value, None),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":190248,"byte_end":190297,"line_start":2780,"line_end":2780,"column_start":1,"column_end":50}},{"value":"/     }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":190298,"byte_end":190307,"line_start":2781,"line_end":2781,"column_start":1,"column_end":10}},{"value":"/     match map.raw_entry_mut().from_key_hashed_nocheck(hash, &key) {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":190308,"byte_end":190379,"line_start":2782,"line_end":2782,"column_start":1,"column_end":72}},{"value":"/         Occupied(mut o) => assert_eq!(Some(o.get_key_value()), key_value),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":190380,"byte_end":190458,"line_start":2783,"line_end":2783,"column_start":1,"column_end":79}},{"value":"/         Vacant(_) => assert_eq!(value, None),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":190459,"byte_end":190508,"line_start":2784,"line_end":2784,"column_start":1,"column_end":50}},{"value":"/     }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":190509,"byte_end":190518,"line_start":2785,"line_end":2785,"column_start":1,"column_end":10}},{"value":"/     match map.raw_entry_mut().from_hash(hash, |q| *q == key) {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":190519,"byte_end":190585,"line_start":2786,"line_end":2786,"column_start":1,"column_end":67}},{"value":"/         Occupied(mut o) => assert_eq!(Some(o.get_key_value()), key_value),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":190586,"byte_end":190664,"line_start":2787,"line_end":2787,"column_start":1,"column_end":79}},{"value":"/         Vacant(_) => assert_eq!(value, None),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":190665,"byte_end":190714,"line_start":2788,"line_end":2788,"column_start":1,"column_end":50}},{"value":"/     }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":190715,"byte_end":190724,"line_start":2789,"line_end":2789,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":190725,"byte_end":190730,"line_start":2790,"line_end":2790,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":190731,"byte_end":190734,"line_start":2791,"line_end":2791,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(map.len(), 6);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":190735,"byte_end":190764,"line_start":2792,"line_end":2792,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":190765,"byte_end":190772,"line_start":2793,"line_end":2793,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":966},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":194169,"byte_end":194177,"line_start":2896,"line_end":2896,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::map::RawEntryMut::Occupied","value":"RawEntryMut::Occupied(RawOccupiedEntryMut)","parent":{"krate":0,"index":960},"children":[],"decl_id":null,"docs":" An occupied entry.","sig":null,"attributes":[{"value":"/ An occupied entry.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":193789,"byte_end":193811,"line_start":2883,"line_end":2883,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":193816,"byte_end":193819,"line_start":2884,"line_end":2884,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":193824,"byte_end":193838,"line_start":2885,"line_end":2885,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":193843,"byte_end":193846,"line_start":2886,"line_end":2886,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":193851,"byte_end":193858,"line_start":2887,"line_end":2887,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::{hash_map::RawEntryMut, HashMap};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":193863,"byte_end":193915,"line_start":2888,"line_end":2888,"column_start":5,"column_end":57}},{"value":"/ let mut map: HashMap<_, _> = [(\"a\", 100), (\"b\", 200)].into();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":193920,"byte_end":193985,"line_start":2889,"line_end":2889,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":193990,"byte_end":193993,"line_start":2890,"line_end":2890,"column_start":5,"column_end":8}},{"value":"/ match map.raw_entry_mut().from_key(&\"a\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":193998,"byte_end":194044,"line_start":2891,"line_end":2891,"column_start":5,"column_end":51}},{"value":"/     RawEntryMut::Vacant(_) => unreachable!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":194049,"byte_end":194098,"line_start":2892,"line_end":2892,"column_start":5,"column_end":54}},{"value":"/     RawEntryMut::Occupied(_) => { }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":194103,"byte_end":194142,"line_start":2893,"line_end":2893,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":194147,"byte_end":194152,"line_start":2894,"line_end":2894,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":194157,"byte_end":194164,"line_start":2895,"line_end":2895,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":969},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":194584,"byte_end":194590,"line_start":2910,"line_end":2910,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::map::RawEntryMut::Vacant","value":"RawEntryMut::Vacant(RawVacantEntryMut)","parent":{"krate":0,"index":960},"children":[],"decl_id":null,"docs":" A vacant entry.","sig":null,"attributes":[{"value":"/ A vacant entry.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":194220,"byte_end":194239,"line_start":2897,"line_end":2897,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":194244,"byte_end":194247,"line_start":2898,"line_end":2898,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":194252,"byte_end":194266,"line_start":2899,"line_end":2899,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":194271,"byte_end":194274,"line_start":2900,"line_end":2900,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":194279,"byte_end":194286,"line_start":2901,"line_end":2901,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::{hash_map::RawEntryMut, HashMap};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":194291,"byte_end":194343,"line_start":2902,"line_end":2902,"column_start":5,"column_end":57}},{"value":"/ let mut map: HashMap<&str, i32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":194348,"byte_end":194401,"line_start":2903,"line_end":2903,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":194406,"byte_end":194409,"line_start":2904,"line_end":2904,"column_start":5,"column_end":8}},{"value":"/ match map.raw_entry_mut().from_key(\"a\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":194414,"byte_end":194459,"line_start":2905,"line_end":2905,"column_start":5,"column_end":50}},{"value":"/     RawEntryMut::Occupied(_) => unreachable!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":194464,"byte_end":194515,"line_start":2906,"line_end":2906,"column_start":5,"column_end":56}},{"value":"/     RawEntryMut::Vacant(_) => { }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":194520,"byte_end":194557,"line_start":2907,"line_end":2907,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":194562,"byte_end":194567,"line_start":2908,"line_end":2908,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":194572,"byte_end":194579,"line_start":2909,"line_end":2909,"column_start":5,"column_end":12}}]},{"kind":"Enum","id":{"krate":0,"index":960},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":193727,"byte_end":193738,"line_start":2882,"line_end":2882,"column_start":10,"column_end":21},"name":"RawEntryMut","qualname":"::map::RawEntryMut","value":"pub enum RawEntryMut<'a, K, V, S, A: Allocator + Clone = Global> {\n    Occupied(RawOccupiedEntryMut),\n    Vacant(RawVacantEntryMut),\n}","parent":null,"children":[{"krate":0,"index":966},{"krate":0,"index":969}],"decl_id":null,"docs":" A view into a single entry in a map, which may either be vacant or occupied.","sig":null,"attributes":[{"value":"/ A view into a single entry in a map, which may either be vacant or occupied.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":190890,"byte_end":190970,"line_start":2798,"line_end":2798,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":190971,"byte_end":190974,"line_start":2799,"line_end":2799,"column_start":1,"column_end":4}},{"value":"/ This is a lower-level version of [`Entry`].","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":190975,"byte_end":191022,"line_start":2800,"line_end":2800,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":191023,"byte_end":191026,"line_start":2801,"line_end":2801,"column_start":1,"column_end":4}},{"value":"/ This `enum` is constructed through the [`raw_entry_mut`] method on [`HashMap`],","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":191027,"byte_end":191110,"line_start":2802,"line_end":2802,"column_start":1,"column_end":84}},{"value":"/ then calling one of the methods of that [`RawEntryBuilderMut`].","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":191111,"byte_end":191178,"line_start":2803,"line_end":2803,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":191179,"byte_end":191182,"line_start":2804,"line_end":2804,"column_start":1,"column_end":4}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":191183,"byte_end":191219,"line_start":2805,"line_end":2805,"column_start":1,"column_end":37}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":191220,"byte_end":191250,"line_start":2806,"line_end":2806,"column_start":1,"column_end":31}},{"value":"/ [`raw_entry_mut`]: struct.HashMap.html#method.raw_entry_mut","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":191251,"byte_end":191314,"line_start":2807,"line_end":2807,"column_start":1,"column_end":64}},{"value":"/ [`RawEntryBuilderMut`]: struct.RawEntryBuilderMut.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":191315,"byte_end":191373,"line_start":2808,"line_end":2808,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":191374,"byte_end":191377,"line_start":2809,"line_end":2809,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":191378,"byte_end":191392,"line_start":2810,"line_end":2810,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":191393,"byte_end":191396,"line_start":2811,"line_end":2811,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":191397,"byte_end":191404,"line_start":2812,"line_end":2812,"column_start":1,"column_end":8}},{"value":"/ use core::hash::{BuildHasher, Hash};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":191405,"byte_end":191445,"line_start":2813,"line_end":2813,"column_start":1,"column_end":41}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut, RawOccupiedEntryMut};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":191446,"byte_end":191519,"line_start":2814,"line_end":2814,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":191520,"byte_end":191523,"line_start":2815,"line_end":2815,"column_start":1,"column_end":4}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":191524,"byte_end":191557,"line_start":2816,"line_end":2816,"column_start":1,"column_end":34}},{"value":"/ map.extend([('a', 1), ('b', 2), ('c', 3)]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":191558,"byte_end":191605,"line_start":2817,"line_end":2817,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":191606,"byte_end":191635,"line_start":2818,"line_end":2818,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":191636,"byte_end":191639,"line_start":2819,"line_end":2819,"column_start":1,"column_end":4}},{"value":"/ fn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":191640,"byte_end":191729,"line_start":2820,"line_end":2820,"column_start":1,"column_end":90}},{"value":"/     use core::hash::Hasher;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":191730,"byte_end":191761,"line_start":2821,"line_end":2821,"column_start":1,"column_end":32}},{"value":"/     let mut state = hash_builder.build_hasher();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":191762,"byte_end":191814,"line_start":2822,"line_end":2822,"column_start":1,"column_end":53}},{"value":"/     key.hash(&mut state);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":191815,"byte_end":191844,"line_start":2823,"line_end":2823,"column_start":1,"column_end":30}},{"value":"/     state.finish()","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":191845,"byte_end":191867,"line_start":2824,"line_end":2824,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":191868,"byte_end":191873,"line_start":2825,"line_end":2825,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":191874,"byte_end":191877,"line_start":2826,"line_end":2826,"column_start":1,"column_end":4}},{"value":"/ // Existing key (insert)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":191878,"byte_end":191906,"line_start":2827,"line_end":2827,"column_start":1,"column_end":29}},{"value":"/ let raw: RawEntryMut<_, _, _> = map.raw_entry_mut().from_key(&'a');","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":191907,"byte_end":191978,"line_start":2828,"line_end":2828,"column_start":1,"column_end":72}},{"value":"/ let _raw_o: RawOccupiedEntryMut<_, _, _> = raw.insert('a', 10);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":191979,"byte_end":192046,"line_start":2829,"line_end":2829,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":192047,"byte_end":192076,"line_start":2830,"line_end":2830,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":192077,"byte_end":192080,"line_start":2831,"line_end":2831,"column_start":1,"column_end":4}},{"value":"/ // Nonexistent key (insert)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":192081,"byte_end":192112,"line_start":2832,"line_end":2832,"column_start":1,"column_end":32}},{"value":"/ map.raw_entry_mut().from_key(&'d').insert('d', 40);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":192113,"byte_end":192168,"line_start":2833,"line_end":2833,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(map.len(), 4);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":192169,"byte_end":192198,"line_start":2834,"line_end":2834,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":192199,"byte_end":192202,"line_start":2835,"line_end":2835,"column_start":1,"column_end":4}},{"value":"/ // Existing key (or_insert)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":192203,"byte_end":192234,"line_start":2836,"line_end":2836,"column_start":1,"column_end":32}},{"value":"/ let hash = compute_hash(map.hasher(), &'b');","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":192235,"byte_end":192283,"line_start":2837,"line_end":2837,"column_start":1,"column_end":49}},{"value":"/ let kv = map","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":192284,"byte_end":192300,"line_start":2838,"line_end":2838,"column_start":1,"column_end":17}},{"value":"/     .raw_entry_mut()","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":192301,"byte_end":192325,"line_start":2839,"line_end":2839,"column_start":1,"column_end":25}},{"value":"/     .from_key_hashed_nocheck(hash, &'b')","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":192326,"byte_end":192370,"line_start":2840,"line_end":2840,"column_start":1,"column_end":45}},{"value":"/     .or_insert('b', 20);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":192371,"byte_end":192399,"line_start":2841,"line_end":2841,"column_start":1,"column_end":29}},{"value":"/ assert_eq!(kv, (&mut 'b', &mut 2));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":192400,"byte_end":192439,"line_start":2842,"line_end":2842,"column_start":1,"column_end":40}},{"value":"/ *kv.1 = 20;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":192440,"byte_end":192455,"line_start":2843,"line_end":2843,"column_start":1,"column_end":16}},{"value":"/ assert_eq!(map.len(), 4);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":192456,"byte_end":192485,"line_start":2844,"line_end":2844,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":192486,"byte_end":192489,"line_start":2845,"line_end":2845,"column_start":1,"column_end":4}},{"value":"/ // Nonexistent key (or_insert)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":192490,"byte_end":192524,"line_start":2846,"line_end":2846,"column_start":1,"column_end":35}},{"value":"/ let hash = compute_hash(map.hasher(), &'e');","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":192525,"byte_end":192573,"line_start":2847,"line_end":2847,"column_start":1,"column_end":49}},{"value":"/ let kv = map","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":192574,"byte_end":192590,"line_start":2848,"line_end":2848,"column_start":1,"column_end":17}},{"value":"/     .raw_entry_mut()","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":192591,"byte_end":192615,"line_start":2849,"line_end":2849,"column_start":1,"column_end":25}},{"value":"/     .from_key_hashed_nocheck(hash, &'e')","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":192616,"byte_end":192660,"line_start":2850,"line_end":2850,"column_start":1,"column_end":45}},{"value":"/     .or_insert('e', 50);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":192661,"byte_end":192689,"line_start":2851,"line_end":2851,"column_start":1,"column_end":29}},{"value":"/ assert_eq!(kv, (&mut 'e', &mut 50));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":192690,"byte_end":192730,"line_start":2852,"line_end":2852,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(map.len(), 5);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":192731,"byte_end":192760,"line_start":2853,"line_end":2853,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":192761,"byte_end":192764,"line_start":2854,"line_end":2854,"column_start":1,"column_end":4}},{"value":"/ // Existing key (or_insert_with)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":192765,"byte_end":192801,"line_start":2855,"line_end":2855,"column_start":1,"column_end":37}},{"value":"/ let hash = compute_hash(map.hasher(), &'c');","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":192802,"byte_end":192850,"line_start":2856,"line_end":2856,"column_start":1,"column_end":49}},{"value":"/ let kv = map","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":192851,"byte_end":192867,"line_start":2857,"line_end":2857,"column_start":1,"column_end":17}},{"value":"/     .raw_entry_mut()","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":192868,"byte_end":192892,"line_start":2858,"line_end":2858,"column_start":1,"column_end":25}},{"value":"/     .from_hash(hash, |q| q == &'c')","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":192893,"byte_end":192932,"line_start":2859,"line_end":2859,"column_start":1,"column_end":40}},{"value":"/     .or_insert_with(|| ('c', 30));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":192933,"byte_end":192971,"line_start":2860,"line_end":2860,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(kv, (&mut 'c', &mut 3));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":192972,"byte_end":193011,"line_start":2861,"line_end":2861,"column_start":1,"column_end":40}},{"value":"/ *kv.1 = 30;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":193012,"byte_end":193027,"line_start":2862,"line_end":2862,"column_start":1,"column_end":16}},{"value":"/ assert_eq!(map.len(), 5);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":193028,"byte_end":193057,"line_start":2863,"line_end":2863,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":193058,"byte_end":193061,"line_start":2864,"line_end":2864,"column_start":1,"column_end":4}},{"value":"/ // Nonexistent key (or_insert_with)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":193062,"byte_end":193101,"line_start":2865,"line_end":2865,"column_start":1,"column_end":40}},{"value":"/ let hash = compute_hash(map.hasher(), &'f');","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":193102,"byte_end":193150,"line_start":2866,"line_end":2866,"column_start":1,"column_end":49}},{"value":"/ let kv = map","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":193151,"byte_end":193167,"line_start":2867,"line_end":2867,"column_start":1,"column_end":17}},{"value":"/     .raw_entry_mut()","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":193168,"byte_end":193192,"line_start":2868,"line_end":2868,"column_start":1,"column_end":25}},{"value":"/     .from_hash(hash, |q| q == &'f')","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":193193,"byte_end":193232,"line_start":2869,"line_end":2869,"column_start":1,"column_end":40}},{"value":"/     .or_insert_with(|| ('f', 60));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":193233,"byte_end":193271,"line_start":2870,"line_end":2870,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(kv, (&mut 'f', &mut 60));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":193272,"byte_end":193312,"line_start":2871,"line_end":2871,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(map.len(), 6);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":193313,"byte_end":193342,"line_start":2872,"line_end":2872,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":193343,"byte_end":193346,"line_start":2873,"line_end":2873,"column_start":1,"column_end":4}},{"value":"/ println!(\"Our HashMap: {:?}\", map);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":193347,"byte_end":193386,"line_start":2874,"line_end":2874,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":193387,"byte_end":193390,"line_start":2875,"line_end":2875,"column_start":1,"column_end":4}},{"value":"/ let mut vec: Vec<_> = map.iter().map(|(&k, &v)| (k, v)).collect();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":193391,"byte_end":193461,"line_start":2876,"line_end":2876,"column_start":1,"column_end":71}},{"value":"/ // The `Iter` iterator produces items in arbitrary order, so the","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":193462,"byte_end":193530,"line_start":2877,"line_end":2877,"column_start":1,"column_end":69}},{"value":"/ // items must be sorted to test them against a sorted array.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":193531,"byte_end":193595,"line_start":2878,"line_end":2878,"column_start":1,"column_end":65}},{"value":"/ vec.sort_unstable();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":193596,"byte_end":193620,"line_start":2879,"line_end":2879,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(vec, [('a', 10), ('b', 20), ('c', 30), ('d', 40), ('e', 50), ('f', 60)]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":193621,"byte_end":193709,"line_start":2880,"line_end":2880,"column_start":1,"column_end":89}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":193710,"byte_end":193717,"line_start":2881,"line_end":2881,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":972},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":196593,"byte_end":196612,"line_start":2973,"line_end":2973,"column_start":12,"column_end":31},"name":"RawOccupiedEntryMut","qualname":"::map::RawOccupiedEntryMut","value":"RawOccupiedEntryMut {  }","parent":null,"children":[{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980}],"decl_id":null,"docs":" A view into an occupied entry in a `HashMap`.\n It is part of the [`RawEntryMut`] enum.","sig":null,"attributes":[{"value":"/ A view into an occupied entry in a `HashMap`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":194630,"byte_end":194679,"line_start":2913,"line_end":2913,"column_start":1,"column_end":50}},{"value":"/ It is part of the [`RawEntryMut`] enum.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":194680,"byte_end":194723,"line_start":2914,"line_end":2914,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":194724,"byte_end":194727,"line_start":2915,"line_end":2915,"column_start":1,"column_end":4}},{"value":"/ [`RawEntryMut`]: enum.RawEntryMut.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":194728,"byte_end":194770,"line_start":2916,"line_end":2916,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":194771,"byte_end":194774,"line_start":2917,"line_end":2917,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":194775,"byte_end":194789,"line_start":2918,"line_end":2918,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":194790,"byte_end":194793,"line_start":2919,"line_end":2919,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":194794,"byte_end":194801,"line_start":2920,"line_end":2920,"column_start":1,"column_end":8}},{"value":"/ use core::hash::{BuildHasher, Hash};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":194802,"byte_end":194842,"line_start":2921,"line_end":2921,"column_start":1,"column_end":41}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut, RawOccupiedEntryMut};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":194843,"byte_end":194916,"line_start":2922,"line_end":2922,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":194917,"byte_end":194920,"line_start":2923,"line_end":2923,"column_start":1,"column_end":4}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":194921,"byte_end":194954,"line_start":2924,"line_end":2924,"column_start":1,"column_end":34}},{"value":"/ map.extend([(\"a\", 10), (\"b\", 20), (\"c\", 30)]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":194955,"byte_end":195005,"line_start":2925,"line_end":2925,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":195006,"byte_end":195009,"line_start":2926,"line_end":2926,"column_start":1,"column_end":4}},{"value":"/ fn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":195010,"byte_end":195099,"line_start":2927,"line_end":2927,"column_start":1,"column_end":90}},{"value":"/     use core::hash::Hasher;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":195100,"byte_end":195131,"line_start":2928,"line_end":2928,"column_start":1,"column_end":32}},{"value":"/     let mut state = hash_builder.build_hasher();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":195132,"byte_end":195184,"line_start":2929,"line_end":2929,"column_start":1,"column_end":53}},{"value":"/     key.hash(&mut state);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":195185,"byte_end":195214,"line_start":2930,"line_end":2930,"column_start":1,"column_end":30}},{"value":"/     state.finish()","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":195215,"byte_end":195237,"line_start":2931,"line_end":2931,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":195238,"byte_end":195243,"line_start":2932,"line_end":2932,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":195244,"byte_end":195247,"line_start":2933,"line_end":2933,"column_start":1,"column_end":4}},{"value":"/ let _raw_o: RawOccupiedEntryMut<_, _, _> = map.raw_entry_mut().from_key(&\"a\").insert(\"a\", 100);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":195248,"byte_end":195347,"line_start":2934,"line_end":2934,"column_start":1,"column_end":100}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":195348,"byte_end":195377,"line_start":2935,"line_end":2935,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":195378,"byte_end":195381,"line_start":2936,"line_end":2936,"column_start":1,"column_end":4}},{"value":"/ // Existing key (insert and update)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":195382,"byte_end":195421,"line_start":2937,"line_end":2937,"column_start":1,"column_end":40}},{"value":"/ match map.raw_entry_mut().from_key(&\"a\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":195422,"byte_end":195468,"line_start":2938,"line_end":2938,"column_start":1,"column_end":47}},{"value":"/     RawEntryMut::Vacant(_) => unreachable!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":195469,"byte_end":195518,"line_start":2939,"line_end":2939,"column_start":1,"column_end":50}},{"value":"/     RawEntryMut::Occupied(mut view) => {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":195519,"byte_end":195563,"line_start":2940,"line_end":2940,"column_start":1,"column_end":45}},{"value":"/         assert_eq!(view.get(), &100);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":195564,"byte_end":195605,"line_start":2941,"line_end":2941,"column_start":1,"column_end":42}},{"value":"/         let v = view.get_mut();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":195606,"byte_end":195641,"line_start":2942,"line_end":2942,"column_start":1,"column_end":36}},{"value":"/         let new_v = (*v) * 10;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":195642,"byte_end":195676,"line_start":2943,"line_end":2943,"column_start":1,"column_end":35}},{"value":"/         *v = new_v;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":195677,"byte_end":195700,"line_start":2944,"line_end":2944,"column_start":1,"column_end":24}},{"value":"/         assert_eq!(view.insert(1111), 1000);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":195701,"byte_end":195749,"line_start":2945,"line_end":2945,"column_start":1,"column_end":49}},{"value":"/     }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":195750,"byte_end":195759,"line_start":2946,"line_end":2946,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":195760,"byte_end":195765,"line_start":2947,"line_end":2947,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":195766,"byte_end":195769,"line_start":2948,"line_end":2948,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(map[&\"a\"], 1111);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":195770,"byte_end":195802,"line_start":2949,"line_end":2949,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":195803,"byte_end":195832,"line_start":2950,"line_end":2950,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":195833,"byte_end":195836,"line_start":2951,"line_end":2951,"column_start":1,"column_end":4}},{"value":"/ // Existing key (take)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":195837,"byte_end":195863,"line_start":2952,"line_end":2952,"column_start":1,"column_end":27}},{"value":"/ let hash = compute_hash(map.hasher(), &\"c\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":195864,"byte_end":195912,"line_start":2953,"line_end":2953,"column_start":1,"column_end":49}},{"value":"/ match map.raw_entry_mut().from_key_hashed_nocheck(hash, &\"c\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":195913,"byte_end":195980,"line_start":2954,"line_end":2954,"column_start":1,"column_end":68}},{"value":"/     RawEntryMut::Vacant(_) => unreachable!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":195981,"byte_end":196030,"line_start":2955,"line_end":2955,"column_start":1,"column_end":50}},{"value":"/     RawEntryMut::Occupied(view) => {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":196031,"byte_end":196071,"line_start":2956,"line_end":2956,"column_start":1,"column_end":41}},{"value":"/         assert_eq!(view.remove_entry(), (\"c\", 30));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":196072,"byte_end":196127,"line_start":2957,"line_end":2957,"column_start":1,"column_end":56}},{"value":"/     }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":196128,"byte_end":196137,"line_start":2958,"line_end":2958,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":196138,"byte_end":196143,"line_start":2959,"line_end":2959,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(map.raw_entry().from_key(&\"c\"), None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":196144,"byte_end":196197,"line_start":2960,"line_end":2960,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(map.len(), 2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":196198,"byte_end":196227,"line_start":2961,"line_end":2961,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":196228,"byte_end":196231,"line_start":2962,"line_end":2962,"column_start":1,"column_end":4}},{"value":"/ let hash = compute_hash(map.hasher(), &\"b\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":196232,"byte_end":196280,"line_start":2963,"line_end":2963,"column_start":1,"column_end":49}},{"value":"/ match map.raw_entry_mut().from_hash(hash, |q| *q == \"b\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":196281,"byte_end":196343,"line_start":2964,"line_end":2964,"column_start":1,"column_end":63}},{"value":"/     RawEntryMut::Vacant(_) => unreachable!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":196344,"byte_end":196393,"line_start":2965,"line_end":2965,"column_start":1,"column_end":50}},{"value":"/     RawEntryMut::Occupied(view) => {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":196394,"byte_end":196434,"line_start":2966,"line_end":2966,"column_start":1,"column_end":41}},{"value":"/         assert_eq!(view.remove_entry(), (\"b\", 20));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":196435,"byte_end":196490,"line_start":2967,"line_end":2967,"column_start":1,"column_end":56}},{"value":"/     }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":196491,"byte_end":196500,"line_start":2968,"line_end":2968,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":196501,"byte_end":196506,"line_start":2969,"line_end":2969,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(map.get(&\"b\"), None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":196507,"byte_end":196543,"line_start":2970,"line_end":2970,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(map.len(), 1);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":196544,"byte_end":196573,"line_start":2971,"line_end":2971,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":196574,"byte_end":196581,"line_start":2972,"line_end":2972,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":991},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":198694,"byte_end":198711,"line_start":3044,"line_end":3044,"column_start":12,"column_end":29},"name":"RawVacantEntryMut","qualname":"::map::RawVacantEntryMut","value":"RawVacantEntryMut {  }","parent":null,"children":[{"krate":0,"index":997},{"krate":0,"index":998}],"decl_id":null,"docs":" A view into a vacant entry in a `HashMap`.\n It is part of the [`RawEntryMut`] enum.","sig":null,"attributes":[{"value":"/ A view into a vacant entry in a `HashMap`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":197056,"byte_end":197102,"line_start":2996,"line_end":2996,"column_start":1,"column_end":47}},{"value":"/ It is part of the [`RawEntryMut`] enum.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":197103,"byte_end":197146,"line_start":2997,"line_end":2997,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":197147,"byte_end":197150,"line_start":2998,"line_end":2998,"column_start":1,"column_end":4}},{"value":"/ [`RawEntryMut`]: enum.RawEntryMut.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":197151,"byte_end":197193,"line_start":2999,"line_end":2999,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":197194,"byte_end":197197,"line_start":3000,"line_end":3000,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":197198,"byte_end":197212,"line_start":3001,"line_end":3001,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":197213,"byte_end":197216,"line_start":3002,"line_end":3002,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":197217,"byte_end":197224,"line_start":3003,"line_end":3003,"column_start":1,"column_end":8}},{"value":"/ use core::hash::{BuildHasher, Hash};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":197225,"byte_end":197265,"line_start":3004,"line_end":3004,"column_start":1,"column_end":41}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut, RawVacantEntryMut};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":197266,"byte_end":197337,"line_start":3005,"line_end":3005,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":197338,"byte_end":197341,"line_start":3006,"line_end":3006,"column_start":1,"column_end":4}},{"value":"/ let mut map = HashMap::<&str, i32>::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":197342,"byte_end":197388,"line_start":3007,"line_end":3007,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":197389,"byte_end":197392,"line_start":3008,"line_end":3008,"column_start":1,"column_end":4}},{"value":"/ fn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":197393,"byte_end":197482,"line_start":3009,"line_end":3009,"column_start":1,"column_end":90}},{"value":"/     use core::hash::Hasher;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":197483,"byte_end":197514,"line_start":3010,"line_end":3010,"column_start":1,"column_end":32}},{"value":"/     let mut state = hash_builder.build_hasher();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":197515,"byte_end":197567,"line_start":3011,"line_end":3011,"column_start":1,"column_end":53}},{"value":"/     key.hash(&mut state);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":197568,"byte_end":197597,"line_start":3012,"line_end":3012,"column_start":1,"column_end":30}},{"value":"/     state.finish()","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":197598,"byte_end":197620,"line_start":3013,"line_end":3013,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":197621,"byte_end":197626,"line_start":3014,"line_end":3014,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":197627,"byte_end":197630,"line_start":3015,"line_end":3015,"column_start":1,"column_end":4}},{"value":"/ let raw_v: RawVacantEntryMut<_, _, _> = match map.raw_entry_mut().from_key(&\"a\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":197631,"byte_end":197717,"line_start":3016,"line_end":3016,"column_start":1,"column_end":87}},{"value":"/     RawEntryMut::Vacant(view) => view,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":197718,"byte_end":197760,"line_start":3017,"line_end":3017,"column_start":1,"column_end":43}},{"value":"/     RawEntryMut::Occupied(_) => unreachable!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":197761,"byte_end":197812,"line_start":3018,"line_end":3018,"column_start":1,"column_end":52}},{"value":"/ };","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":197813,"byte_end":197819,"line_start":3019,"line_end":3019,"column_start":1,"column_end":7}},{"value":"/ raw_v.insert(\"a\", 10);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":197820,"byte_end":197846,"line_start":3020,"line_end":3020,"column_start":1,"column_end":27}},{"value":"/ assert!(map[&\"a\"] == 10 && map.len() == 1);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":197847,"byte_end":197894,"line_start":3021,"line_end":3021,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":197895,"byte_end":197898,"line_start":3022,"line_end":3022,"column_start":1,"column_end":4}},{"value":"/ // Nonexistent key (insert and update)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":197899,"byte_end":197941,"line_start":3023,"line_end":3023,"column_start":1,"column_end":43}},{"value":"/ let hash = compute_hash(map.hasher(), &\"b\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":197942,"byte_end":197990,"line_start":3024,"line_end":3024,"column_start":1,"column_end":49}},{"value":"/ match map.raw_entry_mut().from_key_hashed_nocheck(hash, &\"b\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":197991,"byte_end":198058,"line_start":3025,"line_end":3025,"column_start":1,"column_end":68}},{"value":"/     RawEntryMut::Occupied(_) => unreachable!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":198059,"byte_end":198110,"line_start":3026,"line_end":3026,"column_start":1,"column_end":52}},{"value":"/     RawEntryMut::Vacant(view) => {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":198111,"byte_end":198149,"line_start":3027,"line_end":3027,"column_start":1,"column_end":39}},{"value":"/         let (k, value) = view.insert(\"b\", 2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":198150,"byte_end":198199,"line_start":3028,"line_end":3028,"column_start":1,"column_end":50}},{"value":"/         assert_eq!((*k, *value), (\"b\", 2));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":198200,"byte_end":198247,"line_start":3029,"line_end":3029,"column_start":1,"column_end":48}},{"value":"/         *value = 20;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":198248,"byte_end":198272,"line_start":3030,"line_end":3030,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":198273,"byte_end":198282,"line_start":3031,"line_end":3031,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":198283,"byte_end":198288,"line_start":3032,"line_end":3032,"column_start":1,"column_end":6}},{"value":"/ assert!(map[&\"b\"] == 20 && map.len() == 2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":198289,"byte_end":198336,"line_start":3033,"line_end":3033,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":198337,"byte_end":198340,"line_start":3034,"line_end":3034,"column_start":1,"column_end":4}},{"value":"/ let hash = compute_hash(map.hasher(), &\"c\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":198341,"byte_end":198389,"line_start":3035,"line_end":3035,"column_start":1,"column_end":49}},{"value":"/ match map.raw_entry_mut().from_hash(hash, |q| *q == \"c\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":198390,"byte_end":198452,"line_start":3036,"line_end":3036,"column_start":1,"column_end":63}},{"value":"/     RawEntryMut::Occupied(_) => unreachable!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":198453,"byte_end":198504,"line_start":3037,"line_end":3037,"column_start":1,"column_end":52}},{"value":"/     RawEntryMut::Vacant(view) => {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":198505,"byte_end":198543,"line_start":3038,"line_end":3038,"column_start":1,"column_end":39}},{"value":"/         assert_eq!(view.insert(\"c\", 30), (&mut \"c\", &mut 30));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":198544,"byte_end":198610,"line_start":3039,"line_end":3039,"column_start":1,"column_end":67}},{"value":"/     }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":198611,"byte_end":198620,"line_start":3040,"line_end":3040,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":198621,"byte_end":198626,"line_start":3041,"line_end":3041,"column_start":1,"column_end":6}},{"value":"/ assert!(map[&\"c\"] == 30 && map.len() == 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":198627,"byte_end":198674,"line_start":3042,"line_end":3042,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":198675,"byte_end":198682,"line_start":3043,"line_end":3043,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":999},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":199989,"byte_end":200004,"line_start":3083,"line_end":3083,"column_start":12,"column_end":27},"name":"RawEntryBuilder","qualname":"::map::RawEntryBuilder","value":"RawEntryBuilder {  }","parent":null,"children":[{"krate":0,"index":1005}],"decl_id":null,"docs":" A builder for computing where in a [`HashMap`] a key-value pair would be stored.","sig":null,"attributes":[{"value":"/ A builder for computing where in a [`HashMap`] a key-value pair would be stored.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":198826,"byte_end":198910,"line_start":3049,"line_end":3049,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":198911,"byte_end":198914,"line_start":3050,"line_end":3050,"column_start":1,"column_end":4}},{"value":"/ See the [`HashMap::raw_entry`] docs for usage examples.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":198915,"byte_end":198974,"line_start":3051,"line_end":3051,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":198975,"byte_end":198978,"line_start":3052,"line_end":3052,"column_start":1,"column_end":4}},{"value":"/ [`HashMap::raw_entry`]: struct.HashMap.html#method.raw_entry","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":198979,"byte_end":199043,"line_start":3053,"line_end":3053,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":199044,"byte_end":199047,"line_start":3054,"line_end":3054,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":199048,"byte_end":199062,"line_start":3055,"line_end":3055,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":199063,"byte_end":199066,"line_start":3056,"line_end":3056,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":199067,"byte_end":199074,"line_start":3057,"line_end":3057,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryBuilder};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":199075,"byte_end":199131,"line_start":3058,"line_end":3058,"column_start":1,"column_end":57}},{"value":"/ use core::hash::{BuildHasher, Hash};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":199132,"byte_end":199172,"line_start":3059,"line_end":3059,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":199173,"byte_end":199176,"line_start":3060,"line_end":3060,"column_start":1,"column_end":4}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":199177,"byte_end":199210,"line_start":3061,"line_end":3061,"column_start":1,"column_end":34}},{"value":"/ map.extend([(1, 10), (2, 20), (3, 30)]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":199211,"byte_end":199255,"line_start":3062,"line_end":3062,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":199256,"byte_end":199259,"line_start":3063,"line_end":3063,"column_start":1,"column_end":4}},{"value":"/ fn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":199260,"byte_end":199349,"line_start":3064,"line_end":3064,"column_start":1,"column_end":90}},{"value":"/     use core::hash::Hasher;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":199350,"byte_end":199381,"line_start":3065,"line_end":3065,"column_start":1,"column_end":32}},{"value":"/     let mut state = hash_builder.build_hasher();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":199382,"byte_end":199434,"line_start":3066,"line_end":3066,"column_start":1,"column_end":53}},{"value":"/     key.hash(&mut state);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":199435,"byte_end":199464,"line_start":3067,"line_end":3067,"column_start":1,"column_end":30}},{"value":"/     state.finish()","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":199465,"byte_end":199487,"line_start":3068,"line_end":3068,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":199488,"byte_end":199493,"line_start":3069,"line_end":3069,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":199494,"byte_end":199497,"line_start":3070,"line_end":3070,"column_start":1,"column_end":4}},{"value":"/ for k in 0..6 {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":199498,"byte_end":199517,"line_start":3071,"line_end":3071,"column_start":1,"column_end":20}},{"value":"/     let hash = compute_hash(map.hasher(), &k);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":199518,"byte_end":199568,"line_start":3072,"line_end":3072,"column_start":1,"column_end":51}},{"value":"/     let v = map.get(&k).cloned();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":199569,"byte_end":199606,"line_start":3073,"line_end":3073,"column_start":1,"column_end":38}},{"value":"/     let kv = v.as_ref().map(|v| (&k, v));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":199607,"byte_end":199652,"line_start":3074,"line_end":3074,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":199653,"byte_end":199656,"line_start":3075,"line_end":3075,"column_start":1,"column_end":4}},{"value":"/     println!(\"Key: {} and value: {:?}\", k, v);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":199657,"byte_end":199707,"line_start":3076,"line_end":3076,"column_start":1,"column_end":51}},{"value":"/     let builder: RawEntryBuilder<_, _, _> = map.raw_entry();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":199708,"byte_end":199772,"line_start":3077,"line_end":3077,"column_start":1,"column_end":65}},{"value":"/     assert_eq!(builder.from_key(&k), kv);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":199773,"byte_end":199818,"line_start":3078,"line_end":3078,"column_start":1,"column_end":46}},{"value":"/     assert_eq!(map.raw_entry().from_hash(hash, |q| *q == k), kv);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":199819,"byte_end":199888,"line_start":3079,"line_end":3079,"column_start":1,"column_end":70}},{"value":"/     assert_eq!(map.raw_entry().from_key_hashed_nocheck(hash, &k), kv);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":199889,"byte_end":199963,"line_start":3080,"line_end":3080,"column_start":1,"column_end":75}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":199964,"byte_end":199969,"line_start":3081,"line_end":3081,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":199970,"byte_end":199977,"line_start":3082,"line_end":3082,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":200677,"byte_end":200685,"line_start":3103,"line_end":3103,"column_start":12,"column_end":20},"name":"from_key","qualname":"<RawEntryBuilderMut>::from_key","value":"pub fn from_key<Q: ?Sized>(Self, &Q) -> RawEntryMut where S: BuildHasher,\nK: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Creates a `RawEntryMut` from the given key.","sig":null,"attributes":[{"value":"/ Creates a `RawEntryMut` from the given key.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":200169,"byte_end":200216,"line_start":3088,"line_end":3088,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":200221,"byte_end":200224,"line_start":3089,"line_end":3089,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":200229,"byte_end":200243,"line_start":3090,"line_end":3090,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":200248,"byte_end":200251,"line_start":3091,"line_end":3091,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":200256,"byte_end":200263,"line_start":3092,"line_end":3092,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":200268,"byte_end":200320,"line_start":3093,"line_end":3093,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":200325,"byte_end":200328,"line_start":3094,"line_end":3094,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":200333,"byte_end":200386,"line_start":3095,"line_end":3095,"column_start":5,"column_end":58}},{"value":"/ let key = \"a\";","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":200391,"byte_end":200409,"line_start":3096,"line_end":3096,"column_start":5,"column_end":23}},{"value":"/ let entry: RawEntryMut<&str, u32, _> = map.raw_entry_mut().from_key(&key);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":200414,"byte_end":200492,"line_start":3097,"line_end":3097,"column_start":5,"column_end":83}},{"value":"/ entry.insert(key, 100);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":200497,"byte_end":200524,"line_start":3098,"line_end":3098,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(map[&\"a\"], 100);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":200529,"byte_end":200560,"line_start":3099,"line_end":3099,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":200565,"byte_end":200572,"line_start":3100,"line_end":3100,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":200613,"byte_end":200619,"line_start":3101,"line_end":3101,"column_start":41,"column_end":47}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":200626,"byte_end":200665,"line_start":3102,"line_end":3102,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":201821,"byte_end":201844,"line_start":3137,"line_end":3137,"column_start":12,"column_end":35},"name":"from_key_hashed_nocheck","qualname":"<RawEntryBuilderMut>::from_key_hashed_nocheck","value":"pub fn from_key_hashed_nocheck<Q: ?Sized>(Self, u64, &Q) -> RawEntryMut where\nK: Borrow<Q>, Q: Eq","parent":null,"children":[],"decl_id":null,"docs":" Creates a `RawEntryMut` from the given key and its hash.","sig":null,"attributes":[{"value":"/ Creates a `RawEntryMut` from the given key and its hash.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":200950,"byte_end":201010,"line_start":3113,"line_end":3113,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":201015,"byte_end":201018,"line_start":3114,"line_end":3114,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":201023,"byte_end":201037,"line_start":3115,"line_end":3115,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":201042,"byte_end":201045,"line_start":3116,"line_end":3116,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":201050,"byte_end":201057,"line_start":3117,"line_end":3117,"column_start":5,"column_end":12}},{"value":"/ use core::hash::{BuildHasher, Hash};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":201062,"byte_end":201102,"line_start":3118,"line_end":3118,"column_start":5,"column_end":45}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":201107,"byte_end":201159,"line_start":3119,"line_end":3119,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":201164,"byte_end":201167,"line_start":3120,"line_end":3120,"column_start":5,"column_end":8}},{"value":"/ fn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":201172,"byte_end":201261,"line_start":3121,"line_end":3121,"column_start":5,"column_end":94}},{"value":"/     use core::hash::Hasher;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":201266,"byte_end":201297,"line_start":3122,"line_end":3122,"column_start":5,"column_end":36}},{"value":"/     let mut state = hash_builder.build_hasher();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":201302,"byte_end":201354,"line_start":3123,"line_end":3123,"column_start":5,"column_end":57}},{"value":"/     key.hash(&mut state);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":201359,"byte_end":201388,"line_start":3124,"line_end":3124,"column_start":5,"column_end":34}},{"value":"/     state.finish()","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":201393,"byte_end":201415,"line_start":3125,"line_end":3125,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":201420,"byte_end":201425,"line_start":3126,"line_end":3126,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":201430,"byte_end":201433,"line_start":3127,"line_end":3127,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":201438,"byte_end":201491,"line_start":3128,"line_end":3128,"column_start":5,"column_end":58}},{"value":"/ let key = \"a\";","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":201496,"byte_end":201514,"line_start":3129,"line_end":3129,"column_start":5,"column_end":23}},{"value":"/ let hash = compute_hash(map.hasher(), &key);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":201519,"byte_end":201567,"line_start":3130,"line_end":3130,"column_start":5,"column_end":53}},{"value":"/ let entry: RawEntryMut<&str, u32, _> = map.raw_entry_mut().from_key_hashed_nocheck(hash, &key);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":201572,"byte_end":201671,"line_start":3131,"line_end":3131,"column_start":5,"column_end":104}},{"value":"/ entry.insert(key, 100);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":201676,"byte_end":201703,"line_start":3132,"line_end":3132,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(map[&\"a\"], 100);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":201708,"byte_end":201739,"line_start":3133,"line_end":3133,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":201744,"byte_end":201751,"line_start":3134,"line_end":3134,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":201756,"byte_end":201765,"line_start":3135,"line_end":3135,"column_start":5,"column_end":14}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":201770,"byte_end":201809,"line_start":3136,"line_end":3136,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1022},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":203009,"byte_end":203018,"line_start":3171,"line_end":3171,"column_start":12,"column_end":21},"name":"from_hash","qualname":"<RawEntryBuilderMut>::from_hash","value":"pub fn from_hash<F>(Self, u64, F) -> RawEntryMut where for<'b> F: FnMut(&'b K)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Creates a `RawEntryMut` from the given hash and matching function.","sig":null,"attributes":[{"value":"/ Creates a `RawEntryMut` from the given hash and matching function.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":202098,"byte_end":202168,"line_start":3147,"line_end":3147,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":202173,"byte_end":202176,"line_start":3148,"line_end":3148,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":202181,"byte_end":202195,"line_start":3149,"line_end":3149,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":202200,"byte_end":202203,"line_start":3150,"line_end":3150,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":202208,"byte_end":202215,"line_start":3151,"line_end":3151,"column_start":5,"column_end":12}},{"value":"/ use core::hash::{BuildHasher, Hash};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":202220,"byte_end":202260,"line_start":3152,"line_end":3152,"column_start":5,"column_end":45}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":202265,"byte_end":202317,"line_start":3153,"line_end":3153,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":202322,"byte_end":202325,"line_start":3154,"line_end":3154,"column_start":5,"column_end":8}},{"value":"/ fn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":202330,"byte_end":202419,"line_start":3155,"line_end":3155,"column_start":5,"column_end":94}},{"value":"/     use core::hash::Hasher;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":202424,"byte_end":202455,"line_start":3156,"line_end":3156,"column_start":5,"column_end":36}},{"value":"/     let mut state = hash_builder.build_hasher();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":202460,"byte_end":202512,"line_start":3157,"line_end":3157,"column_start":5,"column_end":57}},{"value":"/     key.hash(&mut state);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":202517,"byte_end":202546,"line_start":3158,"line_end":3158,"column_start":5,"column_end":34}},{"value":"/     state.finish()","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":202551,"byte_end":202573,"line_start":3159,"line_end":3159,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":202578,"byte_end":202583,"line_start":3160,"line_end":3160,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":202588,"byte_end":202591,"line_start":3161,"line_end":3161,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":202596,"byte_end":202649,"line_start":3162,"line_end":3162,"column_start":5,"column_end":58}},{"value":"/ let key = \"a\";","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":202654,"byte_end":202672,"line_start":3163,"line_end":3163,"column_start":5,"column_end":23}},{"value":"/ let hash = compute_hash(map.hasher(), &key);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":202677,"byte_end":202725,"line_start":3164,"line_end":3164,"column_start":5,"column_end":53}},{"value":"/ let entry: RawEntryMut<&str, u32, _> = map.raw_entry_mut().from_hash(hash, |k| k == &key);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":202730,"byte_end":202824,"line_start":3165,"line_end":3165,"column_start":5,"column_end":99}},{"value":"/ entry.insert(key, 100);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":202829,"byte_end":202856,"line_start":3166,"line_end":3166,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(map[&\"a\"], 100);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":202861,"byte_end":202892,"line_start":3167,"line_end":3167,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":202897,"byte_end":202904,"line_start":3168,"line_end":3168,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":202945,"byte_end":202951,"line_start":3169,"line_end":3169,"column_start":41,"column_end":47}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":202958,"byte_end":202997,"line_start":3170,"line_end":3170,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":204319,"byte_end":204327,"line_start":3211,"line_end":3211,"column_start":12,"column_end":20},"name":"from_key","qualname":"<RawEntryBuilder>::from_key","value":"pub fn from_key<Q: ?Sized>(Self, &Q) -> Option<(&'a K, &'a V)> where\nS: BuildHasher, K: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Access an immutable entry by key.","sig":null,"attributes":[{"value":"/ Access an immutable entry by key.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":203912,"byte_end":203949,"line_start":3198,"line_end":3198,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":203954,"byte_end":203957,"line_start":3199,"line_end":3199,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":203962,"byte_end":203976,"line_start":3200,"line_end":3200,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":203981,"byte_end":203984,"line_start":3201,"line_end":3201,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":203989,"byte_end":203996,"line_start":3202,"line_end":3202,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":204001,"byte_end":204028,"line_start":3203,"line_end":3203,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":204033,"byte_end":204036,"line_start":3204,"line_end":3204,"column_start":5,"column_end":8}},{"value":"/ let map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":204041,"byte_end":204107,"line_start":3205,"line_end":3205,"column_start":5,"column_end":71}},{"value":"/ let key = \"a\";","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":204112,"byte_end":204130,"line_start":3206,"line_end":3206,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(map.raw_entry().from_key(&key), Some((&\"a\", &100)));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":204135,"byte_end":204202,"line_start":3207,"line_end":3207,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":204207,"byte_end":204214,"line_start":3208,"line_end":3208,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":204255,"byte_end":204261,"line_start":3209,"line_end":3209,"column_start":41,"column_end":47}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":204268,"byte_end":204307,"line_start":3210,"line_end":3210,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1037},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":205394,"byte_end":205417,"line_start":3243,"line_end":3243,"column_start":12,"column_end":35},"name":"from_key_hashed_nocheck","qualname":"<RawEntryBuilder>::from_key_hashed_nocheck","value":"pub fn from_key_hashed_nocheck<Q: ?Sized>(Self, u64, &Q)\n-> Option<(&'a K, &'a V)> where K: Borrow<Q>, Q: Eq","parent":null,"children":[],"decl_id":null,"docs":" Access an immutable entry by a key and its hash.","sig":null,"attributes":[{"value":"/ Access an immutable entry by a key and its hash.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":204587,"byte_end":204639,"line_start":3221,"line_end":3221,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":204644,"byte_end":204647,"line_start":3222,"line_end":3222,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":204652,"byte_end":204666,"line_start":3223,"line_end":3223,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":204671,"byte_end":204674,"line_start":3224,"line_end":3224,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":204679,"byte_end":204686,"line_start":3225,"line_end":3225,"column_start":5,"column_end":12}},{"value":"/ use core::hash::{BuildHasher, Hash};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":204691,"byte_end":204731,"line_start":3226,"line_end":3226,"column_start":5,"column_end":45}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":204736,"byte_end":204763,"line_start":3227,"line_end":3227,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":204768,"byte_end":204771,"line_start":3228,"line_end":3228,"column_start":5,"column_end":8}},{"value":"/ fn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":204776,"byte_end":204865,"line_start":3229,"line_end":3229,"column_start":5,"column_end":94}},{"value":"/     use core::hash::Hasher;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":204870,"byte_end":204901,"line_start":3230,"line_end":3230,"column_start":5,"column_end":36}},{"value":"/     let mut state = hash_builder.build_hasher();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":204906,"byte_end":204958,"line_start":3231,"line_end":3231,"column_start":5,"column_end":57}},{"value":"/     key.hash(&mut state);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":204963,"byte_end":204992,"line_start":3232,"line_end":3232,"column_start":5,"column_end":34}},{"value":"/     state.finish()","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":204997,"byte_end":205019,"line_start":3233,"line_end":3233,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":205024,"byte_end":205029,"line_start":3234,"line_end":3234,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":205034,"byte_end":205037,"line_start":3235,"line_end":3235,"column_start":5,"column_end":8}},{"value":"/ let map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":205042,"byte_end":205108,"line_start":3236,"line_end":3236,"column_start":5,"column_end":71}},{"value":"/ let key = \"a\";","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":205113,"byte_end":205131,"line_start":3237,"line_end":3237,"column_start":5,"column_end":23}},{"value":"/ let hash = compute_hash(map.hasher(), &key);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":205136,"byte_end":205184,"line_start":3238,"line_end":3238,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(map.raw_entry().from_key_hashed_nocheck(hash, &key), Some((&\"a\", &100)));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":205189,"byte_end":205277,"line_start":3239,"line_end":3239,"column_start":5,"column_end":93}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":205282,"byte_end":205289,"line_start":3240,"line_end":3240,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":205330,"byte_end":205336,"line_start":3241,"line_end":3241,"column_start":41,"column_end":47}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":205343,"byte_end":205382,"line_start":3242,"line_end":3242,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":206738,"byte_end":206747,"line_start":3284,"line_end":3284,"column_start":12,"column_end":21},"name":"from_hash","qualname":"<RawEntryBuilder>::from_hash","value":"pub fn from_hash<F>(Self, u64, F) -> Option<(&'a K, &'a V)> where F: FnMut(&K)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Access an immutable entry by hash and matching function.","sig":null,"attributes":[{"value":"/ Access an immutable entry by hash and matching function.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":205928,"byte_end":205988,"line_start":3262,"line_end":3262,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":205993,"byte_end":205996,"line_start":3263,"line_end":3263,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":206001,"byte_end":206015,"line_start":3264,"line_end":3264,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":206020,"byte_end":206023,"line_start":3265,"line_end":3265,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":206028,"byte_end":206035,"line_start":3266,"line_end":3266,"column_start":5,"column_end":12}},{"value":"/ use core::hash::{BuildHasher, Hash};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":206040,"byte_end":206080,"line_start":3267,"line_end":3267,"column_start":5,"column_end":45}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":206085,"byte_end":206112,"line_start":3268,"line_end":3268,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":206117,"byte_end":206120,"line_start":3269,"line_end":3269,"column_start":5,"column_end":8}},{"value":"/ fn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":206125,"byte_end":206214,"line_start":3270,"line_end":3270,"column_start":5,"column_end":94}},{"value":"/     use core::hash::Hasher;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":206219,"byte_end":206250,"line_start":3271,"line_end":3271,"column_start":5,"column_end":36}},{"value":"/     let mut state = hash_builder.build_hasher();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":206255,"byte_end":206307,"line_start":3272,"line_end":3272,"column_start":5,"column_end":57}},{"value":"/     key.hash(&mut state);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":206312,"byte_end":206341,"line_start":3273,"line_end":3273,"column_start":5,"column_end":34}},{"value":"/     state.finish()","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":206346,"byte_end":206368,"line_start":3274,"line_end":3274,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":206373,"byte_end":206378,"line_start":3275,"line_end":3275,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":206383,"byte_end":206386,"line_start":3276,"line_end":3276,"column_start":5,"column_end":8}},{"value":"/ let map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":206391,"byte_end":206457,"line_start":3277,"line_end":3277,"column_start":5,"column_end":71}},{"value":"/ let key = \"a\";","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":206462,"byte_end":206480,"line_start":3278,"line_end":3278,"column_start":5,"column_end":23}},{"value":"/ let hash = compute_hash(map.hasher(), &key);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":206485,"byte_end":206533,"line_start":3279,"line_end":3279,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(map.raw_entry().from_hash(hash, |k| k == &key), Some((&\"a\", &100)));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":206538,"byte_end":206621,"line_start":3280,"line_end":3280,"column_start":5,"column_end":88}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":206626,"byte_end":206633,"line_start":3281,"line_end":3281,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":206674,"byte_end":206680,"line_start":3282,"line_end":3282,"column_start":41,"column_end":47}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":206687,"byte_end":206726,"line_start":3283,"line_end":3283,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1050},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":207416,"byte_end":207422,"line_start":3306,"line_end":3306,"column_start":12,"column_end":18},"name":"insert","qualname":"<RawEntryMut>::insert","value":"pub fn insert(Self, K, V) -> RawOccupiedEntryMut where K: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns a RawOccupiedEntryMut.","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns a RawOccupiedEntryMut.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":206972,"byte_end":207039,"line_start":3293,"line_end":3293,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":207044,"byte_end":207047,"line_start":3294,"line_end":3294,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":207052,"byte_end":207066,"line_start":3295,"line_end":3295,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":207071,"byte_end":207074,"line_start":3296,"line_end":3296,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":207079,"byte_end":207086,"line_start":3297,"line_end":3297,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":207091,"byte_end":207118,"line_start":3298,"line_end":3298,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":207123,"byte_end":207126,"line_start":3299,"line_end":3299,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":207131,"byte_end":207184,"line_start":3300,"line_end":3300,"column_start":5,"column_end":58}},{"value":"/ let entry = map.raw_entry_mut().from_key(\"horseyland\").insert(\"horseyland\", 37);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":207189,"byte_end":207273,"line_start":3301,"line_end":3301,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":207278,"byte_end":207281,"line_start":3302,"line_end":3302,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(entry.remove_entry(), (\"horseyland\", 37));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":207286,"byte_end":207343,"line_start":3303,"line_end":3303,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":207348,"byte_end":207355,"line_start":3304,"line_end":3304,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":207396,"byte_end":207402,"line_start":3305,"line_end":3305,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1051},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":208405,"byte_end":208414,"line_start":3337,"line_end":3337,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<RawEntryMut>::or_insert","value":"pub fn or_insert(Self, K, V) -> (&'a mut K, &'a mut V) where K: Hash,\nS: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and returns\n mutable references to the key and value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default if empty, and returns","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":207782,"byte_end":207864,"line_start":3320,"line_end":3320,"column_start":5,"column_end":87}},{"value":"/ mutable references to the key and value in the entry.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":207869,"byte_end":207926,"line_start":3321,"line_end":3321,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":207931,"byte_end":207934,"line_start":3322,"line_end":3322,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":207939,"byte_end":207953,"line_start":3323,"line_end":3323,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":207958,"byte_end":207961,"line_start":3324,"line_end":3324,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":207966,"byte_end":207973,"line_start":3325,"line_end":3325,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":207978,"byte_end":208005,"line_start":3326,"line_end":3326,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":208010,"byte_end":208013,"line_start":3327,"line_end":3327,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":208018,"byte_end":208071,"line_start":3328,"line_end":3328,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":208076,"byte_end":208079,"line_start":3329,"line_end":3329,"column_start":5,"column_end":8}},{"value":"/ map.raw_entry_mut().from_key(\"poneyland\").or_insert(\"poneyland\", 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":208084,"byte_end":208156,"line_start":3330,"line_end":3330,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(map[\"poneyland\"], 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":208161,"byte_end":208197,"line_start":3331,"line_end":3331,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":208202,"byte_end":208205,"line_start":3332,"line_end":3332,"column_start":5,"column_end":8}},{"value":"/ *map.raw_entry_mut().from_key(\"poneyland\").or_insert(\"poneyland\", 10).1 *= 2;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":208210,"byte_end":208291,"line_start":3333,"line_end":3333,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(map[\"poneyland\"], 6);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":208296,"byte_end":208332,"line_start":3334,"line_end":3334,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":208337,"byte_end":208344,"line_start":3335,"line_end":3335,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":208385,"byte_end":208391,"line_start":3336,"line_end":3336,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1052},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":209318,"byte_end":209332,"line_start":3365,"line_end":3365,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<RawEntryMut>::or_insert_with","value":"pub fn or_insert_with<F>(Self, F) -> (&'a mut K, &'a mut V) where F: FnOnce()\n-> (K, V), K: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default function if empty,\n and returns mutable references to the key and value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the result of the default function if empty,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":208728,"byte_end":208821,"line_start":3348,"line_end":3348,"column_start":5,"column_end":98}},{"value":"/ and returns mutable references to the key and value in the entry.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":208826,"byte_end":208895,"line_start":3349,"line_end":3349,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":208900,"byte_end":208903,"line_start":3350,"line_end":3350,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":208908,"byte_end":208922,"line_start":3351,"line_end":3351,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":208927,"byte_end":208930,"line_start":3352,"line_end":3352,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":208935,"byte_end":208942,"line_start":3353,"line_end":3353,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":208947,"byte_end":208974,"line_start":3354,"line_end":3354,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":208979,"byte_end":208982,"line_start":3355,"line_end":3355,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, String> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":208987,"byte_end":209043,"line_start":3356,"line_end":3356,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":209048,"byte_end":209051,"line_start":3357,"line_end":3357,"column_start":5,"column_end":8}},{"value":"/ map.raw_entry_mut().from_key(\"poneyland\").or_insert_with(|| {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":209056,"byte_end":209121,"line_start":3358,"line_end":3358,"column_start":5,"column_end":70}},{"value":"/     (\"poneyland\", \"hoho\".to_string())","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":209126,"byte_end":209167,"line_start":3359,"line_end":3359,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":209172,"byte_end":209179,"line_start":3360,"line_end":3360,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":209184,"byte_end":209187,"line_start":3361,"line_end":3361,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], \"hoho\".to_string());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":209192,"byte_end":209245,"line_start":3362,"line_end":3362,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":209250,"byte_end":209257,"line_start":3363,"line_end":3363,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":209298,"byte_end":209304,"line_start":3364,"line_end":3364,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1054},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":210428,"byte_end":210438,"line_start":3403,"line_end":3403,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<RawEntryMut>::and_modify","value":"pub fn and_modify<F>(Self, F) -> Self where F: FnOnce(&mut K, &mut V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Provides in-place mutable access to an occupied entry before any\n potential inserts into the map.","sig":null,"attributes":[{"value":"/ Provides in-place mutable access to an occupied entry before any","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":209711,"byte_end":209779,"line_start":3380,"line_end":3380,"column_start":5,"column_end":73}},{"value":"/ potential inserts into the map.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":209784,"byte_end":209819,"line_start":3381,"line_end":3381,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":209824,"byte_end":209827,"line_start":3382,"line_end":3382,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":209832,"byte_end":209846,"line_start":3383,"line_end":3383,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":209851,"byte_end":209854,"line_start":3384,"line_end":3384,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":209859,"byte_end":209866,"line_start":3385,"line_end":3385,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":209871,"byte_end":209898,"line_start":3386,"line_end":3386,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":209903,"byte_end":209906,"line_start":3387,"line_end":3387,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":209911,"byte_end":209964,"line_start":3388,"line_end":3388,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":209969,"byte_end":209972,"line_start":3389,"line_end":3389,"column_start":5,"column_end":8}},{"value":"/ map.raw_entry_mut()","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":209977,"byte_end":210000,"line_start":3390,"line_end":3390,"column_start":5,"column_end":28}},{"value":"/    .from_key(\"poneyland\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":210005,"byte_end":210034,"line_start":3391,"line_end":3391,"column_start":5,"column_end":34}},{"value":"/    .and_modify(|_k, v| { *v += 1 })","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":210039,"byte_end":210078,"line_start":3392,"line_end":3392,"column_start":5,"column_end":44}},{"value":"/    .or_insert(\"poneyland\", 42);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":210083,"byte_end":210118,"line_start":3393,"line_end":3393,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(map[\"poneyland\"], 42);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":210123,"byte_end":210160,"line_start":3394,"line_end":3394,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":210165,"byte_end":210168,"line_start":3395,"line_end":3395,"column_start":5,"column_end":8}},{"value":"/ map.raw_entry_mut()","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":210173,"byte_end":210196,"line_start":3396,"line_end":3396,"column_start":5,"column_end":28}},{"value":"/    .from_key(\"poneyland\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":210201,"byte_end":210230,"line_start":3397,"line_end":3397,"column_start":5,"column_end":34}},{"value":"/    .and_modify(|_k, v| { *v += 1 })","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":210235,"byte_end":210274,"line_start":3398,"line_end":3398,"column_start":5,"column_end":44}},{"value":"/    .or_insert(\"poneyland\", 0);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":210279,"byte_end":210313,"line_start":3399,"line_end":3399,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(map[\"poneyland\"], 43);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":210318,"byte_end":210355,"line_start":3400,"line_end":3400,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":210360,"byte_end":210367,"line_start":3401,"line_end":3401,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":210408,"byte_end":210414,"line_start":3402,"line_end":3402,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1056},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":212524,"byte_end":212546,"line_start":3475,"line_end":3475,"column_start":12,"column_end":34},"name":"and_replace_entry_with","qualname":"<RawEntryMut>::and_replace_entry_with","value":"pub fn and_replace_entry_with<F>(Self, F) -> Self where F: FnOnce(&K, V) ->\nOption<V>","parent":null,"children":[],"decl_id":null,"docs":" Provides shared access to the key and owned access to the value of\n an occupied entry and allows to replace or remove it based on the\n value of the returned option.","sig":null,"attributes":[{"value":"/ Provides shared access to the key and owned access to the value of","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":210859,"byte_end":210929,"line_start":3419,"line_end":3419,"column_start":5,"column_end":75}},{"value":"/ an occupied entry and allows to replace or remove it based on the","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":210934,"byte_end":211003,"line_start":3420,"line_end":3420,"column_start":5,"column_end":74}},{"value":"/ value of the returned option.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":211008,"byte_end":211041,"line_start":3421,"line_end":3421,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":211046,"byte_end":211049,"line_start":3422,"line_end":3422,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":211054,"byte_end":211068,"line_start":3423,"line_end":3423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":211073,"byte_end":211076,"line_start":3424,"line_end":3424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":211081,"byte_end":211088,"line_start":3425,"line_end":3425,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":211093,"byte_end":211120,"line_start":3426,"line_end":3426,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::RawEntryMut;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":211125,"byte_end":211166,"line_start":3427,"line_end":3427,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":211171,"byte_end":211174,"line_start":3428,"line_end":3428,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":211179,"byte_end":211232,"line_start":3429,"line_end":3429,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":211237,"byte_end":211240,"line_start":3430,"line_end":3430,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":211245,"byte_end":211264,"line_start":3431,"line_end":3431,"column_start":5,"column_end":24}},{"value":"/     .raw_entry_mut()","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":211269,"byte_end":211293,"line_start":3432,"line_end":3432,"column_start":5,"column_end":29}},{"value":"/     .from_key(\"poneyland\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":211298,"byte_end":211328,"line_start":3433,"line_end":3433,"column_start":5,"column_end":35}},{"value":"/     .and_replace_entry_with(|_k, _v| panic!());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":211333,"byte_end":211384,"line_start":3434,"line_end":3434,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":211389,"byte_end":211392,"line_start":3435,"line_end":3435,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":211397,"byte_end":211414,"line_start":3436,"line_end":3436,"column_start":5,"column_end":22}},{"value":"/     RawEntryMut::Vacant(_) => {},","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":211419,"byte_end":211456,"line_start":3437,"line_end":3437,"column_start":5,"column_end":42}},{"value":"/     RawEntryMut::Occupied(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":211461,"byte_end":211506,"line_start":3438,"line_end":3438,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":211511,"byte_end":211516,"line_start":3439,"line_end":3439,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":211521,"byte_end":211524,"line_start":3440,"line_end":3440,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"poneyland\", 42);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":211529,"byte_end":211561,"line_start":3441,"line_end":3441,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":211566,"byte_end":211569,"line_start":3442,"line_end":3442,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":211574,"byte_end":211593,"line_start":3443,"line_end":3443,"column_start":5,"column_end":24}},{"value":"/     .raw_entry_mut()","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":211598,"byte_end":211622,"line_start":3444,"line_end":3444,"column_start":5,"column_end":29}},{"value":"/     .from_key(\"poneyland\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":211627,"byte_end":211657,"line_start":3445,"line_end":3445,"column_start":5,"column_end":35}},{"value":"/     .and_replace_entry_with(|k, v| {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":211662,"byte_end":211702,"line_start":3446,"line_end":3446,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(k, &\"poneyland\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":211707,"byte_end":211747,"line_start":3447,"line_end":3447,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(v, 42);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":211752,"byte_end":211782,"line_start":3448,"line_end":3448,"column_start":5,"column_end":35}},{"value":"/         Some(v + 1)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":211787,"byte_end":211810,"line_start":3449,"line_end":3449,"column_start":5,"column_end":28}},{"value":"/     });","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":211815,"byte_end":211826,"line_start":3450,"line_end":3450,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":211831,"byte_end":211834,"line_start":3451,"line_end":3451,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":211839,"byte_end":211856,"line_start":3452,"line_end":3452,"column_start":5,"column_end":22}},{"value":"/     RawEntryMut::Occupied(e) => {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":211861,"byte_end":211898,"line_start":3453,"line_end":3453,"column_start":5,"column_end":42}},{"value":"/         assert_eq!(e.key(), &\"poneyland\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":211903,"byte_end":211949,"line_start":3454,"line_end":3454,"column_start":5,"column_end":51}},{"value":"/         assert_eq!(e.get(), &43);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":211954,"byte_end":211991,"line_start":3455,"line_end":3455,"column_start":5,"column_end":42}},{"value":"/     },","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":211996,"byte_end":212006,"line_start":3456,"line_end":3456,"column_start":5,"column_end":15}},{"value":"/     RawEntryMut::Vacant(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":212011,"byte_end":212054,"line_start":3457,"line_end":3457,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":212059,"byte_end":212064,"line_start":3458,"line_end":3458,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":212069,"byte_end":212072,"line_start":3459,"line_end":3459,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 43);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":212077,"byte_end":212114,"line_start":3460,"line_end":3460,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":212119,"byte_end":212122,"line_start":3461,"line_end":3461,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":212127,"byte_end":212146,"line_start":3462,"line_end":3462,"column_start":5,"column_end":24}},{"value":"/     .raw_entry_mut()","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":212151,"byte_end":212175,"line_start":3463,"line_end":3463,"column_start":5,"column_end":29}},{"value":"/     .from_key(\"poneyland\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":212180,"byte_end":212210,"line_start":3464,"line_end":3464,"column_start":5,"column_end":35}},{"value":"/     .and_replace_entry_with(|_k, _v| None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":212215,"byte_end":212262,"line_start":3465,"line_end":3465,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":212267,"byte_end":212270,"line_start":3466,"line_end":3466,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":212275,"byte_end":212292,"line_start":3467,"line_end":3467,"column_start":5,"column_end":22}},{"value":"/     RawEntryMut::Vacant(_) => {},","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":212297,"byte_end":212334,"line_start":3468,"line_end":3468,"column_start":5,"column_end":42}},{"value":"/     RawEntryMut::Occupied(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":212339,"byte_end":212384,"line_start":3469,"line_end":3469,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":212389,"byte_end":212394,"line_start":3470,"line_end":3470,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":212399,"byte_end":212402,"line_start":3471,"line_end":3471,"column_start":5,"column_end":8}},{"value":"/ assert!(!map.contains_key(\"poneyland\"));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":212407,"byte_end":212451,"line_start":3472,"line_end":3472,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":212456,"byte_end":212463,"line_start":3473,"line_end":3473,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":212504,"byte_end":212510,"line_start":3474,"line_end":3474,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1064},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":213352,"byte_end":213355,"line_start":3502,"line_end":3502,"column_start":12,"column_end":15},"name":"key","qualname":"<RawOccupiedEntryMut>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key in the entry.","sig":null,"attributes":[{"value":"/ Gets a reference to the key in the entry.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":212864,"byte_end":212909,"line_start":3487,"line_end":3487,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":212914,"byte_end":212917,"line_start":3488,"line_end":3488,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":212922,"byte_end":212936,"line_start":3489,"line_end":3489,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":212941,"byte_end":212944,"line_start":3490,"line_end":3490,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":212949,"byte_end":212956,"line_start":3491,"line_end":3491,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":212961,"byte_end":213013,"line_start":3492,"line_end":3492,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":213018,"byte_end":213021,"line_start":3493,"line_end":3493,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":213026,"byte_end":213096,"line_start":3494,"line_end":3494,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":213101,"byte_end":213104,"line_start":3495,"line_end":3495,"column_start":5,"column_end":8}},{"value":"/ match map.raw_entry_mut().from_key(&\"a\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":213109,"byte_end":213155,"line_start":3496,"line_end":3496,"column_start":5,"column_end":51}},{"value":"/     RawEntryMut::Vacant(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":213160,"byte_end":213203,"line_start":3497,"line_end":3497,"column_start":5,"column_end":48}},{"value":"/     RawEntryMut::Occupied(o) => assert_eq!(o.key(), &\"a\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":213208,"byte_end":213269,"line_start":3498,"line_end":3498,"column_start":5,"column_end":66}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":213274,"byte_end":213279,"line_start":3499,"line_end":3499,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":213284,"byte_end":213291,"line_start":3500,"line_end":3500,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":213332,"byte_end":213338,"line_start":3501,"line_end":3501,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1065},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":214354,"byte_end":214361,"line_start":3533,"line_end":3533,"column_start":12,"column_end":19},"name":"key_mut","qualname":"<RawOccupiedEntryMut>::key_mut","value":"pub fn key_mut(&mut Self) -> &mut K","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the key in the entry.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the key in the entry.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":213423,"byte_end":213476,"line_start":3506,"line_end":3506,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":213481,"byte_end":213484,"line_start":3507,"line_end":3507,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":213489,"byte_end":213503,"line_start":3508,"line_end":3508,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":213508,"byte_end":213511,"line_start":3509,"line_end":3509,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":213516,"byte_end":213523,"line_start":3510,"line_end":3510,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":213528,"byte_end":213580,"line_start":3511,"line_end":3511,"column_start":5,"column_end":57}},{"value":"/ use std::rc::Rc;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":213585,"byte_end":213605,"line_start":3512,"line_end":3512,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":213610,"byte_end":213613,"line_start":3513,"line_end":3513,"column_start":5,"column_end":8}},{"value":"/ let key_one = Rc::new(\"a\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":213618,"byte_end":213649,"line_start":3514,"line_end":3514,"column_start":5,"column_end":36}},{"value":"/ let key_two = Rc::new(\"a\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":213654,"byte_end":213685,"line_start":3515,"line_end":3515,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":213690,"byte_end":213693,"line_start":3516,"line_end":3516,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<Rc<&str>, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":213698,"byte_end":213755,"line_start":3517,"line_end":3517,"column_start":5,"column_end":62}},{"value":"/ map.insert(key_one.clone(), 10);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":213760,"byte_end":213796,"line_start":3518,"line_end":3518,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":213801,"byte_end":213804,"line_start":3519,"line_end":3519,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[&key_one], 10);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":213809,"byte_end":213843,"line_start":3520,"line_end":3520,"column_start":5,"column_end":39}},{"value":"/ assert!(Rc::strong_count(&key_one) == 2 && Rc::strong_count(&key_two) == 1);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":213848,"byte_end":213928,"line_start":3521,"line_end":3521,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":213933,"byte_end":213936,"line_start":3522,"line_end":3522,"column_start":5,"column_end":8}},{"value":"/ match map.raw_entry_mut().from_key(&key_one) {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":213941,"byte_end":213991,"line_start":3523,"line_end":3523,"column_start":5,"column_end":55}},{"value":"/     RawEntryMut::Vacant(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":213996,"byte_end":214039,"line_start":3524,"line_end":3524,"column_start":5,"column_end":48}},{"value":"/     RawEntryMut::Occupied(mut o) => {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":214044,"byte_end":214085,"line_start":3525,"line_end":3525,"column_start":5,"column_end":46}},{"value":"/         *o.key_mut() = key_two.clone();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":214090,"byte_end":214133,"line_start":3526,"line_end":3526,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":214138,"byte_end":214147,"line_start":3527,"line_end":3527,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":214152,"byte_end":214157,"line_start":3528,"line_end":3528,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map[&key_two], 10);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":214162,"byte_end":214196,"line_start":3529,"line_end":3529,"column_start":5,"column_end":39}},{"value":"/ assert!(Rc::strong_count(&key_one) == 1 && Rc::strong_count(&key_two) == 2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":214201,"byte_end":214281,"line_start":3530,"line_end":3530,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":214286,"byte_end":214293,"line_start":3531,"line_end":3531,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":214334,"byte_end":214340,"line_start":3532,"line_end":3532,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1066},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":215492,"byte_end":215500,"line_start":3567,"line_end":3567,"column_start":12,"column_end":20},"name":"into_key","qualname":"<RawOccupiedEntryMut>::into_key","value":"pub fn into_key(Self) -> &'a mut K","parent":null,"children":[],"decl_id":null,"docs":" Converts the entry into a mutable reference to the key in the entry\n with a lifetime bound to the map itself.","sig":null,"attributes":[{"value":"/ Converts the entry into a mutable reference to the key in the entry","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":214441,"byte_end":214512,"line_start":3537,"line_end":3537,"column_start":5,"column_end":76}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":214517,"byte_end":214561,"line_start":3538,"line_end":3538,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":214566,"byte_end":214569,"line_start":3539,"line_end":3539,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":214574,"byte_end":214588,"line_start":3540,"line_end":3540,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":214593,"byte_end":214596,"line_start":3541,"line_end":3541,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":214601,"byte_end":214608,"line_start":3542,"line_end":3542,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":214613,"byte_end":214665,"line_start":3543,"line_end":3543,"column_start":5,"column_end":57}},{"value":"/ use std::rc::Rc;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":214670,"byte_end":214690,"line_start":3544,"line_end":3544,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":214695,"byte_end":214698,"line_start":3545,"line_end":3545,"column_start":5,"column_end":8}},{"value":"/ let key_one = Rc::new(\"a\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":214703,"byte_end":214734,"line_start":3546,"line_end":3546,"column_start":5,"column_end":36}},{"value":"/ let key_two = Rc::new(\"a\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":214739,"byte_end":214770,"line_start":3547,"line_end":3547,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":214775,"byte_end":214778,"line_start":3548,"line_end":3548,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<Rc<&str>, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":214783,"byte_end":214840,"line_start":3549,"line_end":3549,"column_start":5,"column_end":62}},{"value":"/ map.insert(key_one.clone(), 10);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":214845,"byte_end":214881,"line_start":3550,"line_end":3550,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":214886,"byte_end":214889,"line_start":3551,"line_end":3551,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[&key_one], 10);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":214894,"byte_end":214928,"line_start":3552,"line_end":3552,"column_start":5,"column_end":39}},{"value":"/ assert!(Rc::strong_count(&key_one) == 2 && Rc::strong_count(&key_two) == 1);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":214933,"byte_end":215013,"line_start":3553,"line_end":3553,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":215018,"byte_end":215021,"line_start":3554,"line_end":3554,"column_start":5,"column_end":8}},{"value":"/ let inside_key: &mut Rc<&str>;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":215026,"byte_end":215060,"line_start":3555,"line_end":3555,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":215065,"byte_end":215068,"line_start":3556,"line_end":3556,"column_start":5,"column_end":8}},{"value":"/ match map.raw_entry_mut().from_key(&key_one) {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":215073,"byte_end":215123,"line_start":3557,"line_end":3557,"column_start":5,"column_end":55}},{"value":"/     RawEntryMut::Vacant(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":215128,"byte_end":215171,"line_start":3558,"line_end":3558,"column_start":5,"column_end":48}},{"value":"/     RawEntryMut::Occupied(o) => inside_key = o.into_key(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":215176,"byte_end":215238,"line_start":3559,"line_end":3559,"column_start":5,"column_end":67}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":215243,"byte_end":215248,"line_start":3560,"line_end":3560,"column_start":5,"column_end":10}},{"value":"/ *inside_key = key_two.clone();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":215253,"byte_end":215287,"line_start":3561,"line_end":3561,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":215292,"byte_end":215295,"line_start":3562,"line_end":3562,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[&key_two], 10);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":215300,"byte_end":215334,"line_start":3563,"line_end":3563,"column_start":5,"column_end":39}},{"value":"/ assert!(Rc::strong_count(&key_one) == 1 && Rc::strong_count(&key_two) == 2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":215339,"byte_end":215419,"line_start":3564,"line_end":3564,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":215424,"byte_end":215431,"line_start":3565,"line_end":3565,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":215472,"byte_end":215478,"line_start":3566,"line_end":3566,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1067},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":216069,"byte_end":216072,"line_start":3586,"line_end":3586,"column_start":12,"column_end":15},"name":"get","qualname":"<RawOccupiedEntryMut>::get","value":"pub fn get(&Self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Gets a reference to the value in the entry.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":215578,"byte_end":215625,"line_start":3571,"line_end":3571,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":215630,"byte_end":215633,"line_start":3572,"line_end":3572,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":215638,"byte_end":215652,"line_start":3573,"line_end":3573,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":215657,"byte_end":215660,"line_start":3574,"line_end":3574,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":215665,"byte_end":215672,"line_start":3575,"line_end":3575,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":215677,"byte_end":215729,"line_start":3576,"line_end":3576,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":215734,"byte_end":215737,"line_start":3577,"line_end":3577,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":215742,"byte_end":215812,"line_start":3578,"line_end":3578,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":215817,"byte_end":215820,"line_start":3579,"line_end":3579,"column_start":5,"column_end":8}},{"value":"/ match map.raw_entry_mut().from_key(&\"a\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":215825,"byte_end":215871,"line_start":3580,"line_end":3580,"column_start":5,"column_end":51}},{"value":"/     RawEntryMut::Vacant(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":215876,"byte_end":215919,"line_start":3581,"line_end":3581,"column_start":5,"column_end":48}},{"value":"/     RawEntryMut::Occupied(o) => assert_eq!(o.get(), &100),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":215924,"byte_end":215986,"line_start":3582,"line_end":3582,"column_start":5,"column_end":67}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":215991,"byte_end":215996,"line_start":3583,"line_end":3583,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":216001,"byte_end":216008,"line_start":3584,"line_end":3584,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":216049,"byte_end":216055,"line_start":3585,"line_end":3585,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":216814,"byte_end":216822,"line_start":3611,"line_end":3611,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<RawOccupiedEntryMut>::into_mut","value":"pub fn into_mut(Self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Converts the OccupiedEntry into a mutable reference to the value in the entry\n with a lifetime bound to the map itself.","sig":null,"attributes":[{"value":"/ Converts the OccupiedEntry into a mutable reference to the value in the entry","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":216140,"byte_end":216221,"line_start":3590,"line_end":3590,"column_start":5,"column_end":86}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":216226,"byte_end":216270,"line_start":3591,"line_end":3591,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":216275,"byte_end":216278,"line_start":3592,"line_end":3592,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":216283,"byte_end":216297,"line_start":3593,"line_end":3593,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":216302,"byte_end":216305,"line_start":3594,"line_end":3594,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":216310,"byte_end":216317,"line_start":3595,"line_end":3595,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":216322,"byte_end":216374,"line_start":3596,"line_end":3596,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":216379,"byte_end":216382,"line_start":3597,"line_end":3597,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":216387,"byte_end":216457,"line_start":3598,"line_end":3598,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":216462,"byte_end":216465,"line_start":3599,"line_end":3599,"column_start":5,"column_end":8}},{"value":"/ let value: &mut u32;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":216470,"byte_end":216494,"line_start":3600,"line_end":3600,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":216499,"byte_end":216502,"line_start":3601,"line_end":3601,"column_start":5,"column_end":8}},{"value":"/ match map.raw_entry_mut().from_key(&\"a\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":216507,"byte_end":216553,"line_start":3602,"line_end":3602,"column_start":5,"column_end":51}},{"value":"/     RawEntryMut::Vacant(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":216558,"byte_end":216601,"line_start":3603,"line_end":3603,"column_start":5,"column_end":48}},{"value":"/     RawEntryMut::Occupied(o) => value = o.into_mut(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":216606,"byte_end":216663,"line_start":3604,"line_end":3604,"column_start":5,"column_end":62}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":216668,"byte_end":216673,"line_start":3605,"line_end":3605,"column_start":5,"column_end":10}},{"value":"/ *value += 900;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":216678,"byte_end":216696,"line_start":3606,"line_end":3606,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":216701,"byte_end":216704,"line_start":3607,"line_end":3607,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[&\"a\"], 1000);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":216709,"byte_end":216741,"line_start":3608,"line_end":3608,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":216746,"byte_end":216753,"line_start":3609,"line_end":3609,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":216794,"byte_end":216800,"line_start":3610,"line_end":3610,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1069},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":217442,"byte_end":217449,"line_start":3632,"line_end":3632,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<RawOccupiedEntryMut>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the value in the entry.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":216900,"byte_end":216955,"line_start":3615,"line_end":3615,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":216960,"byte_end":216963,"line_start":3616,"line_end":3616,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":216968,"byte_end":216982,"line_start":3617,"line_end":3617,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":216987,"byte_end":216990,"line_start":3618,"line_end":3618,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":216995,"byte_end":217002,"line_start":3619,"line_end":3619,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":217007,"byte_end":217059,"line_start":3620,"line_end":3620,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":217064,"byte_end":217067,"line_start":3621,"line_end":3621,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":217072,"byte_end":217142,"line_start":3622,"line_end":3622,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":217147,"byte_end":217150,"line_start":3623,"line_end":3623,"column_start":5,"column_end":8}},{"value":"/ match map.raw_entry_mut().from_key(&\"a\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":217155,"byte_end":217201,"line_start":3624,"line_end":3624,"column_start":5,"column_end":51}},{"value":"/     RawEntryMut::Vacant(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":217206,"byte_end":217249,"line_start":3625,"line_end":3625,"column_start":5,"column_end":48}},{"value":"/     RawEntryMut::Occupied(mut o) => *o.get_mut() += 900,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":217254,"byte_end":217314,"line_start":3626,"line_end":3626,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":217319,"byte_end":217324,"line_start":3627,"line_end":3627,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":217329,"byte_end":217332,"line_start":3628,"line_end":3628,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[&\"a\"], 1000);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":217337,"byte_end":217369,"line_start":3629,"line_end":3629,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":217374,"byte_end":217381,"line_start":3630,"line_end":3630,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":217422,"byte_end":217428,"line_start":3631,"line_end":3631,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":218046,"byte_end":218059,"line_start":3651,"line_end":3651,"column_start":12,"column_end":25},"name":"get_key_value","qualname":"<RawOccupiedEntryMut>::get_key_value","value":"pub fn get_key_value(&Self) -> (&K, &V)","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key and value in the entry.","sig":null,"attributes":[{"value":"/ Gets a reference to the key and value in the entry.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":217529,"byte_end":217584,"line_start":3636,"line_end":3636,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":217589,"byte_end":217592,"line_start":3637,"line_end":3637,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":217597,"byte_end":217611,"line_start":3638,"line_end":3638,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":217616,"byte_end":217619,"line_start":3639,"line_end":3639,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":217624,"byte_end":217631,"line_start":3640,"line_end":3640,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":217636,"byte_end":217688,"line_start":3641,"line_end":3641,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":217693,"byte_end":217696,"line_start":3642,"line_end":3642,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":217701,"byte_end":217771,"line_start":3643,"line_end":3643,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":217776,"byte_end":217779,"line_start":3644,"line_end":3644,"column_start":5,"column_end":8}},{"value":"/ match map.raw_entry_mut().from_key(&\"a\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":217784,"byte_end":217830,"line_start":3645,"line_end":3645,"column_start":5,"column_end":51}},{"value":"/     RawEntryMut::Vacant(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":217835,"byte_end":217878,"line_start":3646,"line_end":3646,"column_start":5,"column_end":48}},{"value":"/     RawEntryMut::Occupied(o) => assert_eq!(o.get_key_value(), (&\"a\", &100)),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":217883,"byte_end":217963,"line_start":3647,"line_end":3647,"column_start":5,"column_end":85}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":217968,"byte_end":217973,"line_start":3648,"line_end":3648,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":217978,"byte_end":217985,"line_start":3649,"line_end":3649,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":218026,"byte_end":218032,"line_start":3650,"line_end":3650,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1071},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":219254,"byte_end":219271,"line_start":3687,"line_end":3687,"column_start":12,"column_end":29},"name":"get_key_value_mut","qualname":"<RawOccupiedEntryMut>::get_key_value_mut","value":"pub fn get_key_value_mut(&mut Self) -> (&mut K, &mut V)","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the key and value in the entry.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the key and value in the entry.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":218204,"byte_end":218267,"line_start":3658,"line_end":3658,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":218272,"byte_end":218275,"line_start":3659,"line_end":3659,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":218280,"byte_end":218294,"line_start":3660,"line_end":3660,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":218299,"byte_end":218302,"line_start":3661,"line_end":3661,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":218307,"byte_end":218314,"line_start":3662,"line_end":3662,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":218319,"byte_end":218371,"line_start":3663,"line_end":3663,"column_start":5,"column_end":57}},{"value":"/ use std::rc::Rc;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":218376,"byte_end":218396,"line_start":3664,"line_end":3664,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":218401,"byte_end":218404,"line_start":3665,"line_end":3665,"column_start":5,"column_end":8}},{"value":"/ let key_one = Rc::new(\"a\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":218409,"byte_end":218440,"line_start":3666,"line_end":3666,"column_start":5,"column_end":36}},{"value":"/ let key_two = Rc::new(\"a\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":218445,"byte_end":218476,"line_start":3667,"line_end":3667,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":218481,"byte_end":218484,"line_start":3668,"line_end":3668,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<Rc<&str>, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":218489,"byte_end":218546,"line_start":3669,"line_end":3669,"column_start":5,"column_end":62}},{"value":"/ map.insert(key_one.clone(), 10);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":218551,"byte_end":218587,"line_start":3670,"line_end":3670,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":218592,"byte_end":218595,"line_start":3671,"line_end":3671,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[&key_one], 10);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":218600,"byte_end":218634,"line_start":3672,"line_end":3672,"column_start":5,"column_end":39}},{"value":"/ assert!(Rc::strong_count(&key_one) == 2 && Rc::strong_count(&key_two) == 1);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":218639,"byte_end":218719,"line_start":3673,"line_end":3673,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":218724,"byte_end":218727,"line_start":3674,"line_end":3674,"column_start":5,"column_end":8}},{"value":"/ match map.raw_entry_mut().from_key(&key_one) {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":218732,"byte_end":218782,"line_start":3675,"line_end":3675,"column_start":5,"column_end":55}},{"value":"/     RawEntryMut::Vacant(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":218787,"byte_end":218830,"line_start":3676,"line_end":3676,"column_start":5,"column_end":48}},{"value":"/     RawEntryMut::Occupied(mut o) => {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":218835,"byte_end":218876,"line_start":3677,"line_end":3677,"column_start":5,"column_end":46}},{"value":"/         let (inside_key, inside_value) = o.get_key_value_mut();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":218881,"byte_end":218948,"line_start":3678,"line_end":3678,"column_start":5,"column_end":72}},{"value":"/         *inside_key = key_two.clone();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":218953,"byte_end":218995,"line_start":3679,"line_end":3679,"column_start":5,"column_end":47}},{"value":"/         *inside_value = 100;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":219000,"byte_end":219032,"line_start":3680,"line_end":3680,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":219037,"byte_end":219046,"line_start":3681,"line_end":3681,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":219051,"byte_end":219056,"line_start":3682,"line_end":3682,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map[&key_two], 100);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":219061,"byte_end":219096,"line_start":3683,"line_end":3683,"column_start":5,"column_end":40}},{"value":"/ assert!(Rc::strong_count(&key_one) == 1 && Rc::strong_count(&key_two) == 2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":219101,"byte_end":219181,"line_start":3684,"line_end":3684,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":219186,"byte_end":219193,"line_start":3685,"line_end":3685,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":219234,"byte_end":219240,"line_start":3686,"line_end":3686,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1072},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":220674,"byte_end":220688,"line_start":3728,"line_end":3728,"column_start":12,"column_end":26},"name":"into_key_value","qualname":"<RawOccupiedEntryMut>::into_key_value","value":"pub fn into_key_value(Self) -> (&'a mut K, &'a mut V)","parent":null,"children":[],"decl_id":null,"docs":" Converts the OccupiedEntry into a mutable reference to the key and value in the entry\n with a lifetime bound to the map itself.","sig":null,"attributes":[{"value":"/ Converts the OccupiedEntry into a mutable reference to the key and value in the entry","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":219440,"byte_end":219529,"line_start":3694,"line_end":3694,"column_start":5,"column_end":94}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":219534,"byte_end":219578,"line_start":3695,"line_end":3695,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":219583,"byte_end":219586,"line_start":3696,"line_end":3696,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":219591,"byte_end":219605,"line_start":3697,"line_end":3697,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":219610,"byte_end":219613,"line_start":3698,"line_end":3698,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":219618,"byte_end":219625,"line_start":3699,"line_end":3699,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":219630,"byte_end":219682,"line_start":3700,"line_end":3700,"column_start":5,"column_end":57}},{"value":"/ use std::rc::Rc;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":219687,"byte_end":219707,"line_start":3701,"line_end":3701,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":219712,"byte_end":219715,"line_start":3702,"line_end":3702,"column_start":5,"column_end":8}},{"value":"/ let key_one = Rc::new(\"a\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":219720,"byte_end":219751,"line_start":3703,"line_end":3703,"column_start":5,"column_end":36}},{"value":"/ let key_two = Rc::new(\"a\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":219756,"byte_end":219787,"line_start":3704,"line_end":3704,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":219792,"byte_end":219795,"line_start":3705,"line_end":3705,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<Rc<&str>, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":219800,"byte_end":219857,"line_start":3706,"line_end":3706,"column_start":5,"column_end":62}},{"value":"/ map.insert(key_one.clone(), 10);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":219862,"byte_end":219898,"line_start":3707,"line_end":3707,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":219903,"byte_end":219906,"line_start":3708,"line_end":3708,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[&key_one], 10);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":219911,"byte_end":219945,"line_start":3709,"line_end":3709,"column_start":5,"column_end":39}},{"value":"/ assert!(Rc::strong_count(&key_one) == 2 && Rc::strong_count(&key_two) == 1);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":219950,"byte_end":220030,"line_start":3710,"line_end":3710,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":220035,"byte_end":220038,"line_start":3711,"line_end":3711,"column_start":5,"column_end":8}},{"value":"/ let inside_key: &mut Rc<&str>;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":220043,"byte_end":220077,"line_start":3712,"line_end":3712,"column_start":5,"column_end":39}},{"value":"/ let inside_value: &mut u32;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":220082,"byte_end":220113,"line_start":3713,"line_end":3713,"column_start":5,"column_end":36}},{"value":"/ match map.raw_entry_mut().from_key(&key_one) {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":220118,"byte_end":220168,"line_start":3714,"line_end":3714,"column_start":5,"column_end":55}},{"value":"/     RawEntryMut::Vacant(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":220173,"byte_end":220216,"line_start":3715,"line_end":3715,"column_start":5,"column_end":48}},{"value":"/     RawEntryMut::Occupied(o) => {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":220221,"byte_end":220258,"line_start":3716,"line_end":3716,"column_start":5,"column_end":42}},{"value":"/         let tuple = o.into_key_value();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":220263,"byte_end":220306,"line_start":3717,"line_end":3717,"column_start":5,"column_end":48}},{"value":"/         inside_key = tuple.0;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":220311,"byte_end":220344,"line_start":3718,"line_end":3718,"column_start":5,"column_end":38}},{"value":"/         inside_value = tuple.1;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":220349,"byte_end":220384,"line_start":3719,"line_end":3719,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":220389,"byte_end":220398,"line_start":3720,"line_end":3720,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":220403,"byte_end":220408,"line_start":3721,"line_end":3721,"column_start":5,"column_end":10}},{"value":"/ *inside_key = key_two.clone();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":220413,"byte_end":220447,"line_start":3722,"line_end":3722,"column_start":5,"column_end":39}},{"value":"/ *inside_value = 100;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":220452,"byte_end":220476,"line_start":3723,"line_end":3723,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(map[&key_two], 100);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":220481,"byte_end":220516,"line_start":3724,"line_end":3724,"column_start":5,"column_end":40}},{"value":"/ assert!(Rc::strong_count(&key_one) == 1 && Rc::strong_count(&key_two) == 2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":220521,"byte_end":220601,"line_start":3725,"line_end":3725,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":220606,"byte_end":220613,"line_start":3726,"line_end":3726,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":220654,"byte_end":220660,"line_start":3727,"line_end":3727,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1073},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":221424,"byte_end":221430,"line_start":3752,"line_end":3752,"column_start":12,"column_end":18},"name":"insert","qualname":"<RawOccupiedEntryMut>::insert","value":"pub fn insert(&mut Self, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns the entry's old value.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":220858,"byte_end":220925,"line_start":3735,"line_end":3735,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":220930,"byte_end":220933,"line_start":3736,"line_end":3736,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":220938,"byte_end":220952,"line_start":3737,"line_end":3737,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":220957,"byte_end":220960,"line_start":3738,"line_end":3738,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":220965,"byte_end":220972,"line_start":3739,"line_end":3739,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":220977,"byte_end":221029,"line_start":3740,"line_end":3740,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":221034,"byte_end":221037,"line_start":3741,"line_end":3741,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":221042,"byte_end":221112,"line_start":3742,"line_end":3742,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":221117,"byte_end":221120,"line_start":3743,"line_end":3743,"column_start":5,"column_end":8}},{"value":"/ match map.raw_entry_mut().from_key(&\"a\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":221125,"byte_end":221171,"line_start":3744,"line_end":3744,"column_start":5,"column_end":51}},{"value":"/     RawEntryMut::Vacant(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":221176,"byte_end":221219,"line_start":3745,"line_end":3745,"column_start":5,"column_end":48}},{"value":"/     RawEntryMut::Occupied(mut o) => assert_eq!(o.insert(1000), 100),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":221224,"byte_end":221296,"line_start":3746,"line_end":3746,"column_start":5,"column_end":77}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":221301,"byte_end":221306,"line_start":3747,"line_end":3747,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":221311,"byte_end":221314,"line_start":3748,"line_end":3748,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[&\"a\"], 1000);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":221319,"byte_end":221351,"line_start":3749,"line_end":3749,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":221356,"byte_end":221363,"line_start":3750,"line_end":3750,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":221404,"byte_end":221410,"line_start":3751,"line_end":3751,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1074},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":222529,"byte_end":222539,"line_start":3784,"line_end":3784,"column_start":12,"column_end":22},"name":"insert_key","qualname":"<RawOccupiedEntryMut>::insert_key","value":"pub fn insert_key(&mut Self, K) -> K","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns the entry's old value.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":221514,"byte_end":221581,"line_start":3756,"line_end":3756,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":221586,"byte_end":221589,"line_start":3757,"line_end":3757,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":221594,"byte_end":221608,"line_start":3758,"line_end":3758,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":221613,"byte_end":221616,"line_start":3759,"line_end":3759,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":221621,"byte_end":221628,"line_start":3760,"line_end":3760,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":221633,"byte_end":221685,"line_start":3761,"line_end":3761,"column_start":5,"column_end":57}},{"value":"/ use std::rc::Rc;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":221690,"byte_end":221710,"line_start":3762,"line_end":3762,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":221715,"byte_end":221718,"line_start":3763,"line_end":3763,"column_start":5,"column_end":8}},{"value":"/ let key_one = Rc::new(\"a\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":221723,"byte_end":221754,"line_start":3764,"line_end":3764,"column_start":5,"column_end":36}},{"value":"/ let key_two = Rc::new(\"a\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":221759,"byte_end":221790,"line_start":3765,"line_end":3765,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":221795,"byte_end":221798,"line_start":3766,"line_end":3766,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<Rc<&str>, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":221803,"byte_end":221860,"line_start":3767,"line_end":3767,"column_start":5,"column_end":62}},{"value":"/ map.insert(key_one.clone(), 10);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":221865,"byte_end":221901,"line_start":3768,"line_end":3768,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":221906,"byte_end":221909,"line_start":3769,"line_end":3769,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[&key_one], 10);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":221914,"byte_end":221948,"line_start":3770,"line_end":3770,"column_start":5,"column_end":39}},{"value":"/ assert!(Rc::strong_count(&key_one) == 2 && Rc::strong_count(&key_two) == 1);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":221953,"byte_end":222033,"line_start":3771,"line_end":3771,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":222038,"byte_end":222041,"line_start":3772,"line_end":3772,"column_start":5,"column_end":8}},{"value":"/ match map.raw_entry_mut().from_key(&key_one) {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":222046,"byte_end":222096,"line_start":3773,"line_end":3773,"column_start":5,"column_end":55}},{"value":"/     RawEntryMut::Vacant(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":222101,"byte_end":222144,"line_start":3774,"line_end":3774,"column_start":5,"column_end":48}},{"value":"/     RawEntryMut::Occupied(mut o) => {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":222149,"byte_end":222190,"line_start":3775,"line_end":3775,"column_start":5,"column_end":46}},{"value":"/         let old_key = o.insert_key(key_two.clone());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":222195,"byte_end":222251,"line_start":3776,"line_end":3776,"column_start":5,"column_end":61}},{"value":"/         assert!(Rc::ptr_eq(&old_key, &key_one));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":222256,"byte_end":222308,"line_start":3777,"line_end":3777,"column_start":5,"column_end":57}},{"value":"/     }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":222313,"byte_end":222322,"line_start":3778,"line_end":3778,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":222327,"byte_end":222332,"line_start":3779,"line_end":3779,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map[&key_two], 10);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":222337,"byte_end":222371,"line_start":3780,"line_end":3780,"column_start":5,"column_end":39}},{"value":"/ assert!(Rc::strong_count(&key_one) == 1 && Rc::strong_count(&key_two) == 2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":222376,"byte_end":222456,"line_start":3781,"line_end":3781,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":222461,"byte_end":222468,"line_start":3782,"line_end":3782,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":222509,"byte_end":222515,"line_start":3783,"line_end":3783,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1075},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":223159,"byte_end":223165,"line_start":3804,"line_end":3804,"column_start":12,"column_end":18},"name":"remove","qualname":"<RawOccupiedEntryMut>::remove","value":"pub fn remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of the entry, and returns it.","sig":null,"attributes":[{"value":"/ Takes the value out of the entry, and returns it.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":222619,"byte_end":222672,"line_start":3788,"line_end":3788,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":222677,"byte_end":222680,"line_start":3789,"line_end":3789,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":222685,"byte_end":222699,"line_start":3790,"line_end":3790,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":222704,"byte_end":222707,"line_start":3791,"line_end":3791,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":222712,"byte_end":222719,"line_start":3792,"line_end":3792,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":222724,"byte_end":222776,"line_start":3793,"line_end":3793,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":222781,"byte_end":222784,"line_start":3794,"line_end":3794,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":222789,"byte_end":222859,"line_start":3795,"line_end":3795,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":222864,"byte_end":222867,"line_start":3796,"line_end":3796,"column_start":5,"column_end":8}},{"value":"/ match map.raw_entry_mut().from_key(&\"a\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":222872,"byte_end":222918,"line_start":3797,"line_end":3797,"column_start":5,"column_end":51}},{"value":"/     RawEntryMut::Vacant(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":222923,"byte_end":222966,"line_start":3798,"line_end":3798,"column_start":5,"column_end":48}},{"value":"/     RawEntryMut::Occupied(o) => assert_eq!(o.remove(), 100),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":222971,"byte_end":223035,"line_start":3799,"line_end":3799,"column_start":5,"column_end":69}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":223040,"byte_end":223045,"line_start":3800,"line_end":3800,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map.get(&\"a\"), None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":223050,"byte_end":223086,"line_start":3801,"line_end":3801,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":223091,"byte_end":223098,"line_start":3802,"line_end":3802,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":223139,"byte_end":223145,"line_start":3803,"line_end":3803,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1076},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":223777,"byte_end":223789,"line_start":3824,"line_end":3824,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<RawOccupiedEntryMut>::remove_entry","value":"pub fn remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Take the ownership of the key and value from the map.","sig":null,"attributes":[{"value":"/ Take the ownership of the key and value from the map.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":223220,"byte_end":223277,"line_start":3808,"line_end":3808,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":223282,"byte_end":223285,"line_start":3809,"line_end":3809,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":223290,"byte_end":223304,"line_start":3810,"line_end":3810,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":223309,"byte_end":223312,"line_start":3811,"line_end":3811,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":223317,"byte_end":223324,"line_start":3812,"line_end":3812,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":223329,"byte_end":223381,"line_start":3813,"line_end":3813,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":223386,"byte_end":223389,"line_start":3814,"line_end":3814,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":223394,"byte_end":223464,"line_start":3815,"line_end":3815,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":223469,"byte_end":223472,"line_start":3816,"line_end":3816,"column_start":5,"column_end":8}},{"value":"/ match map.raw_entry_mut().from_key(&\"a\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":223477,"byte_end":223523,"line_start":3817,"line_end":3817,"column_start":5,"column_end":51}},{"value":"/     RawEntryMut::Vacant(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":223528,"byte_end":223571,"line_start":3818,"line_end":3818,"column_start":5,"column_end":48}},{"value":"/     RawEntryMut::Occupied(o) => assert_eq!(o.remove_entry(), (\"a\", 100)),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":223576,"byte_end":223653,"line_start":3819,"line_end":3819,"column_start":5,"column_end":82}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":223658,"byte_end":223663,"line_start":3820,"line_end":3820,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map.get(&\"a\"), None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":223668,"byte_end":223704,"line_start":3821,"line_end":3821,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":223709,"byte_end":223716,"line_start":3822,"line_end":3822,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":223757,"byte_end":223763,"line_start":3823,"line_end":3823,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":225077,"byte_end":225095,"line_start":3862,"line_end":3862,"column_start":12,"column_end":30},"name":"replace_entry_with","qualname":"<RawOccupiedEntryMut>::replace_entry_with","value":"pub fn replace_entry_with<F>(Self, F) -> RawEntryMut where F: FnOnce(&K, V) ->\nOption<V>","parent":null,"children":[],"decl_id":null,"docs":" Provides shared access to the key and owned access to the value of\n the entry and allows to replace or remove it based on the\n value of the returned option.","sig":null,"attributes":[{"value":"/ Provides shared access to the key and owned access to the value of","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":223867,"byte_end":223937,"line_start":3828,"line_end":3828,"column_start":5,"column_end":75}},{"value":"/ the entry and allows to replace or remove it based on the","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":223942,"byte_end":224003,"line_start":3829,"line_end":3829,"column_start":5,"column_end":66}},{"value":"/ value of the returned option.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":224008,"byte_end":224041,"line_start":3830,"line_end":3830,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":224046,"byte_end":224049,"line_start":3831,"line_end":3831,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":224054,"byte_end":224068,"line_start":3832,"line_end":3832,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":224073,"byte_end":224076,"line_start":3833,"line_end":3833,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":224081,"byte_end":224088,"line_start":3834,"line_end":3834,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":224093,"byte_end":224145,"line_start":3835,"line_end":3835,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":224150,"byte_end":224153,"line_start":3836,"line_end":3836,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":224158,"byte_end":224228,"line_start":3837,"line_end":3837,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":224233,"byte_end":224236,"line_start":3838,"line_end":3838,"column_start":5,"column_end":8}},{"value":"/ let raw_entry = match map.raw_entry_mut().from_key(&\"a\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":224241,"byte_end":224303,"line_start":3839,"line_end":3839,"column_start":5,"column_end":67}},{"value":"/     RawEntryMut::Vacant(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":224308,"byte_end":224351,"line_start":3840,"line_end":3840,"column_start":5,"column_end":48}},{"value":"/     RawEntryMut::Occupied(o) => o.replace_entry_with(|k, v| {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":224356,"byte_end":224421,"line_start":3841,"line_end":3841,"column_start":5,"column_end":70}},{"value":"/         assert_eq!(k, &\"a\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":224426,"byte_end":224458,"line_start":3842,"line_end":3842,"column_start":5,"column_end":37}},{"value":"/         assert_eq!(v, 100);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":224463,"byte_end":224494,"line_start":3843,"line_end":3843,"column_start":5,"column_end":36}},{"value":"/         Some(v + 900)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":224499,"byte_end":224524,"line_start":3844,"line_end":3844,"column_start":5,"column_end":30}},{"value":"/     }),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":224529,"byte_end":224540,"line_start":3845,"line_end":3845,"column_start":5,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":224545,"byte_end":224551,"line_start":3846,"line_end":3846,"column_start":5,"column_end":11}},{"value":"/ let raw_entry = match raw_entry {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":224556,"byte_end":224593,"line_start":3847,"line_end":3847,"column_start":5,"column_end":42}},{"value":"/     RawEntryMut::Vacant(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":224598,"byte_end":224641,"line_start":3848,"line_end":3848,"column_start":5,"column_end":48}},{"value":"/     RawEntryMut::Occupied(o) => o.replace_entry_with(|k, v| {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":224646,"byte_end":224711,"line_start":3849,"line_end":3849,"column_start":5,"column_end":70}},{"value":"/         assert_eq!(k, &\"a\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":224716,"byte_end":224748,"line_start":3850,"line_end":3850,"column_start":5,"column_end":37}},{"value":"/         assert_eq!(v, 1000);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":224753,"byte_end":224785,"line_start":3851,"line_end":3851,"column_start":5,"column_end":37}},{"value":"/         None","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":224790,"byte_end":224806,"line_start":3852,"line_end":3852,"column_start":5,"column_end":21}},{"value":"/     }),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":224811,"byte_end":224822,"line_start":3853,"line_end":3853,"column_start":5,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":224827,"byte_end":224833,"line_start":3854,"line_end":3854,"column_start":5,"column_end":11}},{"value":"/ match raw_entry {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":224838,"byte_end":224859,"line_start":3855,"line_end":3855,"column_start":5,"column_end":26}},{"value":"/     RawEntryMut::Vacant(_) => { },","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":224864,"byte_end":224902,"line_start":3856,"line_end":3856,"column_start":5,"column_end":43}},{"value":"/     RawEntryMut::Occupied(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":224907,"byte_end":224952,"line_start":3857,"line_end":3857,"column_start":5,"column_end":50}},{"value":"/ };","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":224957,"byte_end":224963,"line_start":3858,"line_end":3858,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(map.get(&\"a\"), None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":224968,"byte_end":225004,"line_start":3859,"line_end":3859,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":225009,"byte_end":225016,"line_start":3860,"line_end":3860,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":225057,"byte_end":225063,"line_start":3861,"line_end":3861,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":226436,"byte_end":226442,"line_start":3904,"line_end":3904,"column_start":12,"column_end":18},"name":"insert","qualname":"<RawVacantEntryMut>::insert","value":"pub fn insert(Self, K, V) -> (&'a mut K, &'a mut V) where K: Hash,\nS: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's key,\n and returns a mutable reference to it.","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the VacantEntry's key,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":225815,"byte_end":225874,"line_start":3886,"line_end":3886,"column_start":5,"column_end":64}},{"value":"/ and returns a mutable reference to it.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":225879,"byte_end":225921,"line_start":3887,"line_end":3887,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":225926,"byte_end":225929,"line_start":3888,"line_end":3888,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":225934,"byte_end":225948,"line_start":3889,"line_end":3889,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":225953,"byte_end":225956,"line_start":3890,"line_end":3890,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":225961,"byte_end":225968,"line_start":3891,"line_end":3891,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":225973,"byte_end":226025,"line_start":3892,"line_end":3892,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":226030,"byte_end":226033,"line_start":3893,"line_end":3893,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":226038,"byte_end":226108,"line_start":3894,"line_end":3894,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":226113,"byte_end":226116,"line_start":3895,"line_end":3895,"column_start":5,"column_end":8}},{"value":"/ match map.raw_entry_mut().from_key(&\"c\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":226121,"byte_end":226167,"line_start":3896,"line_end":3896,"column_start":5,"column_end":51}},{"value":"/     RawEntryMut::Occupied(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":226172,"byte_end":226217,"line_start":3897,"line_end":3897,"column_start":5,"column_end":50}},{"value":"/     RawEntryMut::Vacant(v) => assert_eq!(v.insert(\"c\", 300), (&mut \"c\", &mut 300)),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":226222,"byte_end":226309,"line_start":3898,"line_end":3898,"column_start":5,"column_end":92}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":226314,"byte_end":226319,"line_start":3899,"line_end":3899,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":226324,"byte_end":226327,"line_start":3900,"line_end":3900,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[&\"c\"], 300);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":226332,"byte_end":226363,"line_start":3901,"line_end":3901,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":226368,"byte_end":226375,"line_start":3902,"line_end":3902,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":226416,"byte_end":226422,"line_start":3903,"line_end":3903,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":227819,"byte_end":227840,"line_start":3945,"line_end":3945,"column_start":12,"column_end":33},"name":"insert_hashed_nocheck","qualname":"<RawVacantEntryMut>::insert_hashed_nocheck","value":"pub fn insert_hashed_nocheck(Self, u64, K, V) -> (&'a mut K, &'a mut V) where\nK: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's key,\n and returns a mutable reference to it.","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the VacantEntry's key,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":226684,"byte_end":226743,"line_start":3913,"line_end":3913,"column_start":5,"column_end":64}},{"value":"/ and returns a mutable reference to it.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":226748,"byte_end":226790,"line_start":3914,"line_end":3914,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":226795,"byte_end":226798,"line_start":3915,"line_end":3915,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":226803,"byte_end":226817,"line_start":3916,"line_end":3916,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":226822,"byte_end":226825,"line_start":3917,"line_end":3917,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":226830,"byte_end":226837,"line_start":3918,"line_end":3918,"column_start":5,"column_end":12}},{"value":"/ use core::hash::{BuildHasher, Hash};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":226842,"byte_end":226882,"line_start":3919,"line_end":3919,"column_start":5,"column_end":45}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":226887,"byte_end":226939,"line_start":3920,"line_end":3920,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":226944,"byte_end":226947,"line_start":3921,"line_end":3921,"column_start":5,"column_end":8}},{"value":"/ fn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":226952,"byte_end":227041,"line_start":3922,"line_end":3922,"column_start":5,"column_end":94}},{"value":"/     use core::hash::Hasher;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":227046,"byte_end":227077,"line_start":3923,"line_end":3923,"column_start":5,"column_end":36}},{"value":"/     let mut state = hash_builder.build_hasher();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":227082,"byte_end":227134,"line_start":3924,"line_end":3924,"column_start":5,"column_end":57}},{"value":"/     key.hash(&mut state);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":227139,"byte_end":227168,"line_start":3925,"line_end":3925,"column_start":5,"column_end":34}},{"value":"/     state.finish()","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":227173,"byte_end":227195,"line_start":3926,"line_end":3926,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":227200,"byte_end":227205,"line_start":3927,"line_end":3927,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":227210,"byte_end":227213,"line_start":3928,"line_end":3928,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":227218,"byte_end":227288,"line_start":3929,"line_end":3929,"column_start":5,"column_end":75}},{"value":"/ let key = \"c\";","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":227293,"byte_end":227311,"line_start":3930,"line_end":3930,"column_start":5,"column_end":23}},{"value":"/ let hash = compute_hash(map.hasher(), &key);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":227316,"byte_end":227364,"line_start":3931,"line_end":3931,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":227369,"byte_end":227372,"line_start":3932,"line_end":3932,"column_start":5,"column_end":8}},{"value":"/ match map.raw_entry_mut().from_key_hashed_nocheck(hash, &key) {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":227377,"byte_end":227444,"line_start":3933,"line_end":3933,"column_start":5,"column_end":72}},{"value":"/     RawEntryMut::Occupied(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":227449,"byte_end":227494,"line_start":3934,"line_end":3934,"column_start":5,"column_end":50}},{"value":"/     RawEntryMut::Vacant(v) => assert_eq!(","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":227499,"byte_end":227544,"line_start":3935,"line_end":3935,"column_start":5,"column_end":50}},{"value":"/         v.insert_hashed_nocheck(hash, key, 300),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":227549,"byte_end":227601,"line_start":3936,"line_end":3936,"column_start":5,"column_end":57}},{"value":"/         (&mut \"c\", &mut 300)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":227606,"byte_end":227638,"line_start":3937,"line_end":3937,"column_start":5,"column_end":37}},{"value":"/     ),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":227643,"byte_end":227653,"line_start":3938,"line_end":3938,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":227658,"byte_end":227663,"line_start":3939,"line_end":3939,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":227668,"byte_end":227671,"line_start":3940,"line_end":3940,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[&\"c\"], 300);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":227676,"byte_end":227707,"line_start":3941,"line_end":3941,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":227712,"byte_end":227719,"line_start":3942,"line_end":3942,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":227760,"byte_end":227766,"line_start":3943,"line_end":3943,"column_start":41,"column_end":47}},{"value":"allow(clippy :: shadow_unrelated)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":227773,"byte_end":227807,"line_start":3944,"line_end":3944,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1089},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":229462,"byte_end":229480,"line_start":3995,"line_end":3995,"column_start":12,"column_end":30},"name":"insert_with_hasher","qualname":"<RawVacantEntryMut>::insert_with_hasher","value":"pub fn insert_with_hasher<H>(Self, u64, K, V, H) -> (&'a mut K, &'a mut V)\nwhere H: Fn(&K) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Set the value of an entry with a custom hasher function.","sig":null,"attributes":[{"value":"/ Set the value of an entry with a custom hasher function.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":228165,"byte_end":228225,"line_start":3958,"line_end":3958,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":228230,"byte_end":228233,"line_start":3959,"line_end":3959,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":228238,"byte_end":228252,"line_start":3960,"line_end":3960,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":228257,"byte_end":228260,"line_start":3961,"line_end":3961,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":228265,"byte_end":228272,"line_start":3962,"line_end":3962,"column_start":5,"column_end":12}},{"value":"/ use core::hash::{BuildHasher, Hash};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":228277,"byte_end":228317,"line_start":3963,"line_end":3963,"column_start":5,"column_end":45}},{"value":"/ use hashbrown::hash_map::{HashMap, RawEntryMut};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":228322,"byte_end":228374,"line_start":3964,"line_end":3964,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":228379,"byte_end":228382,"line_start":3965,"line_end":3965,"column_start":5,"column_end":8}},{"value":"/ fn make_hasher<K, S>(hash_builder: &S) -> impl Fn(&K) -> u64 + '_","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":228387,"byte_end":228456,"line_start":3966,"line_end":3966,"column_start":5,"column_end":74}},{"value":"/ where","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":228461,"byte_end":228470,"line_start":3967,"line_end":3967,"column_start":5,"column_end":14}},{"value":"/     K: Hash + ?Sized,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":228475,"byte_end":228500,"line_start":3968,"line_end":3968,"column_start":5,"column_end":30}},{"value":"/     S: BuildHasher,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":228505,"byte_end":228528,"line_start":3969,"line_end":3969,"column_start":5,"column_end":28}},{"value":"/ {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":228533,"byte_end":228538,"line_start":3970,"line_end":3970,"column_start":5,"column_end":10}},{"value":"/     move |key: &K| {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":228543,"byte_end":228567,"line_start":3971,"line_end":3971,"column_start":5,"column_end":29}},{"value":"/         use core::hash::Hasher;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":228572,"byte_end":228607,"line_start":3972,"line_end":3972,"column_start":5,"column_end":40}},{"value":"/         let mut state = hash_builder.build_hasher();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":228612,"byte_end":228668,"line_start":3973,"line_end":3973,"column_start":5,"column_end":61}},{"value":"/         key.hash(&mut state);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":228673,"byte_end":228706,"line_start":3974,"line_end":3974,"column_start":5,"column_end":38}},{"value":"/         state.finish()","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":228711,"byte_end":228737,"line_start":3975,"line_end":3975,"column_start":5,"column_end":31}},{"value":"/     }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":228742,"byte_end":228751,"line_start":3976,"line_end":3976,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":228756,"byte_end":228761,"line_start":3977,"line_end":3977,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":228766,"byte_end":228769,"line_start":3978,"line_end":3978,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":228774,"byte_end":228827,"line_start":3979,"line_end":3979,"column_start":5,"column_end":58}},{"value":"/ let key = \"a\";","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":228832,"byte_end":228850,"line_start":3980,"line_end":3980,"column_start":5,"column_end":23}},{"value":"/ let hash_builder = map.hasher().clone();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":228855,"byte_end":228899,"line_start":3981,"line_end":3981,"column_start":5,"column_end":49}},{"value":"/ let hash = make_hasher(&hash_builder)(&key);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":228904,"byte_end":228952,"line_start":3982,"line_end":3982,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":228957,"byte_end":228960,"line_start":3983,"line_end":3983,"column_start":5,"column_end":8}},{"value":"/ match map.raw_entry_mut().from_hash(hash, |q| q == &key) {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":228965,"byte_end":229027,"line_start":3984,"line_end":3984,"column_start":5,"column_end":67}},{"value":"/     RawEntryMut::Occupied(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":229032,"byte_end":229077,"line_start":3985,"line_end":3985,"column_start":5,"column_end":50}},{"value":"/     RawEntryMut::Vacant(v) => assert_eq!(","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":229082,"byte_end":229127,"line_start":3986,"line_end":3986,"column_start":5,"column_end":50}},{"value":"/         v.insert_with_hasher(hash, key, 100, make_hasher(&hash_builder)),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":229132,"byte_end":229209,"line_start":3987,"line_end":3987,"column_start":5,"column_end":82}},{"value":"/         (&mut \"a\", &mut 100)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":229214,"byte_end":229246,"line_start":3988,"line_end":3988,"column_start":5,"column_end":37}},{"value":"/     ),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":229251,"byte_end":229261,"line_start":3989,"line_end":3989,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":229266,"byte_end":229271,"line_start":3990,"line_end":3990,"column_start":5,"column_end":10}},{"value":"/ map.extend([(\"b\", 200), (\"c\", 300), (\"d\", 400), (\"e\", 500), (\"f\", 600)]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":229276,"byte_end":229353,"line_start":3991,"line_end":3991,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(map[&\"a\"], 100);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":229358,"byte_end":229389,"line_start":3992,"line_end":3992,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":229394,"byte_end":229401,"line_start":3993,"line_end":3993,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":229442,"byte_end":229448,"line_start":3994,"line_end":3994,"column_start":41,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1129},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":233538,"byte_end":233546,"line_start":4127,"line_end":4127,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::map::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":1123},"children":[],"decl_id":null,"docs":" An occupied entry.","sig":null,"attributes":[{"value":"/ An occupied entry.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":233196,"byte_end":233218,"line_start":4114,"line_end":4114,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":233223,"byte_end":233226,"line_start":4115,"line_end":4115,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":233231,"byte_end":233245,"line_start":4116,"line_end":4116,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":233250,"byte_end":233253,"line_start":4117,"line_end":4117,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":233258,"byte_end":233265,"line_start":4118,"line_end":4118,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{Entry, HashMap};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":233270,"byte_end":233316,"line_start":4119,"line_end":4119,"column_start":5,"column_end":51}},{"value":"/ let mut map: HashMap<_, _> = [(\"a\", 100), (\"b\", 200)].into();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":233321,"byte_end":233386,"line_start":4120,"line_end":4120,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":233391,"byte_end":233394,"line_start":4121,"line_end":4121,"column_start":5,"column_end":8}},{"value":"/ match map.entry(\"a\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":233399,"byte_end":233425,"line_start":4122,"line_end":4122,"column_start":5,"column_end":31}},{"value":"/     Entry::Vacant(_) => unreachable!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":233430,"byte_end":233473,"line_start":4123,"line_end":4123,"column_start":5,"column_end":48}},{"value":"/     Entry::Occupied(_) => { }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":233478,"byte_end":233511,"line_start":4124,"line_end":4124,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":233516,"byte_end":233521,"line_start":4125,"line_end":4125,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":233526,"byte_end":233533,"line_start":4126,"line_end":4126,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1132},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":233911,"byte_end":233917,"line_start":4142,"line_end":4142,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::map::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":1123},"children":[],"decl_id":null,"docs":" A vacant entry.","sig":null,"attributes":[{"value":"/ A vacant entry.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":233584,"byte_end":233603,"line_start":4129,"line_end":4129,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":233608,"byte_end":233611,"line_start":4130,"line_end":4130,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":233616,"byte_end":233630,"line_start":4131,"line_end":4131,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":233635,"byte_end":233638,"line_start":4132,"line_end":4132,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":233643,"byte_end":233650,"line_start":4133,"line_end":4133,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{Entry, HashMap};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":233655,"byte_end":233701,"line_start":4134,"line_end":4134,"column_start":5,"column_end":51}},{"value":"/ let mut map: HashMap<&str, i32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":233706,"byte_end":233759,"line_start":4135,"line_end":4135,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":233764,"byte_end":233767,"line_start":4136,"line_end":4136,"column_start":5,"column_end":8}},{"value":"/ match map.entry(\"a\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":233772,"byte_end":233798,"line_start":4137,"line_end":4137,"column_start":5,"column_end":31}},{"value":"/     Entry::Occupied(_) => unreachable!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":233803,"byte_end":233848,"line_start":4138,"line_end":4138,"column_start":5,"column_end":50}},{"value":"/     Entry::Vacant(_) => { }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":233853,"byte_end":233884,"line_start":4139,"line_end":4139,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":233889,"byte_end":233894,"line_start":4140,"line_end":4140,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":233899,"byte_end":233906,"line_start":4141,"line_end":4141,"column_start":5,"column_end":12}}]},{"kind":"Enum","id":{"krate":0,"index":1123},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":233127,"byte_end":233132,"line_start":4110,"line_end":4110,"column_start":10,"column_end":15},"name":"Entry","qualname":"::map::Entry","value":"pub enum Entry<'a, K, V, S, A = Global> where A: Allocator + Clone {\n    Occupied(OccupiedEntry),\n    Vacant(VacantEntry),\n}","parent":null,"children":[{"krate":0,"index":1129},{"krate":0,"index":1132}],"decl_id":null,"docs":" A view into a single entry in a map, which may either be vacant or occupied.","sig":null,"attributes":[{"value":"/ A view into a single entry in a map, which may either be vacant or occupied.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":231653,"byte_end":231733,"line_start":4067,"line_end":4067,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":231734,"byte_end":231737,"line_start":4068,"line_end":4068,"column_start":1,"column_end":4}},{"value":"/ This `enum` is constructed from the [`entry`] method on [`HashMap`].","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":231738,"byte_end":231810,"line_start":4069,"line_end":4069,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":231811,"byte_end":231814,"line_start":4070,"line_end":4070,"column_start":1,"column_end":4}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":231815,"byte_end":231851,"line_start":4071,"line_end":4071,"column_start":1,"column_end":37}},{"value":"/ [`entry`]: struct.HashMap.html#method.entry","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":231852,"byte_end":231899,"line_start":4072,"line_end":4072,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":231900,"byte_end":231903,"line_start":4073,"line_end":4073,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":231904,"byte_end":231918,"line_start":4074,"line_end":4074,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":231919,"byte_end":231922,"line_start":4075,"line_end":4075,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":231923,"byte_end":231930,"line_start":4076,"line_end":4076,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::hash_map::{Entry, HashMap, OccupiedEntry};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":231931,"byte_end":231992,"line_start":4077,"line_end":4077,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":231993,"byte_end":231996,"line_start":4078,"line_end":4078,"column_start":1,"column_end":4}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":231997,"byte_end":232030,"line_start":4079,"line_end":4079,"column_start":1,"column_end":34}},{"value":"/ map.extend([(\"a\", 10), (\"b\", 20), (\"c\", 30)]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":232031,"byte_end":232081,"line_start":4080,"line_end":4080,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":232082,"byte_end":232111,"line_start":4081,"line_end":4081,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":232112,"byte_end":232115,"line_start":4082,"line_end":4082,"column_start":1,"column_end":4}},{"value":"/ // Existing key (insert)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":232116,"byte_end":232144,"line_start":4083,"line_end":4083,"column_start":1,"column_end":29}},{"value":"/ let entry: Entry<_, _, _> = map.entry(\"a\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":232145,"byte_end":232192,"line_start":4084,"line_end":4084,"column_start":1,"column_end":48}},{"value":"/ let _raw_o: OccupiedEntry<_, _, _> = entry.insert(1);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":232193,"byte_end":232250,"line_start":4085,"line_end":4085,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":232251,"byte_end":232280,"line_start":4086,"line_end":4086,"column_start":1,"column_end":30}},{"value":"/ // Nonexistent key (insert)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":232281,"byte_end":232312,"line_start":4087,"line_end":4087,"column_start":1,"column_end":32}},{"value":"/ map.entry(\"d\").insert(4);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":232313,"byte_end":232342,"line_start":4088,"line_end":4088,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":232343,"byte_end":232346,"line_start":4089,"line_end":4089,"column_start":1,"column_end":4}},{"value":"/ // Existing key (or_insert)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":232347,"byte_end":232378,"line_start":4090,"line_end":4090,"column_start":1,"column_end":32}},{"value":"/ let v = map.entry(\"b\").or_insert(2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":232379,"byte_end":232419,"line_start":4091,"line_end":4091,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(std::mem::replace(v, 2), 20);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":232420,"byte_end":232464,"line_start":4092,"line_end":4092,"column_start":1,"column_end":45}},{"value":"/ // Nonexistent key (or_insert)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":232465,"byte_end":232499,"line_start":4093,"line_end":4093,"column_start":1,"column_end":35}},{"value":"/ map.entry(\"e\").or_insert(5);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":232500,"byte_end":232532,"line_start":4094,"line_end":4094,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":232533,"byte_end":232536,"line_start":4095,"line_end":4095,"column_start":1,"column_end":4}},{"value":"/ // Existing key (or_insert_with)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":232537,"byte_end":232573,"line_start":4096,"line_end":4096,"column_start":1,"column_end":37}},{"value":"/ let v = map.entry(\"c\").or_insert_with(|| 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":232574,"byte_end":232622,"line_start":4097,"line_end":4097,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(std::mem::replace(v, 3), 30);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":232623,"byte_end":232667,"line_start":4098,"line_end":4098,"column_start":1,"column_end":45}},{"value":"/ // Nonexistent key (or_insert_with)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":232668,"byte_end":232707,"line_start":4099,"line_end":4099,"column_start":1,"column_end":40}},{"value":"/ map.entry(\"f\").or_insert_with(|| 6);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":232708,"byte_end":232748,"line_start":4100,"line_end":4100,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":232749,"byte_end":232752,"line_start":4101,"line_end":4101,"column_start":1,"column_end":4}},{"value":"/ println!(\"Our HashMap: {:?}\", map);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":232753,"byte_end":232792,"line_start":4102,"line_end":4102,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":232793,"byte_end":232796,"line_start":4103,"line_end":4103,"column_start":1,"column_end":4}},{"value":"/ let mut vec: Vec<_> = map.iter().map(|(&k, &v)| (k, v)).collect();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":232797,"byte_end":232867,"line_start":4104,"line_end":4104,"column_start":1,"column_end":71}},{"value":"/ // The `Iter` iterator produces items in arbitrary order, so the","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":232868,"byte_end":232936,"line_start":4105,"line_end":4105,"column_start":1,"column_end":69}},{"value":"/ // items must be sorted to test them against a sorted array.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":232937,"byte_end":233001,"line_start":4106,"line_end":4106,"column_start":1,"column_end":65}},{"value":"/ vec.sort_unstable();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":233002,"byte_end":233026,"line_start":4107,"line_end":4107,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(vec, [(\"a\", 1), (\"b\", 2), (\"c\", 3), (\"d\", 4), (\"e\", 5), (\"f\", 6)]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":233027,"byte_end":233109,"line_start":4108,"line_end":4108,"column_start":1,"column_end":83}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":233110,"byte_end":233117,"line_start":4109,"line_end":4109,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1141},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":235388,"byte_end":235401,"line_start":4194,"line_end":4194,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::map::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":1147},{"krate":0,"index":1148},{"krate":0,"index":1149},{"krate":0,"index":1150}],"decl_id":null,"docs":" A view into an occupied entry in a `HashMap`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ A view into an occupied entry in a `HashMap`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":234297,"byte_end":234346,"line_start":4154,"line_end":4154,"column_start":1,"column_end":50}},{"value":"/ It is part of the [`Entry`] enum.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":234347,"byte_end":234384,"line_start":4155,"line_end":4155,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":234385,"byte_end":234388,"line_start":4156,"line_end":4156,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":234389,"byte_end":234419,"line_start":4157,"line_end":4157,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":234420,"byte_end":234423,"line_start":4158,"line_end":4158,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":234424,"byte_end":234438,"line_start":4159,"line_end":4159,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":234439,"byte_end":234442,"line_start":4160,"line_end":4160,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":234443,"byte_end":234450,"line_start":4161,"line_end":4161,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::hash_map::{Entry, HashMap, OccupiedEntry};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":234451,"byte_end":234512,"line_start":4162,"line_end":4162,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":234513,"byte_end":234516,"line_start":4163,"line_end":4163,"column_start":1,"column_end":4}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":234517,"byte_end":234550,"line_start":4164,"line_end":4164,"column_start":1,"column_end":34}},{"value":"/ map.extend([(\"a\", 10), (\"b\", 20), (\"c\", 30)]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":234551,"byte_end":234601,"line_start":4165,"line_end":4165,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":234602,"byte_end":234605,"line_start":4166,"line_end":4166,"column_start":1,"column_end":4}},{"value":"/ let _entry_o: OccupiedEntry<_, _, _> = map.entry(\"a\").insert(100);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":234606,"byte_end":234676,"line_start":4167,"line_end":4167,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":234677,"byte_end":234706,"line_start":4168,"line_end":4168,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":234707,"byte_end":234710,"line_start":4169,"line_end":4169,"column_start":1,"column_end":4}},{"value":"/ // Existing key (insert and update)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":234711,"byte_end":234750,"line_start":4170,"line_end":4170,"column_start":1,"column_end":40}},{"value":"/ match map.entry(\"a\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":234751,"byte_end":234777,"line_start":4171,"line_end":4171,"column_start":1,"column_end":27}},{"value":"/     Entry::Vacant(_) => unreachable!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":234778,"byte_end":234821,"line_start":4172,"line_end":4172,"column_start":1,"column_end":44}},{"value":"/     Entry::Occupied(mut view) => {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":234822,"byte_end":234860,"line_start":4173,"line_end":4173,"column_start":1,"column_end":39}},{"value":"/         assert_eq!(view.get(), &100);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":234861,"byte_end":234902,"line_start":4174,"line_end":4174,"column_start":1,"column_end":42}},{"value":"/         let v = view.get_mut();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":234903,"byte_end":234938,"line_start":4175,"line_end":4175,"column_start":1,"column_end":36}},{"value":"/         *v *= 10;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":234939,"byte_end":234960,"line_start":4176,"line_end":4176,"column_start":1,"column_end":22}},{"value":"/         assert_eq!(view.insert(1111), 1000);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":234961,"byte_end":235009,"line_start":4177,"line_end":4177,"column_start":1,"column_end":49}},{"value":"/     }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":235010,"byte_end":235019,"line_start":4178,"line_end":4178,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":235020,"byte_end":235025,"line_start":4179,"line_end":4179,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":235026,"byte_end":235029,"line_start":4180,"line_end":4180,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(map[&\"a\"], 1111);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":235030,"byte_end":235062,"line_start":4181,"line_end":4181,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":235063,"byte_end":235092,"line_start":4182,"line_end":4182,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":235093,"byte_end":235096,"line_start":4183,"line_end":4183,"column_start":1,"column_end":4}},{"value":"/ // Existing key (take)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":235097,"byte_end":235123,"line_start":4184,"line_end":4184,"column_start":1,"column_end":27}},{"value":"/ match map.entry(\"c\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":235124,"byte_end":235150,"line_start":4185,"line_end":4185,"column_start":1,"column_end":27}},{"value":"/     Entry::Vacant(_) => unreachable!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":235151,"byte_end":235194,"line_start":4186,"line_end":4186,"column_start":1,"column_end":44}},{"value":"/     Entry::Occupied(view) => {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":235195,"byte_end":235229,"line_start":4187,"line_end":4187,"column_start":1,"column_end":35}},{"value":"/         assert_eq!(view.remove_entry(), (\"c\", 30));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":235230,"byte_end":235285,"line_start":4188,"line_end":4188,"column_start":1,"column_end":56}},{"value":"/     }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":235286,"byte_end":235295,"line_start":4189,"line_end":4189,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":235296,"byte_end":235301,"line_start":4190,"line_end":4190,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(map.get(&\"c\"), None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":235302,"byte_end":235338,"line_start":4191,"line_end":4191,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(map.len(), 2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":235339,"byte_end":235368,"line_start":4192,"line_end":4192,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":235369,"byte_end":235376,"line_start":4193,"line_end":4193,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1167},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":236974,"byte_end":236985,"line_start":4257,"line_end":4257,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::map::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1175}],"decl_id":null,"docs":" A view into a vacant entry in a `HashMap`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ A view into a vacant entry in a `HashMap`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":236147,"byte_end":236193,"line_start":4227,"line_end":4227,"column_start":1,"column_end":47}},{"value":"/ It is part of the [`Entry`] enum.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":236194,"byte_end":236231,"line_start":4228,"line_end":4228,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":236232,"byte_end":236235,"line_start":4229,"line_end":4229,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":236236,"byte_end":236266,"line_start":4230,"line_end":4230,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":236267,"byte_end":236270,"line_start":4231,"line_end":4231,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":236271,"byte_end":236285,"line_start":4232,"line_end":4232,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":236286,"byte_end":236289,"line_start":4233,"line_end":4233,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":236290,"byte_end":236297,"line_start":4234,"line_end":4234,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::hash_map::{Entry, HashMap, VacantEntry};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":236298,"byte_end":236357,"line_start":4235,"line_end":4235,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":236358,"byte_end":236361,"line_start":4236,"line_end":4236,"column_start":1,"column_end":4}},{"value":"/ let mut map = HashMap::<&str, i32>::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":236362,"byte_end":236408,"line_start":4237,"line_end":4237,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":236409,"byte_end":236412,"line_start":4238,"line_end":4238,"column_start":1,"column_end":4}},{"value":"/ let entry_v: VacantEntry<_, _, _> = match map.entry(\"a\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":236413,"byte_end":236475,"line_start":4239,"line_end":4239,"column_start":1,"column_end":63}},{"value":"/     Entry::Vacant(view) => view,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":236476,"byte_end":236512,"line_start":4240,"line_end":4240,"column_start":1,"column_end":37}},{"value":"/     Entry::Occupied(_) => unreachable!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":236513,"byte_end":236558,"line_start":4241,"line_end":4241,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":236559,"byte_end":236565,"line_start":4242,"line_end":4242,"column_start":1,"column_end":7}},{"value":"/ entry_v.insert(10);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":236566,"byte_end":236589,"line_start":4243,"line_end":4243,"column_start":1,"column_end":24}},{"value":"/ assert!(map[&\"a\"] == 10 && map.len() == 1);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":236590,"byte_end":236637,"line_start":4244,"line_end":4244,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":236638,"byte_end":236641,"line_start":4245,"line_end":4245,"column_start":1,"column_end":4}},{"value":"/ // Nonexistent key (insert and update)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":236642,"byte_end":236684,"line_start":4246,"line_end":4246,"column_start":1,"column_end":43}},{"value":"/ match map.entry(\"b\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":236685,"byte_end":236711,"line_start":4247,"line_end":4247,"column_start":1,"column_end":27}},{"value":"/     Entry::Occupied(_) => unreachable!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":236712,"byte_end":236757,"line_start":4248,"line_end":4248,"column_start":1,"column_end":46}},{"value":"/     Entry::Vacant(view) => {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":236758,"byte_end":236790,"line_start":4249,"line_end":4249,"column_start":1,"column_end":33}},{"value":"/         let value = view.insert(2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":236791,"byte_end":236830,"line_start":4250,"line_end":4250,"column_start":1,"column_end":40}},{"value":"/         assert_eq!(*value, 2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":236831,"byte_end":236865,"line_start":4251,"line_end":4251,"column_start":1,"column_end":35}},{"value":"/         *value = 20;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":236866,"byte_end":236890,"line_start":4252,"line_end":4252,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":236891,"byte_end":236900,"line_start":4253,"line_end":4253,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":236901,"byte_end":236906,"line_start":4254,"line_end":4254,"column_start":1,"column_end":6}},{"value":"/ assert!(map[&\"b\"] == 20 && map.len() == 2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":236907,"byte_end":236954,"line_start":4255,"line_end":4255,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":236955,"byte_end":236962,"line_start":4256,"line_end":4256,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1190},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":239665,"byte_end":239673,"line_start":4338,"line_end":4338,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::map::EntryRef::Occupied","value":"EntryRef::Occupied(OccupiedEntryRef)","parent":{"krate":0,"index":1182},"children":[],"decl_id":null,"docs":" An occupied entry.","sig":null,"attributes":[{"value":"/ An occupied entry.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":239292,"byte_end":239314,"line_start":4325,"line_end":4325,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":239319,"byte_end":239322,"line_start":4326,"line_end":4326,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":239327,"byte_end":239341,"line_start":4327,"line_end":4327,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":239346,"byte_end":239349,"line_start":4328,"line_end":4328,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":239354,"byte_end":239361,"line_start":4329,"line_end":4329,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{EntryRef, HashMap};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":239366,"byte_end":239415,"line_start":4330,"line_end":4330,"column_start":5,"column_end":54}},{"value":"/ let mut map: HashMap<_, _> = [(\"a\".to_owned(), 100), (\"b\".into(), 200)].into();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":239420,"byte_end":239503,"line_start":4331,"line_end":4331,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":239508,"byte_end":239511,"line_start":4332,"line_end":4332,"column_start":5,"column_end":8}},{"value":"/ match map.entry_ref(\"a\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":239516,"byte_end":239546,"line_start":4333,"line_end":4333,"column_start":5,"column_end":35}},{"value":"/     EntryRef::Vacant(_) => unreachable!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":239551,"byte_end":239597,"line_start":4334,"line_end":4334,"column_start":5,"column_end":51}},{"value":"/     EntryRef::Occupied(_) => { }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":239602,"byte_end":239638,"line_start":4335,"line_end":4335,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":239643,"byte_end":239648,"line_start":4336,"line_end":4336,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":239653,"byte_end":239660,"line_start":4337,"line_end":4337,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1193},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":240063,"byte_end":240069,"line_start":4353,"line_end":4353,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::map::EntryRef::Vacant","value":"EntryRef::Vacant(VacantEntryRef)","parent":{"krate":0,"index":1182},"children":[],"decl_id":null,"docs":" A vacant entry.","sig":null,"attributes":[{"value":"/ A vacant entry.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":239721,"byte_end":239740,"line_start":4340,"line_end":4340,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":239745,"byte_end":239748,"line_start":4341,"line_end":4341,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":239753,"byte_end":239767,"line_start":4342,"line_end":4342,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":239772,"byte_end":239775,"line_start":4343,"line_end":4343,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":239780,"byte_end":239787,"line_start":4344,"line_end":4344,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{EntryRef, HashMap};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":239792,"byte_end":239841,"line_start":4345,"line_end":4345,"column_start":5,"column_end":54}},{"value":"/ let mut map: HashMap<String, i32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":239846,"byte_end":239901,"line_start":4346,"line_end":4346,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":239906,"byte_end":239909,"line_start":4347,"line_end":4347,"column_start":5,"column_end":8}},{"value":"/ match map.entry_ref(\"a\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":239914,"byte_end":239944,"line_start":4348,"line_end":4348,"column_start":5,"column_end":35}},{"value":"/     EntryRef::Occupied(_) => unreachable!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":239949,"byte_end":239997,"line_start":4349,"line_end":4349,"column_start":5,"column_end":53}},{"value":"/     EntryRef::Vacant(_) => { }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":240002,"byte_end":240036,"line_start":4350,"line_end":4350,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":240041,"byte_end":240046,"line_start":4351,"line_end":4351,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":240051,"byte_end":240058,"line_start":4352,"line_end":4352,"column_start":5,"column_end":12}}]},{"kind":"Enum","id":{"krate":0,"index":1182},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":239205,"byte_end":239213,"line_start":4321,"line_end":4321,"column_start":10,"column_end":18},"name":"EntryRef","qualname":"::map::EntryRef","value":"pub enum EntryRef<'a, 'b, K, Q: ?Sized, V, S, A = Global> where A: Allocator +\n    Clone {\n    Occupied(OccupiedEntryRef),\n    Vacant(VacantEntryRef),\n}","parent":null,"children":[{"krate":0,"index":1190},{"krate":0,"index":1193}],"decl_id":null,"docs":" A view into a single entry in a map, which may either be vacant or occupied,\n with any borrowed form of the map's key type.","sig":null,"attributes":[{"value":"/ A view into a single entry in a map, which may either be vacant or occupied,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":237321,"byte_end":237401,"line_start":4269,"line_end":4269,"column_start":1,"column_end":81}},{"value":"/ with any borrowed form of the map's key type.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":237402,"byte_end":237451,"line_start":4270,"line_end":4270,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":237452,"byte_end":237455,"line_start":4271,"line_end":4271,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":237456,"byte_end":237459,"line_start":4272,"line_end":4272,"column_start":1,"column_end":4}},{"value":"/ This `enum` is constructed from the [`entry_ref`] method on [`HashMap`].","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":237460,"byte_end":237536,"line_start":4273,"line_end":4273,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":237537,"byte_end":237540,"line_start":4274,"line_end":4274,"column_start":1,"column_end":4}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form of the map's key type *must* match those","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":237541,"byte_end":237626,"line_start":4275,"line_end":4275,"column_start":1,"column_end":86}},{"value":"/ for the key type. It also require that key may be constructed from the borrowed","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":237627,"byte_end":237710,"line_start":4276,"line_end":4276,"column_start":1,"column_end":84}},{"value":"/ form through the [`From`] trait.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":237711,"byte_end":237747,"line_start":4277,"line_end":4277,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":237748,"byte_end":237751,"line_start":4278,"line_end":4278,"column_start":1,"column_end":4}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":237752,"byte_end":237788,"line_start":4279,"line_end":4279,"column_start":1,"column_end":37}},{"value":"/ [`entry_ref`]: struct.HashMap.html#method.entry_ref","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":237789,"byte_end":237844,"line_start":4280,"line_end":4280,"column_start":1,"column_end":56}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":237845,"byte_end":237904,"line_start":4281,"line_end":4281,"column_start":1,"column_end":60}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":237905,"byte_end":237969,"line_start":4282,"line_end":4282,"column_start":1,"column_end":65}},{"value":"/ [`From`]: https://doc.rust-lang.org/std/convert/trait.From.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":237970,"byte_end":238037,"line_start":4283,"line_end":4283,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":238038,"byte_end":238041,"line_start":4284,"line_end":4284,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":238042,"byte_end":238056,"line_start":4285,"line_end":4285,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":238057,"byte_end":238060,"line_start":4286,"line_end":4286,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":238061,"byte_end":238068,"line_start":4287,"line_end":4287,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::hash_map::{EntryRef, HashMap, OccupiedEntryRef};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":238069,"byte_end":238136,"line_start":4288,"line_end":4288,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":238137,"byte_end":238140,"line_start":4289,"line_end":4289,"column_start":1,"column_end":4}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":238141,"byte_end":238174,"line_start":4290,"line_end":4290,"column_start":1,"column_end":34}},{"value":"/ map.extend([(\"a\".to_owned(), 10), (\"b\".into(), 20), (\"c\".into(), 30)]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":238175,"byte_end":238250,"line_start":4291,"line_end":4291,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":238251,"byte_end":238280,"line_start":4292,"line_end":4292,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":238281,"byte_end":238284,"line_start":4293,"line_end":4293,"column_start":1,"column_end":4}},{"value":"/ // Existing key (insert)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":238285,"byte_end":238313,"line_start":4294,"line_end":4294,"column_start":1,"column_end":29}},{"value":"/ let key = String::from(\"a\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":238314,"byte_end":238346,"line_start":4295,"line_end":4295,"column_start":1,"column_end":33}},{"value":"/ let entry: EntryRef<_, _, _, _> = map.entry_ref(&key);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":238347,"byte_end":238405,"line_start":4296,"line_end":4296,"column_start":1,"column_end":59}},{"value":"/ let _raw_o: OccupiedEntryRef<_, _, _, _> = entry.insert(1);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":238406,"byte_end":238469,"line_start":4297,"line_end":4297,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":238470,"byte_end":238499,"line_start":4298,"line_end":4298,"column_start":1,"column_end":30}},{"value":"/ // Nonexistent key (insert)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":238500,"byte_end":238531,"line_start":4299,"line_end":4299,"column_start":1,"column_end":32}},{"value":"/ map.entry_ref(\"d\").insert(4);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":238532,"byte_end":238565,"line_start":4300,"line_end":4300,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":238566,"byte_end":238569,"line_start":4301,"line_end":4301,"column_start":1,"column_end":4}},{"value":"/ // Existing key (or_insert)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":238570,"byte_end":238601,"line_start":4302,"line_end":4302,"column_start":1,"column_end":32}},{"value":"/ let v = map.entry_ref(\"b\").or_insert(2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":238602,"byte_end":238646,"line_start":4303,"line_end":4303,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(std::mem::replace(v, 2), 20);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":238647,"byte_end":238691,"line_start":4304,"line_end":4304,"column_start":1,"column_end":45}},{"value":"/ // Nonexistent key (or_insert)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":238692,"byte_end":238726,"line_start":4305,"line_end":4305,"column_start":1,"column_end":35}},{"value":"/ map.entry_ref(\"e\").or_insert(5);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":238727,"byte_end":238763,"line_start":4306,"line_end":4306,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":238764,"byte_end":238767,"line_start":4307,"line_end":4307,"column_start":1,"column_end":4}},{"value":"/ // Existing key (or_insert_with)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":238768,"byte_end":238804,"line_start":4308,"line_end":4308,"column_start":1,"column_end":37}},{"value":"/ let v = map.entry_ref(\"c\").or_insert_with(|| 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":238805,"byte_end":238857,"line_start":4309,"line_end":4309,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(std::mem::replace(v, 3), 30);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":238858,"byte_end":238902,"line_start":4310,"line_end":4310,"column_start":1,"column_end":45}},{"value":"/ // Nonexistent key (or_insert_with)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":238903,"byte_end":238942,"line_start":4311,"line_end":4311,"column_start":1,"column_end":40}},{"value":"/ map.entry_ref(\"f\").or_insert_with(|| 6);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":238943,"byte_end":238987,"line_start":4312,"line_end":4312,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":238988,"byte_end":238991,"line_start":4313,"line_end":4313,"column_start":1,"column_end":4}},{"value":"/ println!(\"Our HashMap: {:?}\", map);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":238992,"byte_end":239031,"line_start":4314,"line_end":4314,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":239032,"byte_end":239035,"line_start":4315,"line_end":4315,"column_start":1,"column_end":4}},{"value":"/ for (key, value) in [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"].into_iter().zip(1..=6) {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":239036,"byte_end":239115,"line_start":4316,"line_end":4316,"column_start":1,"column_end":80}},{"value":"/     assert_eq!(map[key], value)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":239116,"byte_end":239151,"line_start":4317,"line_end":4317,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":239152,"byte_end":239157,"line_start":4318,"line_end":4318,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(map.len(), 6);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":239158,"byte_end":239187,"line_start":4319,"line_end":4319,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":239188,"byte_end":239195,"line_start":4320,"line_end":4320,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1223},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":242272,"byte_end":242288,"line_start":4434,"line_end":4434,"column_start":12,"column_end":28},"name":"OccupiedEntryRef","qualname":"::map::OccupiedEntryRef","value":"OccupiedEntryRef {  }","parent":null,"children":[{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1234}],"decl_id":null,"docs":" A view into an occupied entry in a `HashMap`.\n It is part of the [`EntryRef`] enum.","sig":null,"attributes":[{"value":"/ A view into an occupied entry in a `HashMap`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":241068,"byte_end":241117,"line_start":4393,"line_end":4393,"column_start":1,"column_end":50}},{"value":"/ It is part of the [`EntryRef`] enum.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":241118,"byte_end":241158,"line_start":4394,"line_end":4394,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":241159,"byte_end":241162,"line_start":4395,"line_end":4395,"column_start":1,"column_end":4}},{"value":"/ [`EntryRef`]: enum.EntryRef.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":241163,"byte_end":241199,"line_start":4396,"line_end":4396,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":241200,"byte_end":241203,"line_start":4397,"line_end":4397,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":241204,"byte_end":241218,"line_start":4398,"line_end":4398,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":241219,"byte_end":241222,"line_start":4399,"line_end":4399,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":241223,"byte_end":241230,"line_start":4400,"line_end":4400,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::hash_map::{EntryRef, HashMap, OccupiedEntryRef};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":241231,"byte_end":241298,"line_start":4401,"line_end":4401,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":241299,"byte_end":241302,"line_start":4402,"line_end":4402,"column_start":1,"column_end":4}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":241303,"byte_end":241336,"line_start":4403,"line_end":4403,"column_start":1,"column_end":34}},{"value":"/ map.extend([(\"a\".to_owned(), 10), (\"b\".into(), 20), (\"c\".into(), 30)]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":241337,"byte_end":241412,"line_start":4404,"line_end":4404,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":241413,"byte_end":241416,"line_start":4405,"line_end":4405,"column_start":1,"column_end":4}},{"value":"/ let key = String::from(\"a\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":241417,"byte_end":241449,"line_start":4406,"line_end":4406,"column_start":1,"column_end":33}},{"value":"/ let _entry_o: OccupiedEntryRef<_, _, _, _> = map.entry_ref(&key).insert(100);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":241450,"byte_end":241531,"line_start":4407,"line_end":4407,"column_start":1,"column_end":82}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":241532,"byte_end":241561,"line_start":4408,"line_end":4408,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":241562,"byte_end":241565,"line_start":4409,"line_end":4409,"column_start":1,"column_end":4}},{"value":"/ // Existing key (insert and update)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":241566,"byte_end":241605,"line_start":4410,"line_end":4410,"column_start":1,"column_end":40}},{"value":"/ match map.entry_ref(\"a\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":241606,"byte_end":241636,"line_start":4411,"line_end":4411,"column_start":1,"column_end":31}},{"value":"/     EntryRef::Vacant(_) => unreachable!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":241637,"byte_end":241683,"line_start":4412,"line_end":4412,"column_start":1,"column_end":47}},{"value":"/     EntryRef::Occupied(mut view) => {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":241684,"byte_end":241725,"line_start":4413,"line_end":4413,"column_start":1,"column_end":42}},{"value":"/         assert_eq!(view.get(), &100);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":241726,"byte_end":241767,"line_start":4414,"line_end":4414,"column_start":1,"column_end":42}},{"value":"/         let v = view.get_mut();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":241768,"byte_end":241803,"line_start":4415,"line_end":4415,"column_start":1,"column_end":36}},{"value":"/         *v *= 10;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":241804,"byte_end":241825,"line_start":4416,"line_end":4416,"column_start":1,"column_end":22}},{"value":"/         assert_eq!(view.insert(1111), 1000);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":241826,"byte_end":241874,"line_start":4417,"line_end":4417,"column_start":1,"column_end":49}},{"value":"/     }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":241875,"byte_end":241884,"line_start":4418,"line_end":4418,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":241885,"byte_end":241890,"line_start":4419,"line_end":4419,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":241891,"byte_end":241894,"line_start":4420,"line_end":4420,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(map[\"a\"], 1111);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":241895,"byte_end":241926,"line_start":4421,"line_end":4421,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(map.len(), 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":241927,"byte_end":241956,"line_start":4422,"line_end":4422,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":241957,"byte_end":241960,"line_start":4423,"line_end":4423,"column_start":1,"column_end":4}},{"value":"/ // Existing key (take)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":241961,"byte_end":241987,"line_start":4424,"line_end":4424,"column_start":1,"column_end":27}},{"value":"/ match map.entry_ref(\"c\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":241988,"byte_end":242018,"line_start":4425,"line_end":4425,"column_start":1,"column_end":31}},{"value":"/     EntryRef::Vacant(_) => unreachable!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":242019,"byte_end":242065,"line_start":4426,"line_end":4426,"column_start":1,"column_end":47}},{"value":"/     EntryRef::Occupied(view) => {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":242066,"byte_end":242103,"line_start":4427,"line_end":4427,"column_start":1,"column_end":38}},{"value":"/         assert_eq!(view.remove_entry(), (\"c\".to_owned(), 30));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":242104,"byte_end":242170,"line_start":4428,"line_end":4428,"column_start":1,"column_end":67}},{"value":"/     }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":242171,"byte_end":242180,"line_start":4429,"line_end":4429,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":242181,"byte_end":242186,"line_start":4430,"line_end":4430,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(map.get(\"c\"), None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":242187,"byte_end":242222,"line_start":4431,"line_end":4431,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(map.len(), 2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":242223,"byte_end":242252,"line_start":4432,"line_end":4432,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":242253,"byte_end":242260,"line_start":4433,"line_end":4433,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1258},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":244062,"byte_end":244076,"line_start":4501,"line_end":4501,"column_start":12,"column_end":26},"name":"VacantEntryRef","qualname":"::map::VacantEntryRef","value":"VacantEntryRef {  }","parent":null,"children":[{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1268}],"decl_id":null,"docs":" A view into a vacant entry in a `HashMap`.\n It is part of the [`EntryRef`] enum.","sig":null,"attributes":[{"value":"/ A view into a vacant entry in a `HashMap`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":243194,"byte_end":243240,"line_start":4471,"line_end":4471,"column_start":1,"column_end":47}},{"value":"/ It is part of the [`EntryRef`] enum.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":243241,"byte_end":243281,"line_start":4472,"line_end":4472,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":243282,"byte_end":243285,"line_start":4473,"line_end":4473,"column_start":1,"column_end":4}},{"value":"/ [`EntryRef`]: enum.EntryRef.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":243286,"byte_end":243322,"line_start":4474,"line_end":4474,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":243323,"byte_end":243326,"line_start":4475,"line_end":4475,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":243327,"byte_end":243341,"line_start":4476,"line_end":4476,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":243342,"byte_end":243345,"line_start":4477,"line_end":4477,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":243346,"byte_end":243353,"line_start":4478,"line_end":4478,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::hash_map::{EntryRef, HashMap, VacantEntryRef};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":243354,"byte_end":243419,"line_start":4479,"line_end":4479,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":243420,"byte_end":243423,"line_start":4480,"line_end":4480,"column_start":1,"column_end":4}},{"value":"/ let mut map = HashMap::<String, i32>::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":243424,"byte_end":243472,"line_start":4481,"line_end":4481,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":243473,"byte_end":243476,"line_start":4482,"line_end":4482,"column_start":1,"column_end":4}},{"value":"/ let entry_v: VacantEntryRef<_, _, _, _> = match map.entry_ref(\"a\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":243477,"byte_end":243549,"line_start":4483,"line_end":4483,"column_start":1,"column_end":73}},{"value":"/     EntryRef::Vacant(view) => view,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":243550,"byte_end":243589,"line_start":4484,"line_end":4484,"column_start":1,"column_end":40}},{"value":"/     EntryRef::Occupied(_) => unreachable!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":243590,"byte_end":243638,"line_start":4485,"line_end":4485,"column_start":1,"column_end":49}},{"value":"/ };","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":243639,"byte_end":243645,"line_start":4486,"line_end":4486,"column_start":1,"column_end":7}},{"value":"/ entry_v.insert(10);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":243646,"byte_end":243669,"line_start":4487,"line_end":4487,"column_start":1,"column_end":24}},{"value":"/ assert!(map[\"a\"] == 10 && map.len() == 1);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":243670,"byte_end":243716,"line_start":4488,"line_end":4488,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":243717,"byte_end":243720,"line_start":4489,"line_end":4489,"column_start":1,"column_end":4}},{"value":"/ // Nonexistent key (insert and update)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":243721,"byte_end":243763,"line_start":4490,"line_end":4490,"column_start":1,"column_end":43}},{"value":"/ match map.entry_ref(\"b\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":243764,"byte_end":243794,"line_start":4491,"line_end":4491,"column_start":1,"column_end":31}},{"value":"/     EntryRef::Occupied(_) => unreachable!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":243795,"byte_end":243843,"line_start":4492,"line_end":4492,"column_start":1,"column_end":49}},{"value":"/     EntryRef::Vacant(view) => {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":243844,"byte_end":243879,"line_start":4493,"line_end":4493,"column_start":1,"column_end":36}},{"value":"/         let value = view.insert(2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":243880,"byte_end":243919,"line_start":4494,"line_end":4494,"column_start":1,"column_end":40}},{"value":"/         assert_eq!(*value, 2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":243920,"byte_end":243954,"line_start":4495,"line_end":4495,"column_start":1,"column_end":35}},{"value":"/         *value = 20;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":243955,"byte_end":243979,"line_start":4496,"line_end":4496,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":243980,"byte_end":243989,"line_start":4497,"line_end":4497,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":243990,"byte_end":243995,"line_start":4498,"line_end":4498,"column_start":1,"column_end":6}},{"value":"/ assert!(map[\"b\"] == 20 && map.len() == 2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":243996,"byte_end":244042,"line_start":4499,"line_end":4499,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":244043,"byte_end":244050,"line_start":4500,"line_end":4500,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1276},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":245333,"byte_end":245346,"line_start":4539,"line_end":4539,"column_start":12,"column_end":25},"name":"OccupiedError","qualname":"::map::OccupiedError","value":"OccupiedError { entry, value }","parent":null,"children":[{"krate":0,"index":1282},{"krate":0,"index":1283}],"decl_id":null,"docs":" The error returned by [`try_insert`](HashMap::try_insert) when the key already exists.","sig":null,"attributes":[{"value":"/ The error returned by [`try_insert`](HashMap::try_insert) when the key already exists.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":244485,"byte_end":244575,"line_start":4515,"line_end":4515,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":244576,"byte_end":244579,"line_start":4516,"line_end":4516,"column_start":1,"column_end":4}},{"value":"/ Contains the occupied entry, and the value that was not inserted.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":244580,"byte_end":244649,"line_start":4517,"line_end":4517,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":244650,"byte_end":244653,"line_start":4518,"line_end":4518,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":244654,"byte_end":244668,"line_start":4519,"line_end":4519,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":244669,"byte_end":244672,"line_start":4520,"line_end":4520,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":244673,"byte_end":244680,"line_start":4521,"line_end":4521,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::hash_map::{HashMap, OccupiedError};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":244681,"byte_end":244735,"line_start":4522,"line_end":4522,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":244736,"byte_end":244739,"line_start":4523,"line_end":4523,"column_start":1,"column_end":4}},{"value":"/ let mut map: HashMap<_, _> = [(\"a\", 10), (\"b\", 20)].into();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":244740,"byte_end":244803,"line_start":4524,"line_end":4524,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":244804,"byte_end":244807,"line_start":4525,"line_end":4525,"column_start":1,"column_end":4}},{"value":"/ // try_insert method returns mutable reference to the value if keys are vacant,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":244808,"byte_end":244891,"line_start":4526,"line_end":4526,"column_start":1,"column_end":84}},{"value":"/ // but if the map did have key present, nothing is updated, and the provided","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":244892,"byte_end":244972,"line_start":4527,"line_end":4527,"column_start":1,"column_end":81}},{"value":"/ // value is returned inside `Err(_)` variant","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":244973,"byte_end":245021,"line_start":4528,"line_end":4528,"column_start":1,"column_end":49}},{"value":"/ match map.try_insert(\"a\", 100) {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":245022,"byte_end":245058,"line_start":4529,"line_end":4529,"column_start":1,"column_end":37}},{"value":"/     Err(OccupiedError { mut entry, value }) => {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":245059,"byte_end":245111,"line_start":4530,"line_end":4530,"column_start":1,"column_end":53}},{"value":"/         assert_eq!(entry.key(), &\"a\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":245112,"byte_end":245154,"line_start":4531,"line_end":4531,"column_start":1,"column_end":43}},{"value":"/         assert_eq!(value, 100);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":245155,"byte_end":245190,"line_start":4532,"line_end":4532,"column_start":1,"column_end":36}},{"value":"/         assert_eq!(entry.insert(100), 10)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":245191,"byte_end":245236,"line_start":4533,"line_end":4533,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":245237,"byte_end":245246,"line_start":4534,"line_end":4534,"column_start":1,"column_end":10}},{"value":"/     _ => unreachable!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":245247,"byte_end":245275,"line_start":4535,"line_end":4535,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":245276,"byte_end":245281,"line_start":4536,"line_end":4536,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(map[&\"a\"], 100);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":245282,"byte_end":245313,"line_start":4537,"line_end":4537,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":245314,"byte_end":245321,"line_start":4538,"line_end":4538,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":1282},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":245457,"byte_end":245462,"line_start":4541,"line_end":4541,"column_start":9,"column_end":14},"name":"entry","qualname":"::map::OccupiedError::entry","value":"map::OccupiedEntry<'a, K, V, S, A>","parent":{"krate":0,"index":1276},"children":[],"decl_id":null,"docs":" The entry in the map that was already occupied.\n","sig":null,"attributes":[{"value":"/ The entry in the map that was already occupied.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":245397,"byte_end":245448,"line_start":4540,"line_end":4540,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1283},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":245585,"byte_end":245590,"line_start":4543,"line_end":4543,"column_start":9,"column_end":14},"name":"value","qualname":"::map::OccupiedError::value","value":"V","parent":{"krate":0,"index":1276},"children":[],"decl_id":null,"docs":" The value which was not inserted, because the entry was already occupied.\n","sig":null,"attributes":[{"value":"/ The value which was not inserted, because the entry was already occupied.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":245499,"byte_end":245576,"line_start":4542,"line_end":4542,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1451},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":255903,"byte_end":255909,"line_start":4885,"line_end":4885,"column_start":12,"column_end":18},"name":"insert","qualname":"<Entry>::insert","value":"pub fn insert(Self, V) -> OccupiedEntry where K: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns an OccupiedEntry.","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns an OccupiedEntry.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":255511,"byte_end":255573,"line_start":4872,"line_end":4872,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":255578,"byte_end":255581,"line_start":4873,"line_end":4873,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":255586,"byte_end":255600,"line_start":4874,"line_end":4874,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":255605,"byte_end":255608,"line_start":4875,"line_end":4875,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":255613,"byte_end":255620,"line_start":4876,"line_end":4876,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":255625,"byte_end":255652,"line_start":4877,"line_end":4877,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":255657,"byte_end":255660,"line_start":4878,"line_end":4878,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":255665,"byte_end":255718,"line_start":4879,"line_end":4879,"column_start":5,"column_end":58}},{"value":"/ let entry = map.entry(\"horseyland\").insert(37);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":255723,"byte_end":255774,"line_start":4880,"line_end":4880,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":255779,"byte_end":255782,"line_start":4881,"line_end":4881,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(entry.key(), &\"horseyland\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":255787,"byte_end":255830,"line_start":4882,"line_end":4882,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":255835,"byte_end":255842,"line_start":4883,"line_end":4883,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":255883,"byte_end":255889,"line_start":4884,"line_end":4884,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1452},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":256839,"byte_end":256848,"line_start":4918,"line_end":4918,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub fn or_insert(Self, V) -> &'a mut V where K: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and returns\n a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default if empty, and returns","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":256238,"byte_end":256320,"line_start":4899,"line_end":4899,"column_start":5,"column_end":87}},{"value":"/ a mutable reference to the value in the entry.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":256325,"byte_end":256375,"line_start":4900,"line_end":4900,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":256380,"byte_end":256383,"line_start":4901,"line_end":4901,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":256388,"byte_end":256402,"line_start":4902,"line_end":4902,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":256407,"byte_end":256410,"line_start":4903,"line_end":4903,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":256415,"byte_end":256422,"line_start":4904,"line_end":4904,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":256427,"byte_end":256454,"line_start":4905,"line_end":4905,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":256459,"byte_end":256462,"line_start":4906,"line_end":4906,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":256467,"byte_end":256520,"line_start":4907,"line_end":4907,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":256525,"byte_end":256528,"line_start":4908,"line_end":4908,"column_start":5,"column_end":8}},{"value":"/ // nonexistent key","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":256533,"byte_end":256555,"line_start":4909,"line_end":4909,"column_start":5,"column_end":27}},{"value":"/ map.entry(\"poneyland\").or_insert(3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":256560,"byte_end":256600,"line_start":4910,"line_end":4910,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(map[\"poneyland\"], 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":256605,"byte_end":256641,"line_start":4911,"line_end":4911,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":256646,"byte_end":256649,"line_start":4912,"line_end":4912,"column_start":5,"column_end":8}},{"value":"/ // existing key","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":256654,"byte_end":256673,"line_start":4913,"line_end":4913,"column_start":5,"column_end":24}},{"value":"/ *map.entry(\"poneyland\").or_insert(10) *= 2;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":256678,"byte_end":256725,"line_start":4914,"line_end":4914,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(map[\"poneyland\"], 6);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":256730,"byte_end":256766,"line_start":4915,"line_end":4915,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":256771,"byte_end":256778,"line_start":4916,"line_end":4916,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":256819,"byte_end":256825,"line_start":4917,"line_end":4917,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1453},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":257734,"byte_end":257748,"line_start":4948,"line_end":4948,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"pub fn or_insert_with<F: FnOnce() -> V>(Self, F) -> &'a mut V where K: Hash,\nS: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default function if empty,\n and returns a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the result of the default function if empty,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":257094,"byte_end":257187,"line_start":4929,"line_end":4929,"column_start":5,"column_end":98}},{"value":"/ and returns a mutable reference to the value in the entry.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":257192,"byte_end":257254,"line_start":4930,"line_end":4930,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":257259,"byte_end":257262,"line_start":4931,"line_end":4931,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":257267,"byte_end":257281,"line_start":4932,"line_end":4932,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":257286,"byte_end":257289,"line_start":4933,"line_end":4933,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":257294,"byte_end":257301,"line_start":4934,"line_end":4934,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":257306,"byte_end":257333,"line_start":4935,"line_end":4935,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":257338,"byte_end":257341,"line_start":4936,"line_end":4936,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":257346,"byte_end":257399,"line_start":4937,"line_end":4937,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":257404,"byte_end":257407,"line_start":4938,"line_end":4938,"column_start":5,"column_end":8}},{"value":"/ // nonexistent key","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":257412,"byte_end":257434,"line_start":4939,"line_end":4939,"column_start":5,"column_end":27}},{"value":"/ map.entry(\"poneyland\").or_insert_with(|| 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":257439,"byte_end":257487,"line_start":4940,"line_end":4940,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(map[\"poneyland\"], 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":257492,"byte_end":257528,"line_start":4941,"line_end":4941,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":257533,"byte_end":257536,"line_start":4942,"line_end":4942,"column_start":5,"column_end":8}},{"value":"/ // existing key","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":257541,"byte_end":257560,"line_start":4943,"line_end":4943,"column_start":5,"column_end":24}},{"value":"/ *map.entry(\"poneyland\").or_insert_with(|| 10) *= 2;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":257565,"byte_end":257620,"line_start":4944,"line_end":4944,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(map[\"poneyland\"], 6);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":257625,"byte_end":257661,"line_start":4945,"line_end":4945,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":257666,"byte_end":257673,"line_start":4946,"line_end":4946,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":257714,"byte_end":257720,"line_start":4947,"line_end":4947,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1455},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":258997,"byte_end":259015,"line_start":4982,"line_end":4982,"column_start":12,"column_end":30},"name":"or_insert_with_key","qualname":"<Entry>::or_insert_with_key","value":"pub fn or_insert_with_key<F: FnOnce(&K) -> V>(Self, F) -> &'a mut V where\nK: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting, if empty, the result of the default function.\n This method allows for generating key-derived values for insertion by providing the default\n function a reference to the key that was moved during the `.entry(key)` method call.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting, if empty, the result of the default function.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":258014,"byte_end":258109,"line_start":4959,"line_end":4959,"column_start":5,"column_end":100}},{"value":"/ This method allows for generating key-derived values for insertion by providing the default","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":258114,"byte_end":258209,"line_start":4960,"line_end":4960,"column_start":5,"column_end":100}},{"value":"/ function a reference to the key that was moved during the `.entry(key)` method call.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":258214,"byte_end":258302,"line_start":4961,"line_end":4961,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":258307,"byte_end":258310,"line_start":4962,"line_end":4962,"column_start":5,"column_end":8}},{"value":"/ The reference to the moved key is provided so that cloning or copying the key is","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":258315,"byte_end":258399,"line_start":4963,"line_end":4963,"column_start":5,"column_end":89}},{"value":"/ unnecessary, unlike with `.or_insert_with(|| ... )`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":258404,"byte_end":258460,"line_start":4964,"line_end":4964,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":258465,"byte_end":258468,"line_start":4965,"line_end":4965,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":258473,"byte_end":258487,"line_start":4966,"line_end":4966,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":258492,"byte_end":258495,"line_start":4967,"line_end":4967,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":258500,"byte_end":258507,"line_start":4968,"line_end":4968,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":258512,"byte_end":258539,"line_start":4969,"line_end":4969,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":258544,"byte_end":258547,"line_start":4970,"line_end":4970,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, usize> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":258552,"byte_end":258607,"line_start":4971,"line_end":4971,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":258612,"byte_end":258615,"line_start":4972,"line_end":4972,"column_start":5,"column_end":8}},{"value":"/ // nonexistent key","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":258620,"byte_end":258642,"line_start":4973,"line_end":4973,"column_start":5,"column_end":27}},{"value":"/ map.entry(\"poneyland\").or_insert_with_key(|key| key.chars().count());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":258647,"byte_end":258720,"line_start":4974,"line_end":4974,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(map[\"poneyland\"], 9);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":258725,"byte_end":258761,"line_start":4975,"line_end":4975,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":258766,"byte_end":258769,"line_start":4976,"line_end":4976,"column_start":5,"column_end":8}},{"value":"/ // existing key","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":258774,"byte_end":258793,"line_start":4977,"line_end":4977,"column_start":5,"column_end":24}},{"value":"/ *map.entry(\"poneyland\").or_insert_with_key(|key| key.chars().count() * 10) *= 2;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":258798,"byte_end":258882,"line_start":4978,"line_end":4978,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(map[\"poneyland\"], 18);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":258887,"byte_end":258924,"line_start":4979,"line_end":4979,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":258929,"byte_end":258936,"line_start":4980,"line_end":4980,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":258977,"byte_end":258983,"line_start":4981,"line_end":4981,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1457},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":259846,"byte_end":259849,"line_start":5011,"line_end":5011,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to this entry's key.","sig":null,"attributes":[{"value":"/ Returns a reference to this entry's key.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":259360,"byte_end":259404,"line_start":4996,"line_end":4996,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":259409,"byte_end":259412,"line_start":4997,"line_end":4997,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":259417,"byte_end":259431,"line_start":4998,"line_end":4998,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":259436,"byte_end":259439,"line_start":4999,"line_end":4999,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":259444,"byte_end":259451,"line_start":5000,"line_end":5000,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":259456,"byte_end":259483,"line_start":5001,"line_end":5001,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":259488,"byte_end":259491,"line_start":5002,"line_end":5002,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":259496,"byte_end":259549,"line_start":5003,"line_end":5003,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":259554,"byte_end":259594,"line_start":5004,"line_end":5004,"column_start":5,"column_end":45}},{"value":"/ // existing key","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":259599,"byte_end":259618,"line_start":5005,"line_end":5005,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(map.entry(\"poneyland\").key(), &\"poneyland\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":259623,"byte_end":259682,"line_start":5006,"line_end":5006,"column_start":5,"column_end":64}},{"value":"/ // nonexistent key","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":259687,"byte_end":259709,"line_start":5007,"line_end":5007,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(map.entry(\"horseland\").key(), &\"horseland\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":259714,"byte_end":259773,"line_start":5008,"line_end":5008,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":259778,"byte_end":259785,"line_start":5009,"line_end":5009,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":259826,"byte_end":259832,"line_start":5010,"line_end":5010,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1458},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":260638,"byte_end":260648,"line_start":5039,"line_end":5039,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<Entry>::and_modify","value":"pub fn and_modify<F>(Self, F) -> Self where F: FnOnce(&mut V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Provides in-place mutable access to an occupied entry before any\n potential inserts into the map.","sig":null,"attributes":[{"value":"/ Provides in-place mutable access to an occupied entry before any","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":260016,"byte_end":260084,"line_start":5018,"line_end":5018,"column_start":5,"column_end":73}},{"value":"/ potential inserts into the map.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":260089,"byte_end":260124,"line_start":5019,"line_end":5019,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":260129,"byte_end":260132,"line_start":5020,"line_end":5020,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":260137,"byte_end":260151,"line_start":5021,"line_end":5021,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":260156,"byte_end":260159,"line_start":5022,"line_end":5022,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":260164,"byte_end":260171,"line_start":5023,"line_end":5023,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":260176,"byte_end":260203,"line_start":5024,"line_end":5024,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":260208,"byte_end":260211,"line_start":5025,"line_end":5025,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":260216,"byte_end":260269,"line_start":5026,"line_end":5026,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":260274,"byte_end":260277,"line_start":5027,"line_end":5027,"column_start":5,"column_end":8}},{"value":"/ map.entry(\"poneyland\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":260282,"byte_end":260308,"line_start":5028,"line_end":5028,"column_start":5,"column_end":31}},{"value":"/    .and_modify(|e| { *e += 1 })","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":260313,"byte_end":260348,"line_start":5029,"line_end":5029,"column_start":5,"column_end":40}},{"value":"/    .or_insert(42);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":260353,"byte_end":260375,"line_start":5030,"line_end":5030,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(map[\"poneyland\"], 42);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":260380,"byte_end":260417,"line_start":5031,"line_end":5031,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":260422,"byte_end":260425,"line_start":5032,"line_end":5032,"column_start":5,"column_end":8}},{"value":"/ map.entry(\"poneyland\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":260430,"byte_end":260456,"line_start":5033,"line_end":5033,"column_start":5,"column_end":31}},{"value":"/    .and_modify(|e| { *e += 1 })","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":260461,"byte_end":260496,"line_start":5034,"line_end":5034,"column_start":5,"column_end":40}},{"value":"/    .or_insert(42);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":260501,"byte_end":260523,"line_start":5035,"line_end":5035,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(map[\"poneyland\"], 43);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":260528,"byte_end":260565,"line_start":5036,"line_end":5036,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":260570,"byte_end":260577,"line_start":5037,"line_end":5037,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":260618,"byte_end":260624,"line_start":5038,"line_end":5038,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1460},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":262568,"byte_end":262590,"line_start":5107,"line_end":5107,"column_start":12,"column_end":34},"name":"and_replace_entry_with","qualname":"<Entry>::and_replace_entry_with","value":"pub fn and_replace_entry_with<F>(Self, F) -> Self where F: FnOnce(&K, V) ->\nOption<V>","parent":null,"children":[],"decl_id":null,"docs":" Provides shared access to the key and owned access to the value of\n an occupied entry and allows to replace or remove it based on the\n value of the returned option.","sig":null,"attributes":[{"value":"/ Provides shared access to the key and owned access to the value of","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":260948,"byte_end":261018,"line_start":5052,"line_end":5052,"column_start":5,"column_end":75}},{"value":"/ an occupied entry and allows to replace or remove it based on the","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":261023,"byte_end":261092,"line_start":5053,"line_end":5053,"column_start":5,"column_end":74}},{"value":"/ value of the returned option.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":261097,"byte_end":261130,"line_start":5054,"line_end":5054,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":261135,"byte_end":261138,"line_start":5055,"line_end":5055,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":261143,"byte_end":261157,"line_start":5056,"line_end":5056,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":261162,"byte_end":261165,"line_start":5057,"line_end":5057,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":261170,"byte_end":261177,"line_start":5058,"line_end":5058,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":261182,"byte_end":261209,"line_start":5059,"line_end":5059,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":261214,"byte_end":261249,"line_start":5060,"line_end":5060,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":261254,"byte_end":261257,"line_start":5061,"line_end":5061,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":261262,"byte_end":261315,"line_start":5062,"line_end":5062,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":261320,"byte_end":261323,"line_start":5063,"line_end":5063,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":261328,"byte_end":261347,"line_start":5064,"line_end":5064,"column_start":5,"column_end":24}},{"value":"/     .entry(\"poneyland\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":261352,"byte_end":261379,"line_start":5065,"line_end":5065,"column_start":5,"column_end":32}},{"value":"/     .and_replace_entry_with(|_k, _v| panic!());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":261384,"byte_end":261435,"line_start":5066,"line_end":5066,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":261440,"byte_end":261443,"line_start":5067,"line_end":5067,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":261448,"byte_end":261465,"line_start":5068,"line_end":5068,"column_start":5,"column_end":22}},{"value":"/     Entry::Vacant(e) => {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":261470,"byte_end":261499,"line_start":5069,"line_end":5069,"column_start":5,"column_end":34}},{"value":"/         assert_eq!(e.key(), &\"poneyland\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":261504,"byte_end":261550,"line_start":5070,"line_end":5070,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":261555,"byte_end":261564,"line_start":5071,"line_end":5071,"column_start":5,"column_end":14}},{"value":"/     Entry::Occupied(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":261569,"byte_end":261608,"line_start":5072,"line_end":5072,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":261613,"byte_end":261618,"line_start":5073,"line_end":5073,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":261623,"byte_end":261626,"line_start":5074,"line_end":5074,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"poneyland\", 42);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":261631,"byte_end":261663,"line_start":5075,"line_end":5075,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":261668,"byte_end":261671,"line_start":5076,"line_end":5076,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":261676,"byte_end":261695,"line_start":5077,"line_end":5077,"column_start":5,"column_end":24}},{"value":"/     .entry(\"poneyland\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":261700,"byte_end":261727,"line_start":5078,"line_end":5078,"column_start":5,"column_end":32}},{"value":"/     .and_replace_entry_with(|k, v| {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":261732,"byte_end":261772,"line_start":5079,"line_end":5079,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(k, &\"poneyland\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":261777,"byte_end":261817,"line_start":5080,"line_end":5080,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(v, 42);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":261822,"byte_end":261852,"line_start":5081,"line_end":5081,"column_start":5,"column_end":35}},{"value":"/         Some(v + 1)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":261857,"byte_end":261880,"line_start":5082,"line_end":5082,"column_start":5,"column_end":28}},{"value":"/     });","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":261885,"byte_end":261896,"line_start":5083,"line_end":5083,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":261901,"byte_end":261904,"line_start":5084,"line_end":5084,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":261909,"byte_end":261926,"line_start":5085,"line_end":5085,"column_start":5,"column_end":22}},{"value":"/     Entry::Occupied(e) => {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":261931,"byte_end":261962,"line_start":5086,"line_end":5086,"column_start":5,"column_end":36}},{"value":"/         assert_eq!(e.key(), &\"poneyland\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":261967,"byte_end":262013,"line_start":5087,"line_end":5087,"column_start":5,"column_end":51}},{"value":"/         assert_eq!(e.get(), &43);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":262018,"byte_end":262055,"line_start":5088,"line_end":5088,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":262060,"byte_end":262069,"line_start":5089,"line_end":5089,"column_start":5,"column_end":14}},{"value":"/     Entry::Vacant(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":262074,"byte_end":262111,"line_start":5090,"line_end":5090,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":262116,"byte_end":262121,"line_start":5091,"line_end":5091,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":262126,"byte_end":262129,"line_start":5092,"line_end":5092,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 43);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":262134,"byte_end":262171,"line_start":5093,"line_end":5093,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":262176,"byte_end":262179,"line_start":5094,"line_end":5094,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":262184,"byte_end":262203,"line_start":5095,"line_end":5095,"column_start":5,"column_end":24}},{"value":"/     .entry(\"poneyland\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":262208,"byte_end":262235,"line_start":5096,"line_end":5096,"column_start":5,"column_end":32}},{"value":"/     .and_replace_entry_with(|_k, _v| None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":262240,"byte_end":262287,"line_start":5097,"line_end":5097,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":262292,"byte_end":262295,"line_start":5098,"line_end":5098,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":262300,"byte_end":262317,"line_start":5099,"line_end":5099,"column_start":5,"column_end":22}},{"value":"/     Entry::Vacant(e) => assert_eq!(e.key(), &\"poneyland\"),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":262322,"byte_end":262384,"line_start":5100,"line_end":5100,"column_start":5,"column_end":67}},{"value":"/     Entry::Occupied(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":262389,"byte_end":262428,"line_start":5101,"line_end":5101,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":262433,"byte_end":262438,"line_start":5102,"line_end":5102,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":262443,"byte_end":262446,"line_start":5103,"line_end":5103,"column_start":5,"column_end":8}},{"value":"/ assert!(!map.contains_key(\"poneyland\"));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":262451,"byte_end":262495,"line_start":5104,"line_end":5104,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":262500,"byte_end":262507,"line_start":5105,"line_end":5105,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":262548,"byte_end":262554,"line_start":5106,"line_end":5106,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1468},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":263537,"byte_end":263547,"line_start":5139,"line_end":5139,"column_start":12,"column_end":22},"name":"or_default","qualname":"<Entry>::or_default","value":"pub fn or_default(Self) -> &'a mut V where K: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default value if empty,\n and returns a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default value if empty,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":262891,"byte_end":262967,"line_start":5119,"line_end":5119,"column_start":5,"column_end":81}},{"value":"/ and returns a mutable reference to the value in the entry.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":262972,"byte_end":263034,"line_start":5120,"line_end":5120,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":263039,"byte_end":263042,"line_start":5121,"line_end":5121,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":263047,"byte_end":263061,"line_start":5122,"line_end":5122,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":263066,"byte_end":263069,"line_start":5123,"line_end":5123,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":263074,"byte_end":263081,"line_start":5124,"line_end":5124,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":263086,"byte_end":263113,"line_start":5125,"line_end":5125,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":263118,"byte_end":263121,"line_start":5126,"line_end":5126,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, Option<u32>> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":263126,"byte_end":263187,"line_start":5127,"line_end":5127,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":263192,"byte_end":263195,"line_start":5128,"line_end":5128,"column_start":5,"column_end":8}},{"value":"/ // nonexistent key","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":263200,"byte_end":263222,"line_start":5129,"line_end":5129,"column_start":5,"column_end":27}},{"value":"/ map.entry(\"poneyland\").or_default();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":263227,"byte_end":263267,"line_start":5130,"line_end":5130,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(map[\"poneyland\"], None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":263272,"byte_end":263311,"line_start":5131,"line_end":5131,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":263316,"byte_end":263319,"line_start":5132,"line_end":5132,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"horseland\", Some(3));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":263324,"byte_end":263361,"line_start":5133,"line_end":5133,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":263366,"byte_end":263369,"line_start":5134,"line_end":5134,"column_start":5,"column_end":8}},{"value":"/ // existing key","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":263374,"byte_end":263393,"line_start":5135,"line_end":5135,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(map.entry(\"horseland\").or_default(), &mut Some(3));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":263398,"byte_end":263464,"line_start":5136,"line_end":5136,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":263469,"byte_end":263476,"line_start":5137,"line_end":5137,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":263517,"byte_end":263523,"line_start":5138,"line_end":5138,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1475},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":264370,"byte_end":264373,"line_start":5168,"line_end":5168,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key in the entry.","sig":null,"attributes":[{"value":"/ Gets a reference to the key in the entry.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":263866,"byte_end":263911,"line_start":5152,"line_end":5152,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":263916,"byte_end":263919,"line_start":5153,"line_end":5153,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":263924,"byte_end":263938,"line_start":5154,"line_end":5154,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":263943,"byte_end":263946,"line_start":5155,"line_end":5155,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":263951,"byte_end":263958,"line_start":5156,"line_end":5156,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{Entry, HashMap};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":263963,"byte_end":264009,"line_start":5157,"line_end":5157,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":264014,"byte_end":264017,"line_start":5158,"line_end":5158,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":264022,"byte_end":264075,"line_start":5159,"line_end":5159,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":264080,"byte_end":264121,"line_start":5160,"line_end":5160,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":264126,"byte_end":264129,"line_start":5161,"line_end":5161,"column_start":5,"column_end":8}},{"value":"/ match map.entry(\"poneyland\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":264134,"byte_end":264168,"line_start":5162,"line_end":5162,"column_start":5,"column_end":39}},{"value":"/     Entry::Vacant(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":264173,"byte_end":264210,"line_start":5163,"line_end":5163,"column_start":5,"column_end":42}},{"value":"/     Entry::Occupied(entry) => assert_eq!(entry.key(), &\"poneyland\"),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":264215,"byte_end":264287,"line_start":5164,"line_end":5164,"column_start":5,"column_end":77}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":264292,"byte_end":264297,"line_start":5165,"line_end":5165,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":264302,"byte_end":264309,"line_start":5166,"line_end":5166,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":264350,"byte_end":264356,"line_start":5167,"line_end":5167,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1476},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":265400,"byte_end":265412,"line_start":5198,"line_end":5198,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<OccupiedEntry>::remove_entry","value":"pub fn remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Take the ownership of the key and value from the map.\n Keeps the allocated memory for reuse.","sig":null,"attributes":[{"value":"/ Take the ownership of the key and value from the map.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":264441,"byte_end":264498,"line_start":5172,"line_end":5172,"column_start":5,"column_end":62}},{"value":"/ Keeps the allocated memory for reuse.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":264503,"byte_end":264544,"line_start":5173,"line_end":5173,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":264549,"byte_end":264552,"line_start":5174,"line_end":5174,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":264557,"byte_end":264571,"line_start":5175,"line_end":5175,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":264576,"byte_end":264579,"line_start":5176,"line_end":5176,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":264584,"byte_end":264591,"line_start":5177,"line_end":5177,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":264596,"byte_end":264623,"line_start":5178,"line_end":5178,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":264628,"byte_end":264663,"line_start":5179,"line_end":5179,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":264668,"byte_end":264671,"line_start":5180,"line_end":5180,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":264676,"byte_end":264729,"line_start":5181,"line_end":5181,"column_start":5,"column_end":58}},{"value":"/ // The map is empty","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":264734,"byte_end":264757,"line_start":5182,"line_end":5182,"column_start":5,"column_end":28}},{"value":"/ assert!(map.is_empty() && map.capacity() == 0);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":264762,"byte_end":264813,"line_start":5183,"line_end":5183,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":264818,"byte_end":264821,"line_start":5184,"line_end":5184,"column_start":5,"column_end":8}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":264826,"byte_end":264867,"line_start":5185,"line_end":5185,"column_start":5,"column_end":46}},{"value":"/ let capacity_before_remove = map.capacity();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":264872,"byte_end":264920,"line_start":5186,"line_end":5186,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":264925,"byte_end":264928,"line_start":5187,"line_end":5187,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(o) = map.entry(\"poneyland\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":264933,"byte_end":264989,"line_start":5188,"line_end":5188,"column_start":5,"column_end":61}},{"value":"/     // We delete the entry from the map.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":264994,"byte_end":265038,"line_start":5189,"line_end":5189,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(o.remove_entry(), (\"poneyland\", 12));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":265043,"byte_end":265099,"line_start":5190,"line_end":5190,"column_start":5,"column_end":61}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":265104,"byte_end":265109,"line_start":5191,"line_end":5191,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":265114,"byte_end":265117,"line_start":5192,"line_end":5192,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.contains_key(\"poneyland\"), false);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":265122,"byte_end":265175,"line_start":5193,"line_end":5193,"column_start":5,"column_end":58}},{"value":"/ // Now map hold none elements but capacity is equal to the old one","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":265180,"byte_end":265250,"line_start":5194,"line_end":5194,"column_start":5,"column_end":75}},{"value":"/ assert!(map.len() == 0 && map.capacity() == capacity_before_remove);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":265255,"byte_end":265327,"line_start":5195,"line_end":5195,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":265332,"byte_end":265339,"line_start":5196,"line_end":5196,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":265380,"byte_end":265386,"line_start":5197,"line_end":5197,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1477},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":266014,"byte_end":266017,"line_start":5219,"line_end":5219,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"pub fn get(&Self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Gets a reference to the value in the entry.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":265496,"byte_end":265543,"line_start":5202,"line_end":5202,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":265548,"byte_end":265551,"line_start":5203,"line_end":5203,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":265556,"byte_end":265570,"line_start":5204,"line_end":5204,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":265575,"byte_end":265578,"line_start":5205,"line_end":5205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":265583,"byte_end":265590,"line_start":5206,"line_end":5206,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":265595,"byte_end":265622,"line_start":5207,"line_end":5207,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":265627,"byte_end":265662,"line_start":5208,"line_end":5208,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":265667,"byte_end":265670,"line_start":5209,"line_end":5209,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":265675,"byte_end":265728,"line_start":5210,"line_end":5210,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":265733,"byte_end":265774,"line_start":5211,"line_end":5211,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":265779,"byte_end":265782,"line_start":5212,"line_end":5212,"column_start":5,"column_end":8}},{"value":"/ match map.entry(\"poneyland\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":265787,"byte_end":265821,"line_start":5213,"line_end":5213,"column_start":5,"column_end":39}},{"value":"/     Entry::Vacant(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":265826,"byte_end":265863,"line_start":5214,"line_end":5214,"column_start":5,"column_end":42}},{"value":"/     Entry::Occupied(entry) => assert_eq!(entry.get(), &12),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":265868,"byte_end":265931,"line_start":5215,"line_end":5215,"column_start":5,"column_end":68}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":265936,"byte_end":265941,"line_start":5216,"line_end":5216,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":265946,"byte_end":265953,"line_start":5217,"line_end":5217,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":265994,"byte_end":266000,"line_start":5218,"line_end":5218,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1478},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":266977,"byte_end":266984,"line_start":5251,"line_end":5251,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the value in the entry.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":266085,"byte_end":266140,"line_start":5223,"line_end":5223,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":266145,"byte_end":266148,"line_start":5224,"line_end":5224,"column_start":5,"column_end":8}},{"value":"/ If you need a reference to the `OccupiedEntry` which may outlive the","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":266153,"byte_end":266225,"line_start":5225,"line_end":5225,"column_start":5,"column_end":77}},{"value":"/ destruction of the `Entry` value, see [`into_mut`].","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":266230,"byte_end":266285,"line_start":5226,"line_end":5226,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":266290,"byte_end":266293,"line_start":5227,"line_end":5227,"column_start":5,"column_end":8}},{"value":"/ [`into_mut`]: #method.into_mut","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":266298,"byte_end":266332,"line_start":5228,"line_end":5228,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":266337,"byte_end":266340,"line_start":5229,"line_end":5229,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":266345,"byte_end":266359,"line_start":5230,"line_end":5230,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":266364,"byte_end":266367,"line_start":5231,"line_end":5231,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":266372,"byte_end":266379,"line_start":5232,"line_end":5232,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":266384,"byte_end":266411,"line_start":5233,"line_end":5233,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":266416,"byte_end":266451,"line_start":5234,"line_end":5234,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":266456,"byte_end":266459,"line_start":5235,"line_end":5235,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":266464,"byte_end":266517,"line_start":5236,"line_end":5236,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":266522,"byte_end":266563,"line_start":5237,"line_end":5237,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":266568,"byte_end":266571,"line_start":5238,"line_end":5238,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 12);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":266576,"byte_end":266613,"line_start":5239,"line_end":5239,"column_start":5,"column_end":42}},{"value":"/ if let Entry::Occupied(mut o) = map.entry(\"poneyland\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":266618,"byte_end":266678,"line_start":5240,"line_end":5240,"column_start":5,"column_end":65}},{"value":"/     *o.get_mut() += 10;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":266683,"byte_end":266710,"line_start":5241,"line_end":5241,"column_start":5,"column_end":32}},{"value":"/     assert_eq!(*o.get(), 22);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":266715,"byte_end":266748,"line_start":5242,"line_end":5242,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":266753,"byte_end":266756,"line_start":5243,"line_end":5243,"column_start":5,"column_end":8}},{"value":"/     // We can use the same Entry multiple times.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":266761,"byte_end":266813,"line_start":5244,"line_end":5244,"column_start":5,"column_end":57}},{"value":"/     *o.get_mut() += 2;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":266818,"byte_end":266844,"line_start":5245,"line_end":5245,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":266849,"byte_end":266854,"line_start":5246,"line_end":5246,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":266859,"byte_end":266862,"line_start":5247,"line_end":5247,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 24);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":266867,"byte_end":266904,"line_start":5248,"line_end":5248,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":266909,"byte_end":266916,"line_start":5249,"line_end":5249,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":266957,"byte_end":266963,"line_start":5250,"line_end":5250,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1479},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":267925,"byte_end":267933,"line_start":5282,"line_end":5282,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"pub fn into_mut(Self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Converts the OccupiedEntry into a mutable reference to the value in the entry\n with a lifetime bound to the map itself.","sig":null,"attributes":[{"value":"/ Converts the OccupiedEntry into a mutable reference to the value in the entry","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":267064,"byte_end":267145,"line_start":5255,"line_end":5255,"column_start":5,"column_end":86}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":267150,"byte_end":267194,"line_start":5256,"line_end":5256,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":267199,"byte_end":267202,"line_start":5257,"line_end":5257,"column_start":5,"column_end":8}},{"value":"/ If you need multiple references to the `OccupiedEntry`, see [`get_mut`].","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":267207,"byte_end":267283,"line_start":5258,"line_end":5258,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":267288,"byte_end":267291,"line_start":5259,"line_end":5259,"column_start":5,"column_end":8}},{"value":"/ [`get_mut`]: #method.get_mut","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":267296,"byte_end":267328,"line_start":5260,"line_end":5260,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":267333,"byte_end":267336,"line_start":5261,"line_end":5261,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":267341,"byte_end":267355,"line_start":5262,"line_end":5262,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":267360,"byte_end":267363,"line_start":5263,"line_end":5263,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":267368,"byte_end":267375,"line_start":5264,"line_end":5264,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{Entry, HashMap};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":267380,"byte_end":267426,"line_start":5265,"line_end":5265,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":267431,"byte_end":267434,"line_start":5266,"line_end":5266,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":267439,"byte_end":267492,"line_start":5267,"line_end":5267,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":267497,"byte_end":267538,"line_start":5268,"line_end":5268,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":267543,"byte_end":267546,"line_start":5269,"line_end":5269,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 12);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":267551,"byte_end":267588,"line_start":5270,"line_end":5270,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":267593,"byte_end":267596,"line_start":5271,"line_end":5271,"column_start":5,"column_end":8}},{"value":"/ let value: &mut u32;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":267601,"byte_end":267625,"line_start":5272,"line_end":5272,"column_start":5,"column_end":29}},{"value":"/ match map.entry(\"poneyland\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":267630,"byte_end":267664,"line_start":5273,"line_end":5273,"column_start":5,"column_end":39}},{"value":"/     Entry::Occupied(entry) => value = entry.into_mut(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":267669,"byte_end":267728,"line_start":5274,"line_end":5274,"column_start":5,"column_end":64}},{"value":"/     Entry::Vacant(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":267733,"byte_end":267770,"line_start":5275,"line_end":5275,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":267775,"byte_end":267780,"line_start":5276,"line_end":5276,"column_start":5,"column_end":10}},{"value":"/ *value += 10;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":267785,"byte_end":267802,"line_start":5277,"line_end":5277,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":267807,"byte_end":267810,"line_start":5278,"line_end":5278,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 22);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":267815,"byte_end":267852,"line_start":5279,"line_end":5279,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":267857,"byte_end":267864,"line_start":5280,"line_end":5280,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":267905,"byte_end":267911,"line_start":5281,"line_end":5281,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1480},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":268557,"byte_end":268563,"line_start":5304,"line_end":5304,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"pub fn insert(&mut Self, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns the entry's old value.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":268011,"byte_end":268078,"line_start":5286,"line_end":5286,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":268083,"byte_end":268086,"line_start":5287,"line_end":5287,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":268091,"byte_end":268105,"line_start":5288,"line_end":5288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":268110,"byte_end":268113,"line_start":5289,"line_end":5289,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":268118,"byte_end":268125,"line_start":5290,"line_end":5290,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":268130,"byte_end":268157,"line_start":5291,"line_end":5291,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":268162,"byte_end":268197,"line_start":5292,"line_end":5292,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":268202,"byte_end":268205,"line_start":5293,"line_end":5293,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":268210,"byte_end":268263,"line_start":5294,"line_end":5294,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":268268,"byte_end":268309,"line_start":5295,"line_end":5295,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":268314,"byte_end":268317,"line_start":5296,"line_end":5296,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(mut o) = map.entry(\"poneyland\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":268322,"byte_end":268382,"line_start":5297,"line_end":5297,"column_start":5,"column_end":65}},{"value":"/     assert_eq!(o.insert(15), 12);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":268387,"byte_end":268424,"line_start":5298,"line_end":5298,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":268429,"byte_end":268434,"line_start":5299,"line_end":5299,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":268439,"byte_end":268442,"line_start":5300,"line_end":5300,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 15);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":268447,"byte_end":268484,"line_start":5301,"line_end":5301,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":268489,"byte_end":268496,"line_start":5302,"line_end":5302,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":268537,"byte_end":268543,"line_start":5303,"line_end":5303,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1481},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":269532,"byte_end":269538,"line_start":5333,"line_end":5333,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"pub fn remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of the entry, and returns it.\n Keeps the allocated memory for reuse.","sig":null,"attributes":[{"value":"/ Takes the value out of the entry, and returns it.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":268647,"byte_end":268700,"line_start":5308,"line_end":5308,"column_start":5,"column_end":58}},{"value":"/ Keeps the allocated memory for reuse.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":268705,"byte_end":268746,"line_start":5309,"line_end":5309,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":268751,"byte_end":268754,"line_start":5310,"line_end":5310,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":268759,"byte_end":268773,"line_start":5311,"line_end":5311,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":268778,"byte_end":268781,"line_start":5312,"line_end":5312,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":268786,"byte_end":268793,"line_start":5313,"line_end":5313,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":268798,"byte_end":268825,"line_start":5314,"line_end":5314,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":268830,"byte_end":268865,"line_start":5315,"line_end":5315,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":268870,"byte_end":268873,"line_start":5316,"line_end":5316,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":268878,"byte_end":268931,"line_start":5317,"line_end":5317,"column_start":5,"column_end":58}},{"value":"/ // The map is empty","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":268936,"byte_end":268959,"line_start":5318,"line_end":5318,"column_start":5,"column_end":28}},{"value":"/ assert!(map.is_empty() && map.capacity() == 0);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":268964,"byte_end":269015,"line_start":5319,"line_end":5319,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":269020,"byte_end":269023,"line_start":5320,"line_end":5320,"column_start":5,"column_end":8}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":269028,"byte_end":269069,"line_start":5321,"line_end":5321,"column_start":5,"column_end":46}},{"value":"/ let capacity_before_remove = map.capacity();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":269074,"byte_end":269122,"line_start":5322,"line_end":5322,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":269127,"byte_end":269130,"line_start":5323,"line_end":5323,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(o) = map.entry(\"poneyland\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":269135,"byte_end":269191,"line_start":5324,"line_end":5324,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(o.remove(), 12);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":269196,"byte_end":269231,"line_start":5325,"line_end":5325,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":269236,"byte_end":269241,"line_start":5326,"line_end":5326,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":269246,"byte_end":269249,"line_start":5327,"line_end":5327,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.contains_key(\"poneyland\"), false);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":269254,"byte_end":269307,"line_start":5328,"line_end":5328,"column_start":5,"column_end":58}},{"value":"/ // Now map hold none elements but capacity is equal to the old one","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":269312,"byte_end":269382,"line_start":5329,"line_end":5329,"column_start":5,"column_end":75}},{"value":"/ assert!(map.len() == 0 && map.capacity() == capacity_before_remove);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":269387,"byte_end":269459,"line_start":5330,"line_end":5330,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":269464,"byte_end":269471,"line_start":5331,"line_end":5331,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":269512,"byte_end":269518,"line_start":5332,"line_end":5332,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1482},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":270844,"byte_end":270857,"line_start":5369,"line_end":5369,"column_start":12,"column_end":25},"name":"replace_entry","qualname":"<OccupiedEntry>::replace_entry","value":"pub fn replace_entry(Self, V) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Replaces the entry, returning the old key and value. The new key in the hash map will be\n the key used to create this entry.","sig":null,"attributes":[{"value":"/ Replaces the entry, returning the old key and value. The new key in the hash map will be","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":269593,"byte_end":269685,"line_start":5337,"line_end":5337,"column_start":5,"column_end":97}},{"value":"/ the key used to create this entry.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":269690,"byte_end":269728,"line_start":5338,"line_end":5338,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":269733,"byte_end":269736,"line_start":5339,"line_end":5339,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":269741,"byte_end":269753,"line_start":5340,"line_end":5340,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":269758,"byte_end":269761,"line_start":5341,"line_end":5341,"column_start":5,"column_end":8}},{"value":"/ Will panic if this OccupiedEntry was created through [`Entry::insert`].","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":269766,"byte_end":269841,"line_start":5342,"line_end":5342,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":269846,"byte_end":269849,"line_start":5343,"line_end":5343,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":269854,"byte_end":269868,"line_start":5344,"line_end":5344,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":269873,"byte_end":269876,"line_start":5345,"line_end":5345,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":269881,"byte_end":269888,"line_start":5346,"line_end":5346,"column_start":5,"column_end":12}},{"value":"/  use hashbrown::hash_map::{Entry, HashMap};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":269893,"byte_end":269940,"line_start":5347,"line_end":5347,"column_start":5,"column_end":52}},{"value":"/  use std::rc::Rc;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":269945,"byte_end":269966,"line_start":5348,"line_end":5348,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":269971,"byte_end":269974,"line_start":5349,"line_end":5349,"column_start":5,"column_end":8}},{"value":"/  let mut map: HashMap<Rc<String>, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":269979,"byte_end":270039,"line_start":5350,"line_end":5350,"column_start":5,"column_end":65}},{"value":"/  let key_one = Rc::new(\"Stringthing\".to_string());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":270044,"byte_end":270098,"line_start":5351,"line_end":5351,"column_start":5,"column_end":59}},{"value":"/  let key_two = Rc::new(\"Stringthing\".to_string());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":270103,"byte_end":270157,"line_start":5352,"line_end":5352,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":270162,"byte_end":270165,"line_start":5353,"line_end":5353,"column_start":5,"column_end":8}},{"value":"/  map.insert(key_one.clone(), 15);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":270170,"byte_end":270207,"line_start":5354,"line_end":5354,"column_start":5,"column_end":42}},{"value":"/  assert!(Rc::strong_count(&key_one) == 2 && Rc::strong_count(&key_two) == 1);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":270212,"byte_end":270293,"line_start":5355,"line_end":5355,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":270298,"byte_end":270301,"line_start":5356,"line_end":5356,"column_start":5,"column_end":8}},{"value":"/  match map.entry(key_two.clone()) {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":270306,"byte_end":270345,"line_start":5357,"line_end":5357,"column_start":5,"column_end":44}},{"value":"/      Entry::Occupied(entry) => {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":270350,"byte_end":270386,"line_start":5358,"line_end":5358,"column_start":5,"column_end":41}},{"value":"/          let (old_key, old_value): (Rc<String>, u32) = entry.replace_entry(16);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":270391,"byte_end":270474,"line_start":5359,"line_end":5359,"column_start":5,"column_end":88}},{"value":"/          assert!(Rc::ptr_eq(&key_one, &old_key) && old_value == 15);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":270479,"byte_end":270551,"line_start":5360,"line_end":5360,"column_start":5,"column_end":77}},{"value":"/      }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":270556,"byte_end":270566,"line_start":5361,"line_end":5361,"column_start":5,"column_end":15}},{"value":"/      Entry::Vacant(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":270571,"byte_end":270609,"line_start":5362,"line_end":5362,"column_start":5,"column_end":43}},{"value":"/  }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":270614,"byte_end":270620,"line_start":5363,"line_end":5363,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":270625,"byte_end":270628,"line_start":5364,"line_end":5364,"column_start":5,"column_end":8}},{"value":"/  assert!(Rc::strong_count(&key_one) == 1 && Rc::strong_count(&key_two) == 2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":270633,"byte_end":270714,"line_start":5365,"line_end":5365,"column_start":5,"column_end":86}},{"value":"/  assert_eq!(map[&\"Stringthing\".to_owned()], 16);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":270719,"byte_end":270771,"line_start":5366,"line_end":5366,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":270776,"byte_end":270783,"line_start":5367,"line_end":5367,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":270824,"byte_end":270830,"line_start":5368,"line_end":5368,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1483},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":272768,"byte_end":272779,"line_start":5423,"line_end":5423,"column_start":12,"column_end":23},"name":"replace_key","qualname":"<OccupiedEntry>::replace_key","value":"pub fn replace_key(Self) -> K","parent":null,"children":[],"decl_id":null,"docs":" Replaces the key in the hash map with the key used to create this entry.","sig":null,"attributes":[{"value":"/ Replaces the key in the hash map with the key used to create this entry.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":271107,"byte_end":271183,"line_start":5378,"line_end":5378,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":271188,"byte_end":271191,"line_start":5379,"line_end":5379,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":271196,"byte_end":271208,"line_start":5380,"line_end":5380,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":271213,"byte_end":271216,"line_start":5381,"line_end":5381,"column_start":5,"column_end":8}},{"value":"/ Will panic if this OccupiedEntry was created through [`Entry::insert`].","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":271221,"byte_end":271296,"line_start":5382,"line_end":5382,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":271301,"byte_end":271304,"line_start":5383,"line_end":5383,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":271309,"byte_end":271323,"line_start":5384,"line_end":5384,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":271328,"byte_end":271331,"line_start":5385,"line_end":5385,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":271336,"byte_end":271343,"line_start":5386,"line_end":5386,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{Entry, HashMap};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":271348,"byte_end":271394,"line_start":5387,"line_end":5387,"column_start":5,"column_end":51}},{"value":"/ use std::rc::Rc;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":271399,"byte_end":271419,"line_start":5388,"line_end":5388,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":271424,"byte_end":271427,"line_start":5389,"line_end":5389,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<Rc<String>, usize> = HashMap::with_capacity(6);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":271432,"byte_end":271504,"line_start":5390,"line_end":5390,"column_start":5,"column_end":77}},{"value":"/ let mut keys_one: Vec<Rc<String>> = Vec::with_capacity(6);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":271509,"byte_end":271571,"line_start":5391,"line_end":5391,"column_start":5,"column_end":67}},{"value":"/ let mut keys_two: Vec<Rc<String>> = Vec::with_capacity(6);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":271576,"byte_end":271638,"line_start":5392,"line_end":5392,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":271643,"byte_end":271646,"line_start":5393,"line_end":5393,"column_start":5,"column_end":8}},{"value":"/ for (value, key) in [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"].into_iter().enumerate() {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":271651,"byte_end":271731,"line_start":5394,"line_end":5394,"column_start":5,"column_end":85}},{"value":"/     let rc_key = Rc::new(key.to_owned());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":271736,"byte_end":271781,"line_start":5395,"line_end":5395,"column_start":5,"column_end":50}},{"value":"/     keys_one.push(rc_key.clone());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":271786,"byte_end":271824,"line_start":5396,"line_end":5396,"column_start":5,"column_end":43}},{"value":"/     map.insert(rc_key.clone(), value);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":271829,"byte_end":271871,"line_start":5397,"line_end":5397,"column_start":5,"column_end":47}},{"value":"/     keys_two.push(Rc::new(key.to_owned()));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":271876,"byte_end":271923,"line_start":5398,"line_end":5398,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":271928,"byte_end":271933,"line_start":5399,"line_end":5399,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":271938,"byte_end":271941,"line_start":5400,"line_end":5400,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":271946,"byte_end":271958,"line_start":5401,"line_end":5401,"column_start":5,"column_end":17}},{"value":"/     keys_one.iter().all(|key| Rc::strong_count(key) == 2)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":271963,"byte_end":272024,"line_start":5402,"line_end":5402,"column_start":5,"column_end":66}},{"value":"/         && keys_two.iter().all(|key| Rc::strong_count(key) == 1)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":272029,"byte_end":272097,"line_start":5403,"line_end":5403,"column_start":5,"column_end":73}},{"value":"/ );","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":272102,"byte_end":272108,"line_start":5404,"line_end":5404,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":272113,"byte_end":272116,"line_start":5405,"line_end":5405,"column_start":5,"column_end":8}},{"value":"/ reclaim_memory(&mut map, &keys_two);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":272121,"byte_end":272161,"line_start":5406,"line_end":5406,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":272166,"byte_end":272169,"line_start":5407,"line_end":5407,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":272174,"byte_end":272186,"line_start":5408,"line_end":5408,"column_start":5,"column_end":17}},{"value":"/     keys_one.iter().all(|key| Rc::strong_count(key) == 1)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":272191,"byte_end":272252,"line_start":5409,"line_end":5409,"column_start":5,"column_end":66}},{"value":"/         && keys_two.iter().all(|key| Rc::strong_count(key) == 2)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":272257,"byte_end":272325,"line_start":5410,"line_end":5410,"column_start":5,"column_end":73}},{"value":"/ );","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":272330,"byte_end":272336,"line_start":5411,"line_end":5411,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":272341,"byte_end":272344,"line_start":5412,"line_end":5412,"column_start":5,"column_end":8}},{"value":"/ fn reclaim_memory(map: &mut HashMap<Rc<String>, usize>, keys: &[Rc<String>]) {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":272349,"byte_end":272431,"line_start":5413,"line_end":5413,"column_start":5,"column_end":87}},{"value":"/     for key in keys {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":272436,"byte_end":272461,"line_start":5414,"line_end":5414,"column_start":5,"column_end":30}},{"value":"/         if let Entry::Occupied(entry) = map.entry(key.clone()) {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":272466,"byte_end":272534,"line_start":5415,"line_end":5415,"column_start":5,"column_end":73}},{"value":"/         // Replaces the entry's key with our version of it in `keys`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":272539,"byte_end":272612,"line_start":5416,"line_end":5416,"column_start":5,"column_end":78}},{"value":"/             entry.replace_key();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":272617,"byte_end":272653,"line_start":5417,"line_end":5417,"column_start":5,"column_end":41}},{"value":"/         }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":272658,"byte_end":272671,"line_start":5418,"line_end":5418,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":272676,"byte_end":272685,"line_start":5419,"line_end":5419,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":272690,"byte_end":272695,"line_start":5420,"line_end":5420,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":272700,"byte_end":272707,"line_start":5421,"line_end":5421,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":272748,"byte_end":272754,"line_start":5422,"line_end":5422,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1484},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":274423,"byte_end":274441,"line_start":5477,"line_end":5477,"column_start":12,"column_end":30},"name":"replace_entry_with","qualname":"<OccupiedEntry>::replace_entry_with","value":"pub fn replace_entry_with<F>(Self, F) -> Entry where F: FnOnce(&K, V) ->\nOption<V>","parent":null,"children":[],"decl_id":null,"docs":" Provides shared access to the key and owned access to the value of\n the entry and allows to replace or remove it based on the\n value of the returned option.","sig":null,"attributes":[{"value":"/ Provides shared access to the key and owned access to the value of","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":272909,"byte_end":272979,"line_start":5428,"line_end":5428,"column_start":5,"column_end":75}},{"value":"/ the entry and allows to replace or remove it based on the","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":272984,"byte_end":273045,"line_start":5429,"line_end":5429,"column_start":5,"column_end":66}},{"value":"/ value of the returned option.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":273050,"byte_end":273083,"line_start":5430,"line_end":5430,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":273088,"byte_end":273091,"line_start":5431,"line_end":5431,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":273096,"byte_end":273110,"line_start":5432,"line_end":5432,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":273115,"byte_end":273118,"line_start":5433,"line_end":5433,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":273123,"byte_end":273130,"line_start":5434,"line_end":5434,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":273135,"byte_end":273162,"line_start":5435,"line_end":5435,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":273167,"byte_end":273202,"line_start":5436,"line_end":5436,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":273207,"byte_end":273210,"line_start":5437,"line_end":5437,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":273215,"byte_end":273268,"line_start":5438,"line_end":5438,"column_start":5,"column_end":58}},{"value":"/ map.insert(\"poneyland\", 42);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":273273,"byte_end":273305,"line_start":5439,"line_end":5439,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":273310,"byte_end":273313,"line_start":5440,"line_end":5440,"column_start":5,"column_end":8}},{"value":"/ let entry = match map.entry(\"poneyland\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":273318,"byte_end":273364,"line_start":5441,"line_end":5441,"column_start":5,"column_end":51}},{"value":"/     Entry::Occupied(e) => {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":273369,"byte_end":273400,"line_start":5442,"line_end":5442,"column_start":5,"column_end":36}},{"value":"/         e.replace_entry_with(|k, v| {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":273405,"byte_end":273446,"line_start":5443,"line_end":5443,"column_start":5,"column_end":46}},{"value":"/             assert_eq!(k, &\"poneyland\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":273451,"byte_end":273495,"line_start":5444,"line_end":5444,"column_start":5,"column_end":49}},{"value":"/             assert_eq!(v, 42);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":273500,"byte_end":273534,"line_start":5445,"line_end":5445,"column_start":5,"column_end":39}},{"value":"/             Some(v + 1)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":273539,"byte_end":273566,"line_start":5446,"line_end":5446,"column_start":5,"column_end":32}},{"value":"/         })","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":273571,"byte_end":273585,"line_start":5447,"line_end":5447,"column_start":5,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":273590,"byte_end":273599,"line_start":5448,"line_end":5448,"column_start":5,"column_end":14}},{"value":"/     Entry::Vacant(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":273604,"byte_end":273641,"line_start":5449,"line_end":5449,"column_start":5,"column_end":42}},{"value":"/ };","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":273646,"byte_end":273652,"line_start":5450,"line_end":5450,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":273657,"byte_end":273660,"line_start":5451,"line_end":5451,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":273665,"byte_end":273682,"line_start":5452,"line_end":5452,"column_start":5,"column_end":22}},{"value":"/     Entry::Occupied(e) => {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":273687,"byte_end":273718,"line_start":5453,"line_end":5453,"column_start":5,"column_end":36}},{"value":"/         assert_eq!(e.key(), &\"poneyland\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":273723,"byte_end":273769,"line_start":5454,"line_end":5454,"column_start":5,"column_end":51}},{"value":"/         assert_eq!(e.get(), &43);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":273774,"byte_end":273811,"line_start":5455,"line_end":5455,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":273816,"byte_end":273825,"line_start":5456,"line_end":5456,"column_start":5,"column_end":14}},{"value":"/     Entry::Vacant(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":273830,"byte_end":273867,"line_start":5457,"line_end":5457,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":273872,"byte_end":273877,"line_start":5458,"line_end":5458,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":273882,"byte_end":273885,"line_start":5459,"line_end":5459,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 43);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":273890,"byte_end":273927,"line_start":5460,"line_end":5460,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":273932,"byte_end":273935,"line_start":5461,"line_end":5461,"column_start":5,"column_end":8}},{"value":"/ let entry = match map.entry(\"poneyland\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":273940,"byte_end":273986,"line_start":5462,"line_end":5462,"column_start":5,"column_end":51}},{"value":"/     Entry::Occupied(e) => e.replace_entry_with(|_k, _v| None),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":273991,"byte_end":274057,"line_start":5463,"line_end":5463,"column_start":5,"column_end":71}},{"value":"/     Entry::Vacant(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":274062,"byte_end":274099,"line_start":5464,"line_end":5464,"column_start":5,"column_end":42}},{"value":"/ };","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":274104,"byte_end":274110,"line_start":5465,"line_end":5465,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":274115,"byte_end":274118,"line_start":5466,"line_end":5466,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":274123,"byte_end":274140,"line_start":5467,"line_end":5467,"column_start":5,"column_end":22}},{"value":"/     Entry::Vacant(e) => {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":274145,"byte_end":274174,"line_start":5468,"line_end":5468,"column_start":5,"column_end":34}},{"value":"/         assert_eq!(e.key(), &\"poneyland\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":274179,"byte_end":274225,"line_start":5469,"line_end":5469,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":274230,"byte_end":274239,"line_start":5470,"line_end":5470,"column_start":5,"column_end":14}},{"value":"/     Entry::Occupied(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":274244,"byte_end":274283,"line_start":5471,"line_end":5471,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":274288,"byte_end":274293,"line_start":5472,"line_end":5472,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":274298,"byte_end":274301,"line_start":5473,"line_end":5473,"column_start":5,"column_end":8}},{"value":"/ assert!(!map.contains_key(\"poneyland\"));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":274306,"byte_end":274350,"line_start":5474,"line_end":5474,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":274355,"byte_end":274362,"line_start":5475,"line_end":5475,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":274403,"byte_end":274409,"line_start":5476,"line_end":5476,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1493},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":275732,"byte_end":275735,"line_start":5521,"line_end":5521,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key that would be used when inserting a value\n through the `VacantEntry`.","sig":null,"attributes":[{"value":"/ Gets a reference to the key that would be used when inserting a value","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":275342,"byte_end":275415,"line_start":5509,"line_end":5509,"column_start":5,"column_end":78}},{"value":"/ through the `VacantEntry`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":275420,"byte_end":275450,"line_start":5510,"line_end":5510,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":275455,"byte_end":275458,"line_start":5511,"line_end":5511,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":275463,"byte_end":275477,"line_start":5512,"line_end":5512,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":275482,"byte_end":275485,"line_start":5513,"line_end":5513,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":275490,"byte_end":275497,"line_start":5514,"line_end":5514,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":275502,"byte_end":275529,"line_start":5515,"line_end":5515,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":275534,"byte_end":275537,"line_start":5516,"line_end":5516,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":275542,"byte_end":275595,"line_start":5517,"line_end":5517,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(map.entry(\"poneyland\").key(), &\"poneyland\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":275600,"byte_end":275659,"line_start":5518,"line_end":5518,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":275664,"byte_end":275671,"line_start":5519,"line_end":5519,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":275712,"byte_end":275718,"line_start":5520,"line_end":5520,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1494},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":276219,"byte_end":276227,"line_start":5540,"line_end":5540,"column_start":12,"column_end":20},"name":"into_key","qualname":"<VacantEntry>::into_key","value":"pub fn into_key(Self) -> K","parent":null,"children":[],"decl_id":null,"docs":" Take ownership of the key.","sig":null,"attributes":[{"value":"/ Take ownership of the key.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":275780,"byte_end":275810,"line_start":5525,"line_end":5525,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":275815,"byte_end":275818,"line_start":5526,"line_end":5526,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":275823,"byte_end":275837,"line_start":5527,"line_end":5527,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":275842,"byte_end":275845,"line_start":5528,"line_end":5528,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":275850,"byte_end":275857,"line_start":5529,"line_end":5529,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{Entry, HashMap};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":275862,"byte_end":275908,"line_start":5530,"line_end":5530,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":275913,"byte_end":275916,"line_start":5531,"line_end":5531,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":275921,"byte_end":275974,"line_start":5532,"line_end":5532,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":275979,"byte_end":275982,"line_start":5533,"line_end":5533,"column_start":5,"column_end":8}},{"value":"/ match map.entry(\"poneyland\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":275987,"byte_end":276021,"line_start":5534,"line_end":5534,"column_start":5,"column_end":39}},{"value":"/     Entry::Occupied(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":276026,"byte_end":276065,"line_start":5535,"line_end":5535,"column_start":5,"column_end":44}},{"value":"/     Entry::Vacant(v) => assert_eq!(v.into_key(), \"poneyland\"),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":276070,"byte_end":276136,"line_start":5536,"line_end":5536,"column_start":5,"column_end":71}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":276141,"byte_end":276146,"line_start":5537,"line_end":5537,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":276151,"byte_end":276158,"line_start":5538,"line_end":5538,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":276199,"byte_end":276205,"line_start":5539,"line_end":5539,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1495},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":276778,"byte_end":276784,"line_start":5561,"line_end":5561,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"pub fn insert(Self, V) -> &'a mut V where K: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's key,\n and returns a mutable reference to it.","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the VacantEntry's key,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":276269,"byte_end":276328,"line_start":5544,"line_end":5544,"column_start":5,"column_end":64}},{"value":"/ and returns a mutable reference to it.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":276333,"byte_end":276375,"line_start":5545,"line_end":5545,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":276380,"byte_end":276383,"line_start":5546,"line_end":5546,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":276388,"byte_end":276402,"line_start":5547,"line_end":5547,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":276407,"byte_end":276410,"line_start":5548,"line_end":5548,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":276415,"byte_end":276422,"line_start":5549,"line_end":5549,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":276427,"byte_end":276454,"line_start":5550,"line_end":5550,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":276459,"byte_end":276494,"line_start":5551,"line_end":5551,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":276499,"byte_end":276502,"line_start":5552,"line_end":5552,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":276507,"byte_end":276560,"line_start":5553,"line_end":5553,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":276565,"byte_end":276568,"line_start":5554,"line_end":5554,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Vacant(o) = map.entry(\"poneyland\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":276573,"byte_end":276627,"line_start":5555,"line_end":5555,"column_start":5,"column_end":59}},{"value":"/     o.insert(37);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":276632,"byte_end":276653,"line_start":5556,"line_end":5556,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":276658,"byte_end":276663,"line_start":5557,"line_end":5557,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map[\"poneyland\"], 37);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":276668,"byte_end":276705,"line_start":5558,"line_end":5558,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":276710,"byte_end":276717,"line_start":5559,"line_end":5559,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":276758,"byte_end":276764,"line_start":5560,"line_end":5560,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1505},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":278109,"byte_end":278115,"line_start":5609,"line_end":5609,"column_start":12,"column_end":18},"name":"insert","qualname":"<EntryRef>::insert","value":"pub fn insert(Self, V) -> OccupiedEntryRef where K: Hash + From<&'b Q>,\nS: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns an OccupiedEntryRef.","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns an OccupiedEntryRef.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":277709,"byte_end":277774,"line_start":5596,"line_end":5596,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":277779,"byte_end":277782,"line_start":5597,"line_end":5597,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":277787,"byte_end":277801,"line_start":5598,"line_end":5598,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":277806,"byte_end":277809,"line_start":5599,"line_end":5599,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":277814,"byte_end":277821,"line_start":5600,"line_end":5600,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":277826,"byte_end":277853,"line_start":5601,"line_end":5601,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":277858,"byte_end":277861,"line_start":5602,"line_end":5602,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":277866,"byte_end":277921,"line_start":5603,"line_end":5603,"column_start":5,"column_end":60}},{"value":"/ let entry = map.entry_ref(\"horseyland\").insert(37);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":277926,"byte_end":277981,"line_start":5604,"line_end":5604,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":277986,"byte_end":277989,"line_start":5605,"line_end":5605,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(entry.key(), \"horseyland\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":277994,"byte_end":278036,"line_start":5606,"line_end":5606,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":278041,"byte_end":278048,"line_start":5607,"line_end":5607,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":278089,"byte_end":278095,"line_start":5608,"line_end":5608,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1506},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":279085,"byte_end":279094,"line_start":5642,"line_end":5642,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<EntryRef>::or_insert","value":"pub fn or_insert(Self, V) -> &'a mut V where K: Hash + From<&'b Q>,\nS: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and returns\n a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default if empty, and returns","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":278474,"byte_end":278556,"line_start":5623,"line_end":5623,"column_start":5,"column_end":87}},{"value":"/ a mutable reference to the value in the entry.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":278561,"byte_end":278611,"line_start":5624,"line_end":5624,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":278616,"byte_end":278619,"line_start":5625,"line_end":5625,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":278624,"byte_end":278638,"line_start":5626,"line_end":5626,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":278643,"byte_end":278646,"line_start":5627,"line_end":5627,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":278651,"byte_end":278658,"line_start":5628,"line_end":5628,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":278663,"byte_end":278690,"line_start":5629,"line_end":5629,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":278695,"byte_end":278698,"line_start":5630,"line_end":5630,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":278703,"byte_end":278758,"line_start":5631,"line_end":5631,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":278763,"byte_end":278766,"line_start":5632,"line_end":5632,"column_start":5,"column_end":8}},{"value":"/ // nonexistent key","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":278771,"byte_end":278793,"line_start":5633,"line_end":5633,"column_start":5,"column_end":27}},{"value":"/ map.entry_ref(\"poneyland\").or_insert(3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":278798,"byte_end":278842,"line_start":5634,"line_end":5634,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(map[\"poneyland\"], 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":278847,"byte_end":278883,"line_start":5635,"line_end":5635,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":278888,"byte_end":278891,"line_start":5636,"line_end":5636,"column_start":5,"column_end":8}},{"value":"/ // existing key","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":278896,"byte_end":278915,"line_start":5637,"line_end":5637,"column_start":5,"column_end":24}},{"value":"/ *map.entry_ref(\"poneyland\").or_insert(10) *= 2;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":278920,"byte_end":278971,"line_start":5638,"line_end":5638,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(map[\"poneyland\"], 6);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":278976,"byte_end":279012,"line_start":5639,"line_end":5639,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":279017,"byte_end":279024,"line_start":5640,"line_end":5640,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":279065,"byte_end":279071,"line_start":5641,"line_end":5641,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1507},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":280010,"byte_end":280024,"line_start":5672,"line_end":5672,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<EntryRef>::or_insert_with","value":"pub fn or_insert_with<F: FnOnce() -> V>(Self, F) -> &'a mut V where K: Hash +\nFrom<&'b Q>, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default function if empty,\n and returns a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the result of the default function if empty,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":279360,"byte_end":279453,"line_start":5653,"line_end":5653,"column_start":5,"column_end":98}},{"value":"/ and returns a mutable reference to the value in the entry.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":279458,"byte_end":279520,"line_start":5654,"line_end":5654,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":279525,"byte_end":279528,"line_start":5655,"line_end":5655,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":279533,"byte_end":279547,"line_start":5656,"line_end":5656,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":279552,"byte_end":279555,"line_start":5657,"line_end":5657,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":279560,"byte_end":279567,"line_start":5658,"line_end":5658,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":279572,"byte_end":279599,"line_start":5659,"line_end":5659,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":279604,"byte_end":279607,"line_start":5660,"line_end":5660,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":279612,"byte_end":279667,"line_start":5661,"line_end":5661,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":279672,"byte_end":279675,"line_start":5662,"line_end":5662,"column_start":5,"column_end":8}},{"value":"/ // nonexistent key","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":279680,"byte_end":279702,"line_start":5663,"line_end":5663,"column_start":5,"column_end":27}},{"value":"/ map.entry_ref(\"poneyland\").or_insert_with(|| 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":279707,"byte_end":279759,"line_start":5664,"line_end":5664,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(map[\"poneyland\"], 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":279764,"byte_end":279800,"line_start":5665,"line_end":5665,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":279805,"byte_end":279808,"line_start":5666,"line_end":5666,"column_start":5,"column_end":8}},{"value":"/ // existing key","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":279813,"byte_end":279832,"line_start":5667,"line_end":5667,"column_start":5,"column_end":24}},{"value":"/ *map.entry_ref(\"poneyland\").or_insert_with(|| 10) *= 2;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":279837,"byte_end":279896,"line_start":5668,"line_end":5668,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(map[\"poneyland\"], 6);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":279901,"byte_end":279937,"line_start":5669,"line_end":5669,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":279942,"byte_end":279949,"line_start":5670,"line_end":5670,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":279990,"byte_end":279996,"line_start":5671,"line_end":5671,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1509},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":281307,"byte_end":281325,"line_start":5706,"line_end":5706,"column_start":12,"column_end":30},"name":"or_insert_with_key","qualname":"<EntryRef>::or_insert_with_key","value":"pub fn or_insert_with_key<F: FnOnce(&Q) -> V>(Self, F) -> &'a mut V where\nK: Hash + Borrow<Q> + From<&'b Q>, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting, if empty, the result of the default function.\n This method allows for generating key-derived values for insertion by providing the default\n function a reference to the key that was moved during the `.entry_ref(key)` method call.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting, if empty, the result of the default function.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":280310,"byte_end":280405,"line_start":5683,"line_end":5683,"column_start":5,"column_end":100}},{"value":"/ This method allows for generating key-derived values for insertion by providing the default","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":280410,"byte_end":280505,"line_start":5684,"line_end":5684,"column_start":5,"column_end":100}},{"value":"/ function a reference to the key that was moved during the `.entry_ref(key)` method call.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":280510,"byte_end":280602,"line_start":5685,"line_end":5685,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":280607,"byte_end":280610,"line_start":5686,"line_end":5686,"column_start":5,"column_end":8}},{"value":"/ The reference to the moved key is provided so that cloning or copying the key is","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":280615,"byte_end":280699,"line_start":5687,"line_end":5687,"column_start":5,"column_end":89}},{"value":"/ unnecessary, unlike with `.or_insert_with(|| ... )`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":280704,"byte_end":280760,"line_start":5688,"line_end":5688,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":280765,"byte_end":280768,"line_start":5689,"line_end":5689,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":280773,"byte_end":280787,"line_start":5690,"line_end":5690,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":280792,"byte_end":280795,"line_start":5691,"line_end":5691,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":280800,"byte_end":280807,"line_start":5692,"line_end":5692,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":280812,"byte_end":280839,"line_start":5693,"line_end":5693,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":280844,"byte_end":280847,"line_start":5694,"line_end":5694,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, usize> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":280852,"byte_end":280909,"line_start":5695,"line_end":5695,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":280914,"byte_end":280917,"line_start":5696,"line_end":5696,"column_start":5,"column_end":8}},{"value":"/ // nonexistent key","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":280922,"byte_end":280944,"line_start":5697,"line_end":5697,"column_start":5,"column_end":27}},{"value":"/ map.entry_ref(\"poneyland\").or_insert_with_key(|key| key.chars().count());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":280949,"byte_end":281026,"line_start":5698,"line_end":5698,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(map[\"poneyland\"], 9);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":281031,"byte_end":281067,"line_start":5699,"line_end":5699,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":281072,"byte_end":281075,"line_start":5700,"line_end":5700,"column_start":5,"column_end":8}},{"value":"/ // existing key","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":281080,"byte_end":281099,"line_start":5701,"line_end":5701,"column_start":5,"column_end":24}},{"value":"/ *map.entry_ref(\"poneyland\").or_insert_with_key(|key| key.chars().count() * 10) *= 2;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":281104,"byte_end":281192,"line_start":5702,"line_end":5702,"column_start":5,"column_end":93}},{"value":"/ assert_eq!(map[\"poneyland\"], 18);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":281197,"byte_end":281234,"line_start":5703,"line_end":5703,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":281239,"byte_end":281246,"line_start":5704,"line_end":5704,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":281287,"byte_end":281293,"line_start":5705,"line_end":5705,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1511},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":282207,"byte_end":282210,"line_start":5735,"line_end":5735,"column_start":12,"column_end":15},"name":"key","qualname":"<EntryRef>::key","value":"pub fn key(&Self) -> &Q where K: Borrow<Q>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to this entry's key.","sig":null,"attributes":[{"value":"/ Returns a reference to this entry's key.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":281709,"byte_end":281753,"line_start":5720,"line_end":5720,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":281758,"byte_end":281761,"line_start":5721,"line_end":5721,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":281766,"byte_end":281780,"line_start":5722,"line_end":5722,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":281785,"byte_end":281788,"line_start":5723,"line_end":5723,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":281793,"byte_end":281800,"line_start":5724,"line_end":5724,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":281805,"byte_end":281832,"line_start":5725,"line_end":5725,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":281837,"byte_end":281840,"line_start":5726,"line_end":5726,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":281845,"byte_end":281900,"line_start":5727,"line_end":5727,"column_start":5,"column_end":60}},{"value":"/ map.entry_ref(\"poneyland\").or_insert(3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":281905,"byte_end":281949,"line_start":5728,"line_end":5728,"column_start":5,"column_end":49}},{"value":"/ // existing key","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":281954,"byte_end":281973,"line_start":5729,"line_end":5729,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(map.entry_ref(\"poneyland\").key(), \"poneyland\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":281978,"byte_end":282040,"line_start":5730,"line_end":5730,"column_start":5,"column_end":67}},{"value":"/ // nonexistent key","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":282045,"byte_end":282067,"line_start":5731,"line_end":5731,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(map.entry_ref(\"horseland\").key(), \"horseland\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":282072,"byte_end":282134,"line_start":5732,"line_end":5732,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":282139,"byte_end":282146,"line_start":5733,"line_end":5733,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":282187,"byte_end":282193,"line_start":5734,"line_end":5734,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1512},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":283051,"byte_end":283061,"line_start":5766,"line_end":5766,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<EntryRef>::and_modify","value":"pub fn and_modify<F>(Self, F) -> Self where F: FnOnce(&mut V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Provides in-place mutable access to an occupied entry before any\n potential inserts into the map.","sig":null,"attributes":[{"value":"/ Provides in-place mutable access to an occupied entry before any","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":282419,"byte_end":282487,"line_start":5745,"line_end":5745,"column_start":5,"column_end":73}},{"value":"/ potential inserts into the map.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":282492,"byte_end":282527,"line_start":5746,"line_end":5746,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":282532,"byte_end":282535,"line_start":5747,"line_end":5747,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":282540,"byte_end":282554,"line_start":5748,"line_end":5748,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":282559,"byte_end":282562,"line_start":5749,"line_end":5749,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":282567,"byte_end":282574,"line_start":5750,"line_end":5750,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":282579,"byte_end":282606,"line_start":5751,"line_end":5751,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":282611,"byte_end":282614,"line_start":5752,"line_end":5752,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":282619,"byte_end":282674,"line_start":5753,"line_end":5753,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":282679,"byte_end":282682,"line_start":5754,"line_end":5754,"column_start":5,"column_end":8}},{"value":"/ map.entry_ref(\"poneyland\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":282687,"byte_end":282717,"line_start":5755,"line_end":5755,"column_start":5,"column_end":35}},{"value":"/    .and_modify(|e| { *e += 1 })","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":282722,"byte_end":282757,"line_start":5756,"line_end":5756,"column_start":5,"column_end":40}},{"value":"/    .or_insert(42);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":282762,"byte_end":282784,"line_start":5757,"line_end":5757,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(map[\"poneyland\"], 42);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":282789,"byte_end":282826,"line_start":5758,"line_end":5758,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":282831,"byte_end":282834,"line_start":5759,"line_end":5759,"column_start":5,"column_end":8}},{"value":"/ map.entry_ref(\"poneyland\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":282839,"byte_end":282869,"line_start":5760,"line_end":5760,"column_start":5,"column_end":35}},{"value":"/    .and_modify(|e| { *e += 1 })","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":282874,"byte_end":282909,"line_start":5761,"line_end":5761,"column_start":5,"column_end":40}},{"value":"/    .or_insert(42);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":282914,"byte_end":282936,"line_start":5762,"line_end":5762,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(map[\"poneyland\"], 43);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":282941,"byte_end":282978,"line_start":5763,"line_end":5763,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":282983,"byte_end":282990,"line_start":5764,"line_end":5764,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":283031,"byte_end":283037,"line_start":5765,"line_end":5765,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1514},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":285036,"byte_end":285058,"line_start":5834,"line_end":5834,"column_start":12,"column_end":34},"name":"and_replace_entry_with","qualname":"<EntryRef>::and_replace_entry_with","value":"pub fn and_replace_entry_with<F>(Self, F) -> Self where F: FnOnce(&Q, V) ->\nOption<V>, K: Borrow<Q>","parent":null,"children":[],"decl_id":null,"docs":" Provides shared access to the key and owned access to the value of\n an occupied entry and allows to replace or remove it based on the\n value of the returned option.","sig":null,"attributes":[{"value":"/ Provides shared access to the key and owned access to the value of","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":283373,"byte_end":283443,"line_start":5779,"line_end":5779,"column_start":5,"column_end":75}},{"value":"/ an occupied entry and allows to replace or remove it based on the","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":283448,"byte_end":283517,"line_start":5780,"line_end":5780,"column_start":5,"column_end":74}},{"value":"/ value of the returned option.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":283522,"byte_end":283555,"line_start":5781,"line_end":5781,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":283560,"byte_end":283563,"line_start":5782,"line_end":5782,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":283568,"byte_end":283582,"line_start":5783,"line_end":5783,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":283587,"byte_end":283590,"line_start":5784,"line_end":5784,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":283595,"byte_end":283602,"line_start":5785,"line_end":5785,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":283607,"byte_end":283634,"line_start":5786,"line_end":5786,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::EntryRef;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":283639,"byte_end":283677,"line_start":5787,"line_end":5787,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":283682,"byte_end":283685,"line_start":5788,"line_end":5788,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":283690,"byte_end":283745,"line_start":5789,"line_end":5789,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":283750,"byte_end":283753,"line_start":5790,"line_end":5790,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":283758,"byte_end":283777,"line_start":5791,"line_end":5791,"column_start":5,"column_end":24}},{"value":"/     .entry_ref(\"poneyland\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":283782,"byte_end":283813,"line_start":5792,"line_end":5792,"column_start":5,"column_end":36}},{"value":"/     .and_replace_entry_with(|_k, _v| panic!());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":283818,"byte_end":283869,"line_start":5793,"line_end":5793,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":283874,"byte_end":283877,"line_start":5794,"line_end":5794,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":283882,"byte_end":283899,"line_start":5795,"line_end":5795,"column_start":5,"column_end":22}},{"value":"/     EntryRef::Vacant(e) => {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":283904,"byte_end":283936,"line_start":5796,"line_end":5796,"column_start":5,"column_end":37}},{"value":"/         assert_eq!(e.key(), \"poneyland\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":283941,"byte_end":283986,"line_start":5797,"line_end":5797,"column_start":5,"column_end":50}},{"value":"/     }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":283991,"byte_end":284000,"line_start":5798,"line_end":5798,"column_start":5,"column_end":14}},{"value":"/     EntryRef::Occupied(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":284005,"byte_end":284047,"line_start":5799,"line_end":5799,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":284052,"byte_end":284057,"line_start":5800,"line_end":5800,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":284062,"byte_end":284065,"line_start":5801,"line_end":5801,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"poneyland\".to_string(), 42);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":284070,"byte_end":284114,"line_start":5802,"line_end":5802,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":284119,"byte_end":284122,"line_start":5803,"line_end":5803,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":284127,"byte_end":284146,"line_start":5804,"line_end":5804,"column_start":5,"column_end":24}},{"value":"/     .entry_ref(\"poneyland\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":284151,"byte_end":284182,"line_start":5805,"line_end":5805,"column_start":5,"column_end":36}},{"value":"/     .and_replace_entry_with(|k, v| {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":284187,"byte_end":284227,"line_start":5806,"line_end":5806,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(k, \"poneyland\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":284232,"byte_end":284271,"line_start":5807,"line_end":5807,"column_start":5,"column_end":44}},{"value":"/         assert_eq!(v, 42);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":284276,"byte_end":284306,"line_start":5808,"line_end":5808,"column_start":5,"column_end":35}},{"value":"/         Some(v + 1)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":284311,"byte_end":284334,"line_start":5809,"line_end":5809,"column_start":5,"column_end":28}},{"value":"/     });","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":284339,"byte_end":284350,"line_start":5810,"line_end":5810,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":284355,"byte_end":284358,"line_start":5811,"line_end":5811,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":284363,"byte_end":284380,"line_start":5812,"line_end":5812,"column_start":5,"column_end":22}},{"value":"/     EntryRef::Occupied(e) => {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":284385,"byte_end":284419,"line_start":5813,"line_end":5813,"column_start":5,"column_end":39}},{"value":"/         assert_eq!(e.key(), \"poneyland\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":284424,"byte_end":284469,"line_start":5814,"line_end":5814,"column_start":5,"column_end":50}},{"value":"/         assert_eq!(e.get(), &43);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":284474,"byte_end":284511,"line_start":5815,"line_end":5815,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":284516,"byte_end":284525,"line_start":5816,"line_end":5816,"column_start":5,"column_end":14}},{"value":"/     EntryRef::Vacant(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":284530,"byte_end":284570,"line_start":5817,"line_end":5817,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":284575,"byte_end":284580,"line_start":5818,"line_end":5818,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":284585,"byte_end":284588,"line_start":5819,"line_end":5819,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 43);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":284593,"byte_end":284630,"line_start":5820,"line_end":5820,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":284635,"byte_end":284638,"line_start":5821,"line_end":5821,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":284643,"byte_end":284662,"line_start":5822,"line_end":5822,"column_start":5,"column_end":24}},{"value":"/     .entry_ref(\"poneyland\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":284667,"byte_end":284698,"line_start":5823,"line_end":5823,"column_start":5,"column_end":36}},{"value":"/     .and_replace_entry_with(|_k, _v| None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":284703,"byte_end":284750,"line_start":5824,"line_end":5824,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":284755,"byte_end":284758,"line_start":5825,"line_end":5825,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":284763,"byte_end":284780,"line_start":5826,"line_end":5826,"column_start":5,"column_end":22}},{"value":"/     EntryRef::Vacant(e) => assert_eq!(e.key(), \"poneyland\"),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":284785,"byte_end":284849,"line_start":5827,"line_end":5827,"column_start":5,"column_end":69}},{"value":"/     EntryRef::Occupied(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":284854,"byte_end":284896,"line_start":5828,"line_end":5828,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":284901,"byte_end":284906,"line_start":5829,"line_end":5829,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":284911,"byte_end":284914,"line_start":5830,"line_end":5830,"column_start":5,"column_end":8}},{"value":"/ assert!(!map.contains_key(\"poneyland\"));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":284919,"byte_end":284963,"line_start":5831,"line_end":5831,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":284968,"byte_end":284975,"line_start":5832,"line_end":5832,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":285016,"byte_end":285022,"line_start":5833,"line_end":5833,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1524},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":286080,"byte_end":286090,"line_start":5867,"line_end":5867,"column_start":12,"column_end":22},"name":"or_default","qualname":"<EntryRef>::or_default","value":"pub fn or_default(Self) -> &'a mut V where K: Hash + From<&'b Q>,\nS: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default value if empty,\n and returns a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default value if empty,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":285412,"byte_end":285488,"line_start":5847,"line_end":5847,"column_start":5,"column_end":81}},{"value":"/ and returns a mutable reference to the value in the entry.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":285493,"byte_end":285555,"line_start":5848,"line_end":5848,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":285560,"byte_end":285563,"line_start":5849,"line_end":5849,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":285568,"byte_end":285582,"line_start":5850,"line_end":5850,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":285587,"byte_end":285590,"line_start":5851,"line_end":5851,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":285595,"byte_end":285602,"line_start":5852,"line_end":5852,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":285607,"byte_end":285634,"line_start":5853,"line_end":5853,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":285639,"byte_end":285642,"line_start":5854,"line_end":5854,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, Option<u32>> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":285647,"byte_end":285710,"line_start":5855,"line_end":5855,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":285715,"byte_end":285718,"line_start":5856,"line_end":5856,"column_start":5,"column_end":8}},{"value":"/ // nonexistent key","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":285723,"byte_end":285745,"line_start":5857,"line_end":5857,"column_start":5,"column_end":27}},{"value":"/ map.entry_ref(\"poneyland\").or_default();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":285750,"byte_end":285794,"line_start":5858,"line_end":5858,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(map[\"poneyland\"], None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":285799,"byte_end":285838,"line_start":5859,"line_end":5859,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":285843,"byte_end":285846,"line_start":5860,"line_end":5860,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"horseland\".to_string(), Some(3));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":285851,"byte_end":285900,"line_start":5861,"line_end":5861,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":285905,"byte_end":285908,"line_start":5862,"line_end":5862,"column_start":5,"column_end":8}},{"value":"/ // existing key","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":285913,"byte_end":285932,"line_start":5863,"line_end":5863,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(map.entry_ref(\"horseland\").or_default(), &mut Some(3));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":285937,"byte_end":286007,"line_start":5864,"line_end":5864,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":286012,"byte_end":286019,"line_start":5865,"line_end":5865,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":286060,"byte_end":286066,"line_start":5866,"line_end":5866,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1533},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":286976,"byte_end":286979,"line_start":5896,"line_end":5896,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntryRef>::key","value":"pub fn key(&Self) -> &Q where K: Borrow<Q>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key in the entry.","sig":null,"attributes":[{"value":"/ Gets a reference to the key in the entry.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":286454,"byte_end":286499,"line_start":5880,"line_end":5880,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":286504,"byte_end":286507,"line_start":5881,"line_end":5881,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":286512,"byte_end":286526,"line_start":5882,"line_end":5882,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":286531,"byte_end":286534,"line_start":5883,"line_end":5883,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":286539,"byte_end":286546,"line_start":5884,"line_end":5884,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{EntryRef, HashMap};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":286551,"byte_end":286600,"line_start":5885,"line_end":5885,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":286605,"byte_end":286608,"line_start":5886,"line_end":5886,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":286613,"byte_end":286668,"line_start":5887,"line_end":5887,"column_start":5,"column_end":60}},{"value":"/ map.entry_ref(\"poneyland\").or_insert(12);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":286673,"byte_end":286718,"line_start":5888,"line_end":5888,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":286723,"byte_end":286726,"line_start":5889,"line_end":5889,"column_start":5,"column_end":8}},{"value":"/ match map.entry_ref(\"poneyland\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":286731,"byte_end":286769,"line_start":5890,"line_end":5890,"column_start":5,"column_end":43}},{"value":"/     EntryRef::Vacant(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":286774,"byte_end":286814,"line_start":5891,"line_end":5891,"column_start":5,"column_end":45}},{"value":"/     EntryRef::Occupied(entry) => assert_eq!(entry.key(), \"poneyland\"),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":286819,"byte_end":286893,"line_start":5892,"line_end":5892,"column_start":5,"column_end":79}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":286898,"byte_end":286903,"line_start":5893,"line_end":5893,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":286908,"byte_end":286915,"line_start":5894,"line_end":5894,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":286956,"byte_end":286962,"line_start":5895,"line_end":5895,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1534},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":288078,"byte_end":288090,"line_start":5929,"line_end":5929,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<OccupiedEntryRef>::remove_entry","value":"pub fn remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Take the ownership of the key and value from the map.\n Keeps the allocated memory for reuse.","sig":null,"attributes":[{"value":"/ Take the ownership of the key and value from the map.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":287092,"byte_end":287149,"line_start":5903,"line_end":5903,"column_start":5,"column_end":62}},{"value":"/ Keeps the allocated memory for reuse.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":287154,"byte_end":287195,"line_start":5904,"line_end":5904,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":287200,"byte_end":287203,"line_start":5905,"line_end":5905,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":287208,"byte_end":287222,"line_start":5906,"line_end":5906,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":287227,"byte_end":287230,"line_start":5907,"line_end":5907,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":287235,"byte_end":287242,"line_start":5908,"line_end":5908,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":287247,"byte_end":287274,"line_start":5909,"line_end":5909,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::EntryRef;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":287279,"byte_end":287317,"line_start":5910,"line_end":5910,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":287322,"byte_end":287325,"line_start":5911,"line_end":5911,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":287330,"byte_end":287385,"line_start":5912,"line_end":5912,"column_start":5,"column_end":60}},{"value":"/ // The map is empty","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":287390,"byte_end":287413,"line_start":5913,"line_end":5913,"column_start":5,"column_end":28}},{"value":"/ assert!(map.is_empty() && map.capacity() == 0);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":287418,"byte_end":287469,"line_start":5914,"line_end":5914,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":287474,"byte_end":287477,"line_start":5915,"line_end":5915,"column_start":5,"column_end":8}},{"value":"/ map.entry_ref(\"poneyland\").or_insert(12);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":287482,"byte_end":287527,"line_start":5916,"line_end":5916,"column_start":5,"column_end":50}},{"value":"/ let capacity_before_remove = map.capacity();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":287532,"byte_end":287580,"line_start":5917,"line_end":5917,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":287585,"byte_end":287588,"line_start":5918,"line_end":5918,"column_start":5,"column_end":8}},{"value":"/ if let EntryRef::Occupied(o) = map.entry_ref(\"poneyland\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":287593,"byte_end":287656,"line_start":5919,"line_end":5919,"column_start":5,"column_end":68}},{"value":"/     // We delete the entry from the map.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":287661,"byte_end":287705,"line_start":5920,"line_end":5920,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(o.remove_entry(), (\"poneyland\".to_owned(), 12));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":287710,"byte_end":287777,"line_start":5921,"line_end":5921,"column_start":5,"column_end":72}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":287782,"byte_end":287787,"line_start":5922,"line_end":5922,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":287792,"byte_end":287795,"line_start":5923,"line_end":5923,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.contains_key(\"poneyland\"), false);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":287800,"byte_end":287853,"line_start":5924,"line_end":5924,"column_start":5,"column_end":58}},{"value":"/ // Now map hold none elements but capacity is equal to the old one","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":287858,"byte_end":287928,"line_start":5925,"line_end":5925,"column_start":5,"column_end":75}},{"value":"/ assert!(map.len() == 0 && map.capacity() == capacity_before_remove);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":287933,"byte_end":288005,"line_start":5926,"line_end":5926,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":288010,"byte_end":288017,"line_start":5927,"line_end":5927,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":288058,"byte_end":288064,"line_start":5928,"line_end":5928,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1535},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":288711,"byte_end":288714,"line_start":5950,"line_end":5950,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntryRef>::get","value":"pub fn get(&Self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Gets a reference to the value in the entry.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":288174,"byte_end":288221,"line_start":5933,"line_end":5933,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":288226,"byte_end":288229,"line_start":5934,"line_end":5934,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":288234,"byte_end":288248,"line_start":5935,"line_end":5935,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":288253,"byte_end":288256,"line_start":5936,"line_end":5936,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":288261,"byte_end":288268,"line_start":5937,"line_end":5937,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":288273,"byte_end":288300,"line_start":5938,"line_end":5938,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::EntryRef;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":288305,"byte_end":288343,"line_start":5939,"line_end":5939,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":288348,"byte_end":288351,"line_start":5940,"line_end":5940,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":288356,"byte_end":288411,"line_start":5941,"line_end":5941,"column_start":5,"column_end":60}},{"value":"/ map.entry_ref(\"poneyland\").or_insert(12);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":288416,"byte_end":288461,"line_start":5942,"line_end":5942,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":288466,"byte_end":288469,"line_start":5943,"line_end":5943,"column_start":5,"column_end":8}},{"value":"/ match map.entry_ref(\"poneyland\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":288474,"byte_end":288512,"line_start":5944,"line_end":5944,"column_start":5,"column_end":43}},{"value":"/     EntryRef::Vacant(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":288517,"byte_end":288557,"line_start":5945,"line_end":5945,"column_start":5,"column_end":45}},{"value":"/     EntryRef::Occupied(entry) => assert_eq!(entry.get(), &12),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":288562,"byte_end":288628,"line_start":5946,"line_end":5946,"column_start":5,"column_end":71}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":288633,"byte_end":288638,"line_start":5947,"line_end":5947,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":288643,"byte_end":288650,"line_start":5948,"line_end":5948,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":288691,"byte_end":288697,"line_start":5949,"line_end":5949,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1536},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":289696,"byte_end":289703,"line_start":5982,"line_end":5982,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntryRef>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the value in the entry.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":288782,"byte_end":288837,"line_start":5954,"line_end":5954,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":288842,"byte_end":288845,"line_start":5955,"line_end":5955,"column_start":5,"column_end":8}},{"value":"/ If you need a reference to the `OccupiedEntryRef` which may outlive the","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":288850,"byte_end":288925,"line_start":5956,"line_end":5956,"column_start":5,"column_end":80}},{"value":"/ destruction of the `EntryRef` value, see [`into_mut`].","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":288930,"byte_end":288988,"line_start":5957,"line_end":5957,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":288993,"byte_end":288996,"line_start":5958,"line_end":5958,"column_start":5,"column_end":8}},{"value":"/ [`into_mut`]: #method.into_mut","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":289001,"byte_end":289035,"line_start":5959,"line_end":5959,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":289040,"byte_end":289043,"line_start":5960,"line_end":5960,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":289048,"byte_end":289062,"line_start":5961,"line_end":5961,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":289067,"byte_end":289070,"line_start":5962,"line_end":5962,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":289075,"byte_end":289082,"line_start":5963,"line_end":5963,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":289087,"byte_end":289114,"line_start":5964,"line_end":5964,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::EntryRef;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":289119,"byte_end":289157,"line_start":5965,"line_end":5965,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":289162,"byte_end":289165,"line_start":5966,"line_end":5966,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":289170,"byte_end":289225,"line_start":5967,"line_end":5967,"column_start":5,"column_end":60}},{"value":"/ map.entry_ref(\"poneyland\").or_insert(12);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":289230,"byte_end":289275,"line_start":5968,"line_end":5968,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":289280,"byte_end":289283,"line_start":5969,"line_end":5969,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 12);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":289288,"byte_end":289325,"line_start":5970,"line_end":5970,"column_start":5,"column_end":42}},{"value":"/ if let EntryRef::Occupied(mut o) = map.entry_ref(\"poneyland\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":289330,"byte_end":289397,"line_start":5971,"line_end":5971,"column_start":5,"column_end":72}},{"value":"/     *o.get_mut() += 10;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":289402,"byte_end":289429,"line_start":5972,"line_end":5972,"column_start":5,"column_end":32}},{"value":"/     assert_eq!(*o.get(), 22);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":289434,"byte_end":289467,"line_start":5973,"line_end":5973,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":289472,"byte_end":289475,"line_start":5974,"line_end":5974,"column_start":5,"column_end":8}},{"value":"/     // We can use the same Entry multiple times.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":289480,"byte_end":289532,"line_start":5975,"line_end":5975,"column_start":5,"column_end":57}},{"value":"/     *o.get_mut() += 2;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":289537,"byte_end":289563,"line_start":5976,"line_end":5976,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":289568,"byte_end":289573,"line_start":5977,"line_end":5977,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":289578,"byte_end":289581,"line_start":5978,"line_end":5978,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 24);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":289586,"byte_end":289623,"line_start":5979,"line_end":5979,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":289628,"byte_end":289635,"line_start":5980,"line_end":5980,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":289676,"byte_end":289682,"line_start":5981,"line_end":5981,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1537},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":290619,"byte_end":290627,"line_start":6011,"line_end":6011,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntryRef>::into_mut","value":"pub fn into_mut(Self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Converts the OccupiedEntryRef into a mutable reference to the value in the entry\n with a lifetime bound to the map itself.","sig":null,"attributes":[{"value":"/ Converts the OccupiedEntryRef into a mutable reference to the value in the entry","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":289783,"byte_end":289867,"line_start":5986,"line_end":5986,"column_start":5,"column_end":89}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":289872,"byte_end":289916,"line_start":5987,"line_end":5987,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":289921,"byte_end":289924,"line_start":5988,"line_end":5988,"column_start":5,"column_end":8}},{"value":"/ If you need multiple references to the `OccupiedEntryRef`, see [`get_mut`].","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":289929,"byte_end":290008,"line_start":5989,"line_end":5989,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":290013,"byte_end":290016,"line_start":5990,"line_end":5990,"column_start":5,"column_end":8}},{"value":"/ [`get_mut`]: #method.get_mut","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":290021,"byte_end":290053,"line_start":5991,"line_end":5991,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":290058,"byte_end":290061,"line_start":5992,"line_end":5992,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":290066,"byte_end":290080,"line_start":5993,"line_end":5993,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":290085,"byte_end":290088,"line_start":5994,"line_end":5994,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":290093,"byte_end":290100,"line_start":5995,"line_end":5995,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{EntryRef, HashMap};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":290105,"byte_end":290154,"line_start":5996,"line_end":5996,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":290159,"byte_end":290162,"line_start":5997,"line_end":5997,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":290167,"byte_end":290222,"line_start":5998,"line_end":5998,"column_start":5,"column_end":60}},{"value":"/ map.entry_ref(\"poneyland\").or_insert(12);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":290227,"byte_end":290272,"line_start":5999,"line_end":5999,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":290277,"byte_end":290280,"line_start":6000,"line_end":6000,"column_start":5,"column_end":8}},{"value":"/ let value: &mut u32;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":290285,"byte_end":290309,"line_start":6001,"line_end":6001,"column_start":5,"column_end":29}},{"value":"/ match map.entry_ref(\"poneyland\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":290314,"byte_end":290352,"line_start":6002,"line_end":6002,"column_start":5,"column_end":43}},{"value":"/     EntryRef::Occupied(entry) => value = entry.into_mut(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":290357,"byte_end":290419,"line_start":6003,"line_end":6003,"column_start":5,"column_end":67}},{"value":"/     EntryRef::Vacant(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":290424,"byte_end":290464,"line_start":6004,"line_end":6004,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":290469,"byte_end":290474,"line_start":6005,"line_end":6005,"column_start":5,"column_end":10}},{"value":"/ *value += 10;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":290479,"byte_end":290496,"line_start":6006,"line_end":6006,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":290501,"byte_end":290504,"line_start":6007,"line_end":6007,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 22);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":290509,"byte_end":290546,"line_start":6008,"line_end":6008,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":290551,"byte_end":290558,"line_start":6009,"line_end":6009,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":290599,"byte_end":290605,"line_start":6010,"line_end":6010,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1538},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":291267,"byte_end":291273,"line_start":6033,"line_end":6033,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntryRef>::insert","value":"pub fn insert(&mut Self, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns the entry's old value.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":290705,"byte_end":290772,"line_start":6015,"line_end":6015,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":290777,"byte_end":290780,"line_start":6016,"line_end":6016,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":290785,"byte_end":290799,"line_start":6017,"line_end":6017,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":290804,"byte_end":290807,"line_start":6018,"line_end":6018,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":290812,"byte_end":290819,"line_start":6019,"line_end":6019,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":290824,"byte_end":290851,"line_start":6020,"line_end":6020,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::EntryRef;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":290856,"byte_end":290894,"line_start":6021,"line_end":6021,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":290899,"byte_end":290902,"line_start":6022,"line_end":6022,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":290907,"byte_end":290962,"line_start":6023,"line_end":6023,"column_start":5,"column_end":60}},{"value":"/ map.entry_ref(\"poneyland\").or_insert(12);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":290967,"byte_end":291012,"line_start":6024,"line_end":6024,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":291017,"byte_end":291020,"line_start":6025,"line_end":6025,"column_start":5,"column_end":8}},{"value":"/ if let EntryRef::Occupied(mut o) = map.entry_ref(\"poneyland\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":291025,"byte_end":291092,"line_start":6026,"line_end":6026,"column_start":5,"column_end":72}},{"value":"/     assert_eq!(o.insert(15), 12);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":291097,"byte_end":291134,"line_start":6027,"line_end":6027,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":291139,"byte_end":291144,"line_start":6028,"line_end":6028,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":291149,"byte_end":291152,"line_start":6029,"line_end":6029,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 15);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":291157,"byte_end":291194,"line_start":6030,"line_end":6030,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":291199,"byte_end":291206,"line_start":6031,"line_end":6031,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":291247,"byte_end":291253,"line_start":6032,"line_end":6032,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1539},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":292258,"byte_end":292264,"line_start":6062,"line_end":6062,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntryRef>::remove","value":"pub fn remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of the entry, and returns it.\n Keeps the allocated memory for reuse.","sig":null,"attributes":[{"value":"/ Takes the value out of the entry, and returns it.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":291357,"byte_end":291410,"line_start":6037,"line_end":6037,"column_start":5,"column_end":58}},{"value":"/ Keeps the allocated memory for reuse.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":291415,"byte_end":291456,"line_start":6038,"line_end":6038,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":291461,"byte_end":291464,"line_start":6039,"line_end":6039,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":291469,"byte_end":291483,"line_start":6040,"line_end":6040,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":291488,"byte_end":291491,"line_start":6041,"line_end":6041,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":291496,"byte_end":291503,"line_start":6042,"line_end":6042,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":291508,"byte_end":291535,"line_start":6043,"line_end":6043,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::EntryRef;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":291540,"byte_end":291578,"line_start":6044,"line_end":6044,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":291583,"byte_end":291586,"line_start":6045,"line_end":6045,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":291591,"byte_end":291646,"line_start":6046,"line_end":6046,"column_start":5,"column_end":60}},{"value":"/ // The map is empty","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":291651,"byte_end":291674,"line_start":6047,"line_end":6047,"column_start":5,"column_end":28}},{"value":"/ assert!(map.is_empty() && map.capacity() == 0);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":291679,"byte_end":291730,"line_start":6048,"line_end":6048,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":291735,"byte_end":291738,"line_start":6049,"line_end":6049,"column_start":5,"column_end":8}},{"value":"/ map.entry_ref(\"poneyland\").or_insert(12);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":291743,"byte_end":291788,"line_start":6050,"line_end":6050,"column_start":5,"column_end":50}},{"value":"/ let capacity_before_remove = map.capacity();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":291793,"byte_end":291841,"line_start":6051,"line_end":6051,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":291846,"byte_end":291849,"line_start":6052,"line_end":6052,"column_start":5,"column_end":8}},{"value":"/ if let EntryRef::Occupied(o) = map.entry_ref(\"poneyland\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":291854,"byte_end":291917,"line_start":6053,"line_end":6053,"column_start":5,"column_end":68}},{"value":"/     assert_eq!(o.remove(), 12);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":291922,"byte_end":291957,"line_start":6054,"line_end":6054,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":291962,"byte_end":291967,"line_start":6055,"line_end":6055,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":291972,"byte_end":291975,"line_start":6056,"line_end":6056,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.contains_key(\"poneyland\"), false);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":291980,"byte_end":292033,"line_start":6057,"line_end":6057,"column_start":5,"column_end":58}},{"value":"/ // Now map hold none elements but capacity is equal to the old one","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":292038,"byte_end":292108,"line_start":6058,"line_end":6058,"column_start":5,"column_end":75}},{"value":"/ assert!(map.len() == 0 && map.capacity() == capacity_before_remove);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":292113,"byte_end":292185,"line_start":6059,"line_end":6059,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":292190,"byte_end":292197,"line_start":6060,"line_end":6060,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":292238,"byte_end":292244,"line_start":6061,"line_end":6061,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1540},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":293402,"byte_end":293415,"line_start":6097,"line_end":6097,"column_start":12,"column_end":25},"name":"replace_entry","qualname":"<OccupiedEntryRef>::replace_entry","value":"pub fn replace_entry(Self, V) -> (K, V) where K: From<&'b Q>","parent":null,"children":[],"decl_id":null,"docs":" Replaces the entry, returning the old key and value. The new key in the hash map will be\n the key used to create this entry.","sig":null,"attributes":[{"value":"/ Replaces the entry, returning the old key and value. The new key in the hash map will be","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":292319,"byte_end":292411,"line_start":6066,"line_end":6066,"column_start":5,"column_end":97}},{"value":"/ the key used to create this entry.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":292416,"byte_end":292454,"line_start":6067,"line_end":6067,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":292459,"byte_end":292462,"line_start":6068,"line_end":6068,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":292467,"byte_end":292479,"line_start":6069,"line_end":6069,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":292484,"byte_end":292487,"line_start":6070,"line_end":6070,"column_start":5,"column_end":8}},{"value":"/ Will panic if this OccupiedEntry was created through [`EntryRef::insert`].","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":292492,"byte_end":292570,"line_start":6071,"line_end":6071,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":292575,"byte_end":292578,"line_start":6072,"line_end":6072,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":292583,"byte_end":292597,"line_start":6073,"line_end":6073,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":292602,"byte_end":292605,"line_start":6074,"line_end":6074,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":292610,"byte_end":292617,"line_start":6075,"line_end":6075,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{EntryRef, HashMap};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":292622,"byte_end":292671,"line_start":6076,"line_end":6076,"column_start":5,"column_end":54}},{"value":"/ use std::rc::Rc;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":292676,"byte_end":292696,"line_start":6077,"line_end":6077,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":292701,"byte_end":292704,"line_start":6078,"line_end":6078,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<Rc<str>, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":292709,"byte_end":292765,"line_start":6079,"line_end":6079,"column_start":5,"column_end":61}},{"value":"/ let key: Rc<str> = Rc::from(\"Stringthing\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":292770,"byte_end":292817,"line_start":6080,"line_end":6080,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":292822,"byte_end":292825,"line_start":6081,"line_end":6081,"column_start":5,"column_end":8}},{"value":"/ map.insert(key.clone(), 15);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":292830,"byte_end":292862,"line_start":6082,"line_end":6082,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(Rc::strong_count(&key), 2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":292867,"byte_end":292909,"line_start":6083,"line_end":6083,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":292914,"byte_end":292917,"line_start":6084,"line_end":6084,"column_start":5,"column_end":8}},{"value":"/ match map.entry_ref(\"Stringthing\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":292922,"byte_end":292962,"line_start":6085,"line_end":6085,"column_start":5,"column_end":45}},{"value":"/     EntryRef::Occupied(entry) => {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":292967,"byte_end":293005,"line_start":6086,"line_end":6086,"column_start":5,"column_end":43}},{"value":"/         let (old_key, old_value): (Rc<str>, u32) = entry.replace_entry(16);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":293010,"byte_end":293089,"line_start":6087,"line_end":6087,"column_start":5,"column_end":84}},{"value":"/         assert!(Rc::ptr_eq(&key, &old_key) && old_value == 15);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":293094,"byte_end":293161,"line_start":6088,"line_end":6088,"column_start":5,"column_end":72}},{"value":"/     }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":293166,"byte_end":293175,"line_start":6089,"line_end":6089,"column_start":5,"column_end":14}},{"value":"/     EntryRef::Vacant(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":293180,"byte_end":293220,"line_start":6090,"line_end":6090,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":293225,"byte_end":293230,"line_start":6091,"line_end":6091,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":293235,"byte_end":293238,"line_start":6092,"line_end":6092,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Rc::strong_count(&key), 1);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":293243,"byte_end":293285,"line_start":6093,"line_end":6093,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(map[\"Stringthing\"], 16);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":293290,"byte_end":293329,"line_start":6094,"line_end":6094,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":293334,"byte_end":293341,"line_start":6095,"line_end":6095,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":293382,"byte_end":293388,"line_start":6096,"line_end":6096,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1541},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":295195,"byte_end":295206,"line_start":6148,"line_end":6148,"column_start":12,"column_end":23},"name":"replace_key","qualname":"<OccupiedEntryRef>::replace_key","value":"pub fn replace_key(Self) -> K where K: From<&'b Q>","parent":null,"children":[],"decl_id":null,"docs":" Replaces the key in the hash map with the key used to create this entry.","sig":null,"attributes":[{"value":"/ Replaces the key in the hash map with the key used to create this entry.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":293716,"byte_end":293792,"line_start":6109,"line_end":6109,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":293797,"byte_end":293800,"line_start":6110,"line_end":6110,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":293805,"byte_end":293817,"line_start":6111,"line_end":6111,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":293822,"byte_end":293825,"line_start":6112,"line_end":6112,"column_start":5,"column_end":8}},{"value":"/ Will panic if this OccupiedEntry was created through [`Entry::insert`].","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":293830,"byte_end":293905,"line_start":6113,"line_end":6113,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":293910,"byte_end":293913,"line_start":6114,"line_end":6114,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":293918,"byte_end":293932,"line_start":6115,"line_end":6115,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":293937,"byte_end":293940,"line_start":6116,"line_end":6116,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":293945,"byte_end":293952,"line_start":6117,"line_end":6117,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{EntryRef, HashMap};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":293957,"byte_end":294006,"line_start":6118,"line_end":6118,"column_start":5,"column_end":54}},{"value":"/ use std::rc::Rc;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":294011,"byte_end":294031,"line_start":6119,"line_end":6119,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":294036,"byte_end":294039,"line_start":6120,"line_end":6120,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<Rc<str>, usize> = HashMap::with_capacity(6);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":294044,"byte_end":294113,"line_start":6121,"line_end":6121,"column_start":5,"column_end":74}},{"value":"/ let mut keys: Vec<Rc<str>> = Vec::with_capacity(6);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":294118,"byte_end":294173,"line_start":6122,"line_end":6122,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":294178,"byte_end":294181,"line_start":6123,"line_end":6123,"column_start":5,"column_end":8}},{"value":"/ for (value, key) in [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"].into_iter().enumerate() {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":294186,"byte_end":294266,"line_start":6124,"line_end":6124,"column_start":5,"column_end":85}},{"value":"/     let rc_key: Rc<str> = Rc::from(key);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":294271,"byte_end":294315,"line_start":6125,"line_end":6125,"column_start":5,"column_end":49}},{"value":"/     keys.push(rc_key.clone());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":294320,"byte_end":294354,"line_start":6126,"line_end":6126,"column_start":5,"column_end":39}},{"value":"/     map.insert(rc_key.clone(), value);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":294359,"byte_end":294401,"line_start":6127,"line_end":6127,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":294406,"byte_end":294411,"line_start":6128,"line_end":6128,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":294416,"byte_end":294419,"line_start":6129,"line_end":6129,"column_start":5,"column_end":8}},{"value":"/ assert!(keys.iter().all(|key| Rc::strong_count(key) == 2));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":294424,"byte_end":294487,"line_start":6130,"line_end":6130,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":294492,"byte_end":294495,"line_start":6131,"line_end":6131,"column_start":5,"column_end":8}},{"value":"/ // It doesn't matter that we kind of use a vector with the same keys,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":294500,"byte_end":294573,"line_start":6132,"line_end":6132,"column_start":5,"column_end":78}},{"value":"/ // because all keys will be newly created from the references","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":294578,"byte_end":294643,"line_start":6133,"line_end":6133,"column_start":5,"column_end":70}},{"value":"/ reclaim_memory(&mut map, &keys);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":294648,"byte_end":294684,"line_start":6134,"line_end":6134,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":294689,"byte_end":294692,"line_start":6135,"line_end":6135,"column_start":5,"column_end":8}},{"value":"/ assert!(keys.iter().all(|key| Rc::strong_count(key) == 1));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":294697,"byte_end":294760,"line_start":6136,"line_end":6136,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":294765,"byte_end":294768,"line_start":6137,"line_end":6137,"column_start":5,"column_end":8}},{"value":"/ fn reclaim_memory(map: &mut HashMap<Rc<str>, usize>, keys: &[Rc<str>]) {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":294773,"byte_end":294849,"line_start":6138,"line_end":6138,"column_start":5,"column_end":81}},{"value":"/     for key in keys {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":294854,"byte_end":294879,"line_start":6139,"line_end":6139,"column_start":5,"column_end":30}},{"value":"/         if let EntryRef::Occupied(entry) = map.entry_ref(key.as_ref()) {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":294884,"byte_end":294960,"line_start":6140,"line_end":6140,"column_start":5,"column_end":81}},{"value":"/         /// Replaces the entry's key with our version of it in `keys`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":294965,"byte_end":295039,"line_start":6141,"line_end":6141,"column_start":5,"column_end":79}},{"value":"/             entry.replace_key();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":295044,"byte_end":295080,"line_start":6142,"line_end":6142,"column_start":5,"column_end":41}},{"value":"/         }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":295085,"byte_end":295098,"line_start":6143,"line_end":6143,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":295103,"byte_end":295112,"line_start":6144,"line_end":6144,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":295117,"byte_end":295122,"line_start":6145,"line_end":6145,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":295127,"byte_end":295134,"line_start":6146,"line_end":6146,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":295175,"byte_end":295181,"line_start":6147,"line_end":6147,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1542},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":296947,"byte_end":296965,"line_start":6205,"line_end":6205,"column_start":12,"column_end":30},"name":"replace_entry_with","qualname":"<OccupiedEntryRef>::replace_entry_with","value":"pub fn replace_entry_with<F>(Self, F) -> EntryRef where F: FnOnce(&Q, V) ->\nOption<V>, K: Borrow<Q>","parent":null,"children":[],"decl_id":null,"docs":" Provides shared access to the key and owned access to the value of\n the entry and allows to replace or remove it based on the\n value of the returned option.","sig":null,"attributes":[{"value":"/ Provides shared access to the key and owned access to the value of","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":295387,"byte_end":295457,"line_start":6156,"line_end":6156,"column_start":5,"column_end":75}},{"value":"/ the entry and allows to replace or remove it based on the","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":295462,"byte_end":295523,"line_start":6157,"line_end":6157,"column_start":5,"column_end":66}},{"value":"/ value of the returned option.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":295528,"byte_end":295561,"line_start":6158,"line_end":6158,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":295566,"byte_end":295569,"line_start":6159,"line_end":6159,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":295574,"byte_end":295588,"line_start":6160,"line_end":6160,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":295593,"byte_end":295596,"line_start":6161,"line_end":6161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":295601,"byte_end":295608,"line_start":6162,"line_end":6162,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":295613,"byte_end":295640,"line_start":6163,"line_end":6163,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::EntryRef;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":295645,"byte_end":295683,"line_start":6164,"line_end":6164,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":295688,"byte_end":295691,"line_start":6165,"line_end":6165,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":295696,"byte_end":295751,"line_start":6166,"line_end":6166,"column_start":5,"column_end":60}},{"value":"/ map.insert(\"poneyland\".to_string(), 42);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":295756,"byte_end":295800,"line_start":6167,"line_end":6167,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":295805,"byte_end":295808,"line_start":6168,"line_end":6168,"column_start":5,"column_end":8}},{"value":"/ let entry = match map.entry_ref(\"poneyland\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":295813,"byte_end":295863,"line_start":6169,"line_end":6169,"column_start":5,"column_end":55}},{"value":"/     EntryRef::Occupied(e) => {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":295868,"byte_end":295902,"line_start":6170,"line_end":6170,"column_start":5,"column_end":39}},{"value":"/         e.replace_entry_with(|k, v| {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":295907,"byte_end":295948,"line_start":6171,"line_end":6171,"column_start":5,"column_end":46}},{"value":"/             assert_eq!(k, \"poneyland\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":295953,"byte_end":295996,"line_start":6172,"line_end":6172,"column_start":5,"column_end":48}},{"value":"/             assert_eq!(v, 42);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":296001,"byte_end":296035,"line_start":6173,"line_end":6173,"column_start":5,"column_end":39}},{"value":"/             Some(v + 1)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":296040,"byte_end":296067,"line_start":6174,"line_end":6174,"column_start":5,"column_end":32}},{"value":"/         })","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":296072,"byte_end":296086,"line_start":6175,"line_end":6175,"column_start":5,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":296091,"byte_end":296100,"line_start":6176,"line_end":6176,"column_start":5,"column_end":14}},{"value":"/     EntryRef::Vacant(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":296105,"byte_end":296145,"line_start":6177,"line_end":6177,"column_start":5,"column_end":45}},{"value":"/ };","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":296150,"byte_end":296156,"line_start":6178,"line_end":6178,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":296161,"byte_end":296164,"line_start":6179,"line_end":6179,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":296169,"byte_end":296186,"line_start":6180,"line_end":6180,"column_start":5,"column_end":22}},{"value":"/     EntryRef::Occupied(e) => {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":296191,"byte_end":296225,"line_start":6181,"line_end":6181,"column_start":5,"column_end":39}},{"value":"/         assert_eq!(e.key(), \"poneyland\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":296230,"byte_end":296275,"line_start":6182,"line_end":6182,"column_start":5,"column_end":50}},{"value":"/         assert_eq!(e.get(), &43);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":296280,"byte_end":296317,"line_start":6183,"line_end":6183,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":296322,"byte_end":296331,"line_start":6184,"line_end":6184,"column_start":5,"column_end":14}},{"value":"/     EntryRef::Vacant(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":296336,"byte_end":296376,"line_start":6185,"line_end":6185,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":296381,"byte_end":296386,"line_start":6186,"line_end":6186,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":296391,"byte_end":296394,"line_start":6187,"line_end":6187,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 43);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":296399,"byte_end":296436,"line_start":6188,"line_end":6188,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":296441,"byte_end":296444,"line_start":6189,"line_end":6189,"column_start":5,"column_end":8}},{"value":"/ let entry = match map.entry_ref(\"poneyland\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":296449,"byte_end":296499,"line_start":6190,"line_end":6190,"column_start":5,"column_end":55}},{"value":"/     EntryRef::Occupied(e) => e.replace_entry_with(|_k, _v| None),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":296504,"byte_end":296573,"line_start":6191,"line_end":6191,"column_start":5,"column_end":74}},{"value":"/     EntryRef::Vacant(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":296578,"byte_end":296618,"line_start":6192,"line_end":6192,"column_start":5,"column_end":45}},{"value":"/ };","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":296623,"byte_end":296629,"line_start":6193,"line_end":6193,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":296634,"byte_end":296637,"line_start":6194,"line_end":6194,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":296642,"byte_end":296659,"line_start":6195,"line_end":6195,"column_start":5,"column_end":22}},{"value":"/     EntryRef::Vacant(e) => {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":296664,"byte_end":296696,"line_start":6196,"line_end":6196,"column_start":5,"column_end":37}},{"value":"/         assert_eq!(e.key(), \"poneyland\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":296701,"byte_end":296746,"line_start":6197,"line_end":6197,"column_start":5,"column_end":50}},{"value":"/     }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":296751,"byte_end":296760,"line_start":6198,"line_end":6198,"column_start":5,"column_end":14}},{"value":"/     EntryRef::Occupied(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":296765,"byte_end":296807,"line_start":6199,"line_end":6199,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":296812,"byte_end":296817,"line_start":6200,"line_end":6200,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":296822,"byte_end":296825,"line_start":6201,"line_end":6201,"column_start":5,"column_end":8}},{"value":"/ assert!(!map.contains_key(\"poneyland\"));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":296830,"byte_end":296874,"line_start":6202,"line_end":6202,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":296879,"byte_end":296886,"line_start":6203,"line_end":6203,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":296927,"byte_end":296933,"line_start":6204,"line_end":6204,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1553},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":298384,"byte_end":298387,"line_start":6251,"line_end":6251,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntryRef>::key","value":"pub fn key(&Self) -> &Q where K: Borrow<Q>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key that would be used when inserting a value\n through the `VacantEntryRef`.","sig":null,"attributes":[{"value":"/ Gets a reference to the key that would be used when inserting a value","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":297957,"byte_end":298030,"line_start":6238,"line_end":6238,"column_start":5,"column_end":78}},{"value":"/ through the `VacantEntryRef`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":298035,"byte_end":298068,"line_start":6239,"line_end":6239,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":298073,"byte_end":298076,"line_start":6240,"line_end":6240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":298081,"byte_end":298095,"line_start":6241,"line_end":6241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":298100,"byte_end":298103,"line_start":6242,"line_end":6242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":298108,"byte_end":298115,"line_start":6243,"line_end":6243,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":298120,"byte_end":298147,"line_start":6244,"line_end":6244,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":298152,"byte_end":298155,"line_start":6245,"line_end":6245,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":298160,"byte_end":298215,"line_start":6246,"line_end":6246,"column_start":5,"column_end":60}},{"value":"/ let key: &str = \"poneyland\";","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":298220,"byte_end":298252,"line_start":6247,"line_end":6247,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(map.entry_ref(key).key(), \"poneyland\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":298257,"byte_end":298311,"line_start":6248,"line_end":6248,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":298316,"byte_end":298323,"line_start":6249,"line_end":6249,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":298364,"byte_end":298370,"line_start":6250,"line_end":6250,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1554},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":298970,"byte_end":298978,"line_start":6274,"line_end":6274,"column_start":12,"column_end":20},"name":"into_key","qualname":"<VacantEntryRef>::into_key","value":"pub fn into_key(Self) -> K where K: From<&'b Q>","parent":null,"children":[],"decl_id":null,"docs":" Take ownership of the key.","sig":null,"attributes":[{"value":"/ Take ownership of the key.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":298476,"byte_end":298506,"line_start":6258,"line_end":6258,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":298511,"byte_end":298514,"line_start":6259,"line_end":6259,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":298519,"byte_end":298533,"line_start":6260,"line_end":6260,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":298538,"byte_end":298541,"line_start":6261,"line_end":6261,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":298546,"byte_end":298553,"line_start":6262,"line_end":6262,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{EntryRef, HashMap};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":298558,"byte_end":298607,"line_start":6263,"line_end":6263,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":298612,"byte_end":298615,"line_start":6264,"line_end":6264,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":298620,"byte_end":298675,"line_start":6265,"line_end":6265,"column_start":5,"column_end":60}},{"value":"/ let key: &str = \"poneyland\";","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":298680,"byte_end":298712,"line_start":6266,"line_end":6266,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":298717,"byte_end":298720,"line_start":6267,"line_end":6267,"column_start":5,"column_end":8}},{"value":"/ match map.entry_ref(key) {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":298725,"byte_end":298755,"line_start":6268,"line_end":6268,"column_start":5,"column_end":35}},{"value":"/     EntryRef::Occupied(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":298760,"byte_end":298802,"line_start":6269,"line_end":6269,"column_start":5,"column_end":47}},{"value":"/     EntryRef::Vacant(v) => assert_eq!(v.into_key(), \"poneyland\".to_owned()),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":298807,"byte_end":298887,"line_start":6270,"line_end":6270,"column_start":5,"column_end":85}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":298892,"byte_end":298897,"line_start":6271,"line_end":6271,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":298902,"byte_end":298909,"line_start":6272,"line_end":6272,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":298950,"byte_end":298956,"line_start":6273,"line_end":6273,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1555},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":299624,"byte_end":299630,"line_start":6299,"line_end":6299,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntryRef>::insert","value":"pub fn insert(Self, V) -> &'a mut V where K: Hash + From<&'b Q>,\nS: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntryRef's key,\n and returns a mutable reference to it.","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the VacantEntryRef's key,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":299071,"byte_end":299133,"line_start":6281,"line_end":6281,"column_start":5,"column_end":67}},{"value":"/ and returns a mutable reference to it.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":299138,"byte_end":299180,"line_start":6282,"line_end":6282,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":299185,"byte_end":299188,"line_start":6283,"line_end":6283,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":299193,"byte_end":299207,"line_start":6284,"line_end":6284,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":299212,"byte_end":299215,"line_start":6285,"line_end":6285,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":299220,"byte_end":299227,"line_start":6286,"line_end":6286,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":299232,"byte_end":299259,"line_start":6287,"line_end":6287,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::EntryRef;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":299264,"byte_end":299302,"line_start":6288,"line_end":6288,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":299307,"byte_end":299310,"line_start":6289,"line_end":6289,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<String, u32> = HashMap::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":299315,"byte_end":299370,"line_start":6290,"line_end":6290,"column_start":5,"column_end":60}},{"value":"/ let key: &str = \"poneyland\";","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":299375,"byte_end":299407,"line_start":6291,"line_end":6291,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":299412,"byte_end":299415,"line_start":6292,"line_end":6292,"column_start":5,"column_end":8}},{"value":"/ if let EntryRef::Vacant(o) = map.entry_ref(key) {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":299420,"byte_end":299473,"line_start":6293,"line_end":6293,"column_start":5,"column_end":58}},{"value":"/     o.insert(37);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":299478,"byte_end":299499,"line_start":6294,"line_end":6294,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":299504,"byte_end":299509,"line_start":6295,"line_end":6295,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map[\"poneyland\"], 37);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":299514,"byte_end":299551,"line_start":6296,"line_end":6296,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":299556,"byte_end":299563,"line_start":6297,"line_end":6297,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":299604,"byte_end":299610,"line_start":6298,"line_end":6298,"column_start":41,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1734},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":366630,"byte_end":366637,"line_start":115,"line_end":115,"column_start":12,"column_end":19},"name":"HashSet","qualname":"::set::HashSet","value":"HashSet {  }","parent":null,"children":[{"krate":0,"index":1738}],"decl_id":null,"docs":" A hash set implemented as a `HashMap` where the value is `()`.","sig":null,"attributes":[{"value":"/ A hash set implemented as a `HashMap` where the value is `()`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":363258,"byte_end":363324,"line_start":20,"line_end":20,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":363325,"byte_end":363328,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ As with the [`HashMap`] type, a `HashSet` requires that the elements","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":363329,"byte_end":363401,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ implement the [`Eq`] and [`Hash`] traits. This can frequently be achieved by","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":363402,"byte_end":363482,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ using `#[derive(PartialEq, Eq, Hash)]`. If you implement these yourself,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":363483,"byte_end":363559,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/ it is important that the following property holds:","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":363560,"byte_end":363614,"line_start":25,"line_end":25,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":363615,"byte_end":363618,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":363619,"byte_end":363630,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"/ k1 == k2 -> hash(k1) == hash(k2)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":363631,"byte_end":363667,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":363668,"byte_end":363675,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":363676,"byte_end":363679,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ In other words, if two keys are equal, their hashes must be equal.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":363680,"byte_end":363750,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":363751,"byte_end":363754,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":363755,"byte_end":363758,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ It is a logic error for an item to be modified in such a way that the","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":363759,"byte_end":363832,"line_start":34,"line_end":34,"column_start":1,"column_end":74}},{"value":"/ item's hash, as determined by the [`Hash`] trait, or its equality, as","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":363833,"byte_end":363906,"line_start":35,"line_end":35,"column_start":1,"column_end":74}},{"value":"/ determined by the [`Eq`] trait, changes while it is in the set. This is","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":363907,"byte_end":363982,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/ normally only possible through [`Cell`], [`RefCell`], global state, I/O, or","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":363983,"byte_end":364062,"line_start":37,"line_end":37,"column_start":1,"column_end":80}},{"value":"/ unsafe code.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":364063,"byte_end":364079,"line_start":38,"line_end":38,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":364080,"byte_end":364083,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ It is also a logic error for the [`Hash`] implementation of a key to panic.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":364084,"byte_end":364163,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ This is generally only possible if the trait is implemented manually. If a","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":364164,"byte_end":364242,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ panic does occur then the contents of the `HashSet` may become corrupted and","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":364243,"byte_end":364323,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/ some items may be dropped from the table.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":364324,"byte_end":364369,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":364370,"byte_end":364373,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":364374,"byte_end":364388,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":364389,"byte_end":364392,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":364393,"byte_end":364400,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":364401,"byte_end":364428,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/ // Type inference lets us omit an explicit type signature (which","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":364429,"byte_end":364497,"line_start":49,"line_end":49,"column_start":1,"column_end":69}},{"value":"/ // would be `HashSet<String>` in this example).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":364498,"byte_end":364549,"line_start":50,"line_end":50,"column_start":1,"column_end":52}},{"value":"/ let mut books = HashSet::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":364550,"byte_end":364585,"line_start":51,"line_end":51,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":364586,"byte_end":364589,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ // Add some books.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":364590,"byte_end":364612,"line_start":53,"line_end":53,"column_start":1,"column_end":23}},{"value":"/ books.insert(\"A Dance With Dragons\".to_string());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":364613,"byte_end":364666,"line_start":54,"line_end":54,"column_start":1,"column_end":54}},{"value":"/ books.insert(\"To Kill a Mockingbird\".to_string());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":364667,"byte_end":364721,"line_start":55,"line_end":55,"column_start":1,"column_end":55}},{"value":"/ books.insert(\"The Odyssey\".to_string());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":364722,"byte_end":364766,"line_start":56,"line_end":56,"column_start":1,"column_end":45}},{"value":"/ books.insert(\"The Great Gatsby\".to_string());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":364767,"byte_end":364816,"line_start":57,"line_end":57,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":364817,"byte_end":364820,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // Check for a specific one.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":364821,"byte_end":364853,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ if !books.contains(\"The Winds of Winter\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":364854,"byte_end":364901,"line_start":60,"line_end":60,"column_start":1,"column_end":48}},{"value":"/     println!(\"We have {} books, but The Winds of Winter ain't one.\",","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":364902,"byte_end":364974,"line_start":61,"line_end":61,"column_start":1,"column_end":73}},{"value":"/              books.len());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":364975,"byte_end":365005,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":365006,"byte_end":365011,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":365012,"byte_end":365015,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ // Remove a book.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":365016,"byte_end":365037,"line_start":65,"line_end":65,"column_start":1,"column_end":22}},{"value":"/ books.remove(\"The Odyssey\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":365038,"byte_end":365070,"line_start":66,"line_end":66,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":365071,"byte_end":365074,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ // Iterate over everything.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":365075,"byte_end":365106,"line_start":68,"line_end":68,"column_start":1,"column_end":32}},{"value":"/ for book in &books {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":365107,"byte_end":365131,"line_start":69,"line_end":69,"column_start":1,"column_end":25}},{"value":"/     println!(\"{}\", book);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":365132,"byte_end":365161,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":365162,"byte_end":365167,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":365168,"byte_end":365175,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":365176,"byte_end":365179,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ The easiest way to use `HashSet` with a custom type is to derive","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":365180,"byte_end":365248,"line_start":74,"line_end":74,"column_start":1,"column_end":69}},{"value":"/ [`Eq`] and [`Hash`]. We must also derive [`PartialEq`]. This will in the","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":365249,"byte_end":365325,"line_start":75,"line_end":75,"column_start":1,"column_end":77}},{"value":"/ future be implied by [`Eq`].","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":365326,"byte_end":365358,"line_start":76,"line_end":76,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":365359,"byte_end":365362,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":365363,"byte_end":365370,"line_start":78,"line_end":78,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":365371,"byte_end":365398,"line_start":79,"line_end":79,"column_start":1,"column_end":28}},{"value":"/ #[derive(Hash, Eq, PartialEq, Debug)]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":365399,"byte_end":365440,"line_start":80,"line_end":80,"column_start":1,"column_end":42}},{"value":"/ struct Viking {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":365441,"byte_end":365460,"line_start":81,"line_end":81,"column_start":1,"column_end":20}},{"value":"/     name: String,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":365461,"byte_end":365482,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/     power: usize,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":365483,"byte_end":365504,"line_start":83,"line_end":83,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":365505,"byte_end":365510,"line_start":84,"line_end":84,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":365511,"byte_end":365514,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ let mut vikings = HashSet::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":365515,"byte_end":365552,"line_start":86,"line_end":86,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":365553,"byte_end":365556,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ vikings.insert(Viking { name: \"Einar\".to_string(), power: 9 });","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":365557,"byte_end":365624,"line_start":88,"line_end":88,"column_start":1,"column_end":68}},{"value":"/ vikings.insert(Viking { name: \"Einar\".to_string(), power: 9 });","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":365625,"byte_end":365692,"line_start":89,"line_end":89,"column_start":1,"column_end":68}},{"value":"/ vikings.insert(Viking { name: \"Olaf\".to_string(), power: 4 });","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":365693,"byte_end":365759,"line_start":90,"line_end":90,"column_start":1,"column_end":67}},{"value":"/ vikings.insert(Viking { name: \"Harald\".to_string(), power: 8 });","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":365760,"byte_end":365828,"line_start":91,"line_end":91,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":365829,"byte_end":365832,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ // Use derived implementation to print the vikings.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":365833,"byte_end":365888,"line_start":93,"line_end":93,"column_start":1,"column_end":56}},{"value":"/ for x in &vikings {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":365889,"byte_end":365912,"line_start":94,"line_end":94,"column_start":1,"column_end":24}},{"value":"/     println!(\"{:?}\", x);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":365913,"byte_end":365941,"line_start":95,"line_end":95,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":365942,"byte_end":365947,"line_start":96,"line_end":96,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":365948,"byte_end":365955,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":365956,"byte_end":365959,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ A `HashSet` with fixed list of elements can be initialized from an array:","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":365960,"byte_end":366037,"line_start":99,"line_end":99,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":366038,"byte_end":366041,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":366042,"byte_end":366049,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":366050,"byte_end":366077,"line_start":102,"line_end":102,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":366078,"byte_end":366081,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let viking_names: HashSet<&'static str> =","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":366082,"byte_end":366127,"line_start":104,"line_end":104,"column_start":1,"column_end":46}},{"value":"/     [ \"Einar\", \"Olaf\", \"Harald\" ].iter().cloned().collect();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":366128,"byte_end":366192,"line_start":105,"line_end":105,"column_start":1,"column_end":65}},{"value":"/ // use the values stored in the set","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":366193,"byte_end":366232,"line_start":106,"line_end":106,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":366233,"byte_end":366240,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":366241,"byte_end":366244,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ [`Cell`]: https://doc.rust-lang.org/std/cell/struct.Cell.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":366245,"byte_end":366310,"line_start":109,"line_end":109,"column_start":1,"column_end":66}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":366311,"byte_end":366370,"line_start":110,"line_end":110,"column_start":1,"column_end":60}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":366371,"byte_end":366435,"line_start":111,"line_end":111,"column_start":1,"column_end":65}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":366436,"byte_end":366472,"line_start":112,"line_end":112,"column_start":1,"column_end":37}},{"value":"/ [`PartialEq`]: https://doc.rust-lang.org/std/cmp/trait.PartialEq.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":366473,"byte_end":366546,"line_start":113,"line_end":113,"column_start":1,"column_end":74}},{"value":"/ [`RefCell`]: https://doc.rust-lang.org/std/cell/struct.RefCell.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":366547,"byte_end":366618,"line_start":114,"line_end":114,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1747},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":367455,"byte_end":367458,"line_start":145,"line_end":145,"column_start":12,"column_end":15},"name":"new","qualname":"<HashSet<T, DefaultHashBuilder>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashSet`.","sig":null,"attributes":[{"value":"/ Creates an empty `HashSet`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":367087,"byte_end":367118,"line_start":133,"line_end":133,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":367123,"byte_end":367126,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ The hash set is initially created with a capacity of 0, so it will not allocate until it","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":367131,"byte_end":367223,"line_start":135,"line_end":135,"column_start":5,"column_end":97}},{"value":"/ is first inserted into.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":367228,"byte_end":367255,"line_start":136,"line_end":136,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":367260,"byte_end":367263,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":367268,"byte_end":367282,"line_start":138,"line_end":138,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":367287,"byte_end":367290,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":367295,"byte_end":367302,"line_start":140,"line_end":140,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":367307,"byte_end":367334,"line_start":141,"line_end":141,"column_start":5,"column_end":32}},{"value":"/ let set: HashSet<i32> = HashSet::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":367339,"byte_end":367382,"line_start":142,"line_end":142,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":367387,"byte_end":367394,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":367435,"byte_end":367441,"line_start":144,"line_end":144,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1748},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":368011,"byte_end":368024,"line_start":164,"line_end":164,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<HashSet<T, DefaultHashBuilder>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashSet` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates an empty `HashSet` with the specified capacity.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":367540,"byte_end":367599,"line_start":151,"line_end":151,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":367604,"byte_end":367607,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ The hash set will be able to hold at least `capacity` elements without","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":367612,"byte_end":367686,"line_start":153,"line_end":153,"column_start":5,"column_end":79}},{"value":"/ reallocating. If `capacity` is 0, the hash set will not allocate.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":367691,"byte_end":367760,"line_start":154,"line_end":154,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":367765,"byte_end":367768,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":367773,"byte_end":367787,"line_start":156,"line_end":156,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":367792,"byte_end":367795,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":367800,"byte_end":367807,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":367812,"byte_end":367839,"line_start":159,"line_end":159,"column_start":5,"column_end":32}},{"value":"/ let set: HashSet<i32> = HashSet::with_capacity(10);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":367844,"byte_end":367899,"line_start":160,"line_end":160,"column_start":5,"column_end":60}},{"value":"/ assert!(set.capacity() >= 10);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":367904,"byte_end":367938,"line_start":161,"line_end":161,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":367943,"byte_end":367950,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":367991,"byte_end":367997,"line_start":163,"line_end":163,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1752},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":368612,"byte_end":368618,"line_start":185,"line_end":185,"column_start":12,"column_end":18},"name":"new_in","qualname":"<HashSet<T, DefaultHashBuilder, A>>::new_in","value":"pub fn new_in(A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashSet`.","sig":null,"attributes":[{"value":"/ Creates an empty `HashSet`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":368244,"byte_end":368275,"line_start":173,"line_end":173,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":368280,"byte_end":368283,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ The hash set is initially created with a capacity of 0, so it will not allocate until it","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":368288,"byte_end":368380,"line_start":175,"line_end":175,"column_start":5,"column_end":97}},{"value":"/ is first inserted into.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":368385,"byte_end":368412,"line_start":176,"line_end":176,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":368417,"byte_end":368420,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":368425,"byte_end":368439,"line_start":178,"line_end":178,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":368444,"byte_end":368447,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":368452,"byte_end":368459,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":368464,"byte_end":368491,"line_start":181,"line_end":181,"column_start":5,"column_end":32}},{"value":"/ let set: HashSet<i32> = HashSet::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":368496,"byte_end":368539,"line_start":182,"line_end":182,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":368544,"byte_end":368551,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":368592,"byte_end":368598,"line_start":184,"line_end":184,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1753},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":369187,"byte_end":369203,"line_start":204,"line_end":204,"column_start":12,"column_end":28},"name":"with_capacity_in","qualname":"<HashSet<T, DefaultHashBuilder, A>>::with_capacity_in","value":"pub fn with_capacity_in(usize, A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashSet` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates an empty `HashSet` with the specified capacity.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":368716,"byte_end":368775,"line_start":191,"line_end":191,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":368780,"byte_end":368783,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ The hash set will be able to hold at least `capacity` elements without","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":368788,"byte_end":368862,"line_start":193,"line_end":193,"column_start":5,"column_end":79}},{"value":"/ reallocating. If `capacity` is 0, the hash set will not allocate.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":368867,"byte_end":368936,"line_start":194,"line_end":194,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":368941,"byte_end":368944,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":368949,"byte_end":368963,"line_start":196,"line_end":196,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":368968,"byte_end":368971,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":368976,"byte_end":368983,"line_start":198,"line_end":198,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":368988,"byte_end":369015,"line_start":199,"line_end":199,"column_start":5,"column_end":32}},{"value":"/ let set: HashSet<i32> = HashSet::with_capacity(10);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":369020,"byte_end":369075,"line_start":200,"line_end":200,"column_start":5,"column_end":60}},{"value":"/ assert!(set.capacity() >= 10);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":369080,"byte_end":369114,"line_start":201,"line_end":201,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":369119,"byte_end":369126,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":369167,"byte_end":369173,"line_start":203,"line_end":203,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1758},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":369718,"byte_end":369726,"line_start":222,"line_end":222,"column_start":12,"column_end":20},"name":"capacity","qualname":"<HashSet<T, S, A>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the set can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the set can hold without reallocating.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":369392,"byte_end":369465,"line_start":212,"line_end":212,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":369470,"byte_end":369473,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":369478,"byte_end":369492,"line_start":214,"line_end":214,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":369497,"byte_end":369500,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":369505,"byte_end":369512,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":369517,"byte_end":369544,"line_start":217,"line_end":217,"column_start":5,"column_end":32}},{"value":"/ let set: HashSet<i32> = HashSet::with_capacity(100);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":369549,"byte_end":369605,"line_start":218,"line_end":218,"column_start":5,"column_end":61}},{"value":"/ assert!(set.capacity() >= 100);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":369610,"byte_end":369645,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":369650,"byte_end":369657,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":369698,"byte_end":369704,"line_start":221,"line_end":221,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1759},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":370251,"byte_end":370255,"line_start":243,"line_end":243,"column_start":12,"column_end":16},"name":"iter","qualname":"<HashSet<T, S, A>>::iter","value":"pub fn iter(&Self) -> Iter<, T>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all elements in arbitrary order.\n The iterator element type is `&'a T`.","sig":null,"attributes":[{"value":"/ An iterator visiting all elements in arbitrary order.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":369784,"byte_end":369841,"line_start":226,"line_end":226,"column_start":5,"column_end":62}},{"value":"/ The iterator element type is `&'a T`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":369846,"byte_end":369887,"line_start":227,"line_end":227,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":369892,"byte_end":369895,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":369900,"byte_end":369914,"line_start":229,"line_end":229,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":369919,"byte_end":369922,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":369927,"byte_end":369934,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":369939,"byte_end":369966,"line_start":232,"line_end":232,"column_start":5,"column_end":32}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":369971,"byte_end":370004,"line_start":233,"line_end":233,"column_start":5,"column_end":38}},{"value":"/ set.insert(\"a\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":370009,"byte_end":370029,"line_start":234,"line_end":234,"column_start":5,"column_end":25}},{"value":"/ set.insert(\"b\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":370034,"byte_end":370054,"line_start":235,"line_end":235,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":370059,"byte_end":370062,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ // Will print in an arbitrary order.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":370067,"byte_end":370107,"line_start":237,"line_end":237,"column_start":5,"column_end":45}},{"value":"/ for x in set.iter() {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":370112,"byte_end":370137,"line_start":238,"line_end":238,"column_start":5,"column_end":30}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":370142,"byte_end":370168,"line_start":239,"line_end":239,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":370173,"byte_end":370178,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":370183,"byte_end":370190,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":370231,"byte_end":370237,"line_start":242,"line_end":242,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1760},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":370678,"byte_end":370681,"line_start":262,"line_end":262,"column_start":12,"column_end":15},"name":"len","qualname":"<HashSet<T, S, A>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the set.","sig":null,"attributes":[{"value":"/ Returns the number of elements in the set.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":370351,"byte_end":370397,"line_start":249,"line_end":249,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":370402,"byte_end":370405,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":370410,"byte_end":370424,"line_start":251,"line_end":251,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":370429,"byte_end":370432,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":370437,"byte_end":370444,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":370449,"byte_end":370476,"line_start":254,"line_end":254,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":370481,"byte_end":370484,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ let mut v = HashSet::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":370489,"byte_end":370520,"line_start":256,"line_end":256,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(v.len(), 0);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":370525,"byte_end":370552,"line_start":257,"line_end":257,"column_start":5,"column_end":32}},{"value":"/ v.insert(1);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":370557,"byte_end":370573,"line_start":258,"line_end":258,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(v.len(), 1);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":370578,"byte_end":370605,"line_start":259,"line_end":259,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":370610,"byte_end":370617,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":370658,"byte_end":370664,"line_start":261,"line_end":261,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1761},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":371065,"byte_end":371073,"line_start":279,"line_end":279,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<HashSet<T, S, A>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no elements.","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no elements.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":370734,"byte_end":370785,"line_start":266,"line_end":266,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":370790,"byte_end":370793,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":370798,"byte_end":370812,"line_start":268,"line_end":268,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":370817,"byte_end":370820,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":370825,"byte_end":370832,"line_start":270,"line_end":270,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":370837,"byte_end":370864,"line_start":271,"line_end":271,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":370869,"byte_end":370872,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ let mut v = HashSet::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":370877,"byte_end":370908,"line_start":273,"line_end":273,"column_start":5,"column_end":36}},{"value":"/ assert!(v.is_empty());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":370913,"byte_end":370939,"line_start":274,"line_end":274,"column_start":5,"column_end":31}},{"value":"/ v.insert(1);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":370944,"byte_end":370960,"line_start":275,"line_end":275,"column_start":5,"column_end":21}},{"value":"/ assert!(!v.is_empty());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":370965,"byte_end":370992,"line_start":276,"line_end":276,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":370997,"byte_end":371004,"line_start":277,"line_end":277,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":371045,"byte_end":371051,"line_start":278,"line_end":278,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1762},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":371621,"byte_end":371626,"line_start":301,"line_end":301,"column_start":12,"column_end":17},"name":"drain","qualname":"<HashSet<T, S, A>>::drain","value":"pub fn drain(&mut Self) -> Drain<, T, A>","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, returning all elements in an iterator.","sig":null,"attributes":[{"value":"/ Clears the set, returning all elements in an iterator.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":371130,"byte_end":371188,"line_start":283,"line_end":283,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":371193,"byte_end":371196,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":371201,"byte_end":371215,"line_start":285,"line_end":285,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":371220,"byte_end":371223,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":371228,"byte_end":371235,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":371240,"byte_end":371267,"line_start":288,"line_end":288,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":371272,"byte_end":371275,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":371280,"byte_end":371346,"line_start":290,"line_end":290,"column_start":5,"column_end":71}},{"value":"/ assert!(!set.is_empty());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":371351,"byte_end":371380,"line_start":291,"line_end":291,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":371385,"byte_end":371388,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ // print 1, 2, 3 in an arbitrary order","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":371393,"byte_end":371435,"line_start":293,"line_end":293,"column_start":5,"column_end":47}},{"value":"/ for i in set.drain() {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":371440,"byte_end":371466,"line_start":294,"line_end":294,"column_start":5,"column_end":31}},{"value":"/     println!(\"{}\", i);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":371471,"byte_end":371497,"line_start":295,"line_end":295,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":371502,"byte_end":371507,"line_start":296,"line_end":296,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":371512,"byte_end":371515,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ assert!(set.is_empty());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":371520,"byte_end":371548,"line_start":298,"line_end":298,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":371553,"byte_end":371560,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":371601,"byte_end":371607,"line_start":300,"line_end":300,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1763},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":372160,"byte_end":372166,"line_start":321,"line_end":321,"column_start":12,"column_end":18},"name":"retain","qualname":"<HashSet<T, S, A>>::retain","value":"pub fn retain<F>(&mut Self, F) where F: FnMut(&T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Retains only the elements specified by the predicate.","sig":null,"attributes":[{"value":"/ Retains only the elements specified by the predicate.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":371732,"byte_end":371789,"line_start":307,"line_end":307,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":371794,"byte_end":371797,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ In other words, remove all elements `e` such that `f(&e)` returns `false`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":371802,"byte_end":371880,"line_start":309,"line_end":309,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":371885,"byte_end":371888,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":371893,"byte_end":371907,"line_start":311,"line_end":311,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":371912,"byte_end":371915,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":371920,"byte_end":371927,"line_start":313,"line_end":313,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":371932,"byte_end":371959,"line_start":314,"line_end":314,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":371964,"byte_end":371967,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ let xs = [1,2,3,4,5,6];","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":371972,"byte_end":371999,"line_start":316,"line_end":316,"column_start":5,"column_end":32}},{"value":"/ let mut set: HashSet<i32> = xs.iter().cloned().collect();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":372004,"byte_end":372065,"line_start":317,"line_end":317,"column_start":5,"column_end":66}},{"value":"/ set.retain(|&k| k % 2 == 0);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":372070,"byte_end":372102,"line_start":318,"line_end":318,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(set.len(), 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":372107,"byte_end":372136,"line_start":319,"line_end":319,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":372141,"byte_end":372148,"line_start":320,"line_end":320,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1766},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":373236,"byte_end":373248,"line_start":354,"line_end":354,"column_start":12,"column_end":24},"name":"drain_filter","qualname":"<HashSet<T, S, A>>::drain_filter","value":"pub fn drain_filter<F>(&mut Self, F) -> DrainFilter<, T, F, A> where\nF: FnMut(&T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Drains elements which are true under the given predicate,\n and returns an iterator over the removed items.","sig":null,"attributes":[{"value":"/ Drains elements which are true under the given predicate,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":372286,"byte_end":372347,"line_start":328,"line_end":328,"column_start":5,"column_end":66}},{"value":"/ and returns an iterator over the removed items.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":372352,"byte_end":372403,"line_start":329,"line_end":329,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":372408,"byte_end":372411,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ In other words, move all elements `e` such that `f(&e)` returns `true` out","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":372416,"byte_end":372494,"line_start":331,"line_end":331,"column_start":5,"column_end":83}},{"value":"/ into another iterator.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":372499,"byte_end":372525,"line_start":332,"line_end":332,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":372530,"byte_end":372533,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ When the returned DrainedFilter is dropped, any remaining elements that satisfy","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":372538,"byte_end":372621,"line_start":334,"line_end":334,"column_start":5,"column_end":88}},{"value":"/ the predicate are dropped from the set.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":372626,"byte_end":372669,"line_start":335,"line_end":335,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":372674,"byte_end":372677,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":372682,"byte_end":372696,"line_start":337,"line_end":337,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":372701,"byte_end":372704,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":372709,"byte_end":372716,"line_start":339,"line_end":339,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":372721,"byte_end":372748,"line_start":340,"line_end":340,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":372753,"byte_end":372756,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<i32> = (0..8).collect();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":372761,"byte_end":372810,"line_start":342,"line_end":342,"column_start":5,"column_end":54}},{"value":"/ let drained: HashSet<i32> = set.drain_filter(|v| v % 2 == 0).collect();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":372815,"byte_end":372890,"line_start":343,"line_end":343,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":372895,"byte_end":372898,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ let mut evens = drained.into_iter().collect::<Vec<_>>();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":372903,"byte_end":372963,"line_start":345,"line_end":345,"column_start":5,"column_end":65}},{"value":"/ let mut odds = set.into_iter().collect::<Vec<_>>();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":372968,"byte_end":373023,"line_start":346,"line_end":346,"column_start":5,"column_end":60}},{"value":"/ evens.sort();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":373028,"byte_end":373045,"line_start":347,"line_end":347,"column_start":5,"column_end":22}},{"value":"/ odds.sort();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":373050,"byte_end":373066,"line_start":348,"line_end":348,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":373071,"byte_end":373074,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens, vec![0, 2, 4, 6]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":373079,"byte_end":373119,"line_start":350,"line_end":350,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(odds, vec![1, 3, 5, 7]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":373124,"byte_end":373163,"line_start":351,"line_end":351,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":373168,"byte_end":373175,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":373216,"byte_end":373222,"line_start":353,"line_end":353,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1768},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":373861,"byte_end":373866,"line_start":380,"line_end":380,"column_start":12,"column_end":17},"name":"clear","qualname":"<HashSet<T, S, A>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all values.","sig":null,"attributes":[{"value":"/ Clears the set, removing all values.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":373554,"byte_end":373594,"line_start":367,"line_end":367,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":373599,"byte_end":373602,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":373607,"byte_end":373621,"line_start":369,"line_end":369,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":373626,"byte_end":373629,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":373634,"byte_end":373641,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":373646,"byte_end":373673,"line_start":372,"line_end":372,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":373678,"byte_end":373681,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ let mut v = HashSet::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":373686,"byte_end":373717,"line_start":374,"line_end":374,"column_start":5,"column_end":36}},{"value":"/ v.insert(1);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":373722,"byte_end":373738,"line_start":375,"line_end":375,"column_start":5,"column_end":21}},{"value":"/ v.clear();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":373743,"byte_end":373757,"line_start":376,"line_end":376,"column_start":5,"column_end":19}},{"value":"/ assert!(v.is_empty());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":373762,"byte_end":373788,"line_start":377,"line_end":377,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":373793,"byte_end":373800,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":373841,"byte_end":373847,"line_start":379,"line_end":379,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1772},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":374972,"byte_end":374983,"line_start":413,"line_end":413,"column_start":18,"column_end":29},"name":"with_hasher","qualname":"<HashSet<T, S, Global>>::with_hasher","value":"pub const fn with_hasher(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty hash set which will use the given hasher to hash\n keys.","sig":null,"attributes":[{"value":"/ Creates a new empty hash set which will use the given hasher to hash","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":373954,"byte_end":374026,"line_start":386,"line_end":386,"column_start":5,"column_end":77}},{"value":"/ keys.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":374031,"byte_end":374040,"line_start":387,"line_end":387,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":374045,"byte_end":374048,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ The hash set is also created with the default initial capacity.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":374053,"byte_end":374120,"line_start":389,"line_end":389,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":374125,"byte_end":374128,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ Warning: `hasher` is normally randomly generated, and","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":374133,"byte_end":374190,"line_start":391,"line_end":391,"column_start":5,"column_end":62}},{"value":"/ is designed to allow `HashSet`s to be resistant to attacks that","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":374195,"byte_end":374262,"line_start":392,"line_end":392,"column_start":5,"column_end":72}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":374267,"byte_end":374330,"line_start":393,"line_end":393,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":374335,"byte_end":374399,"line_start":394,"line_end":394,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":374404,"byte_end":374407,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ The `hash_builder` passed should implement the [`BuildHasher`] trait for","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":374412,"byte_end":374488,"line_start":396,"line_end":396,"column_start":5,"column_end":81}},{"value":"/ the HashMap to be useful, see its documentation for details.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":374493,"byte_end":374557,"line_start":397,"line_end":397,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":374562,"byte_end":374565,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":374570,"byte_end":374573,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":374578,"byte_end":374592,"line_start":400,"line_end":400,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":374597,"byte_end":374600,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":374605,"byte_end":374612,"line_start":402,"line_end":402,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":374617,"byte_end":374644,"line_start":403,"line_end":403,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":374649,"byte_end":374697,"line_start":404,"line_end":404,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":374702,"byte_end":374705,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ let s = DefaultHashBuilder::default();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":374710,"byte_end":374752,"line_start":406,"line_end":406,"column_start":5,"column_end":47}},{"value":"/ let mut set = HashSet::with_hasher(s);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":374757,"byte_end":374799,"line_start":407,"line_end":407,"column_start":5,"column_end":47}},{"value":"/ set.insert(2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":374804,"byte_end":374822,"line_start":408,"line_end":408,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":374827,"byte_end":374834,"line_start":409,"line_end":409,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":374839,"byte_end":374842,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ [`BuildHasher`]: ../../std/hash/trait.BuildHasher.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":374847,"byte_end":374905,"line_start":411,"line_end":411,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":374946,"byte_end":374952,"line_start":412,"line_end":412,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1773},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":376204,"byte_end":376228,"line_start":446,"line_end":446,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<HashSet<T, S, Global>>::with_capacity_and_hasher","value":"pub fn with_capacity_and_hasher(usize, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashSet` with the specified capacity, using\n `hasher` to hash the keys.","sig":null,"attributes":[{"value":"/ Creates an empty `HashSet` with the specified capacity, using","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":375088,"byte_end":375153,"line_start":419,"line_end":419,"column_start":5,"column_end":70}},{"value":"/ `hasher` to hash the keys.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":375158,"byte_end":375188,"line_start":420,"line_end":420,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":375193,"byte_end":375196,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ The hash set will be able to hold at least `capacity` elements without","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":375201,"byte_end":375275,"line_start":422,"line_end":422,"column_start":5,"column_end":79}},{"value":"/ reallocating. If `capacity` is 0, the hash set will not allocate.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":375280,"byte_end":375349,"line_start":423,"line_end":423,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":375354,"byte_end":375357,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ Warning: `hasher` is normally randomly generated, and","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":375362,"byte_end":375419,"line_start":425,"line_end":425,"column_start":5,"column_end":62}},{"value":"/ is designed to allow `HashSet`s to be resistant to attacks that","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":375424,"byte_end":375491,"line_start":426,"line_end":426,"column_start":5,"column_end":72}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":375496,"byte_end":375559,"line_start":427,"line_end":427,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":375564,"byte_end":375628,"line_start":428,"line_end":428,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":375633,"byte_end":375636,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ The `hash_builder` passed should implement the [`BuildHasher`] trait for","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":375641,"byte_end":375717,"line_start":430,"line_end":430,"column_start":5,"column_end":81}},{"value":"/ the HashMap to be useful, see its documentation for details.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":375722,"byte_end":375786,"line_start":431,"line_end":431,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":375791,"byte_end":375794,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":375799,"byte_end":375813,"line_start":433,"line_end":433,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":375818,"byte_end":375821,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":375826,"byte_end":375833,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":375838,"byte_end":375865,"line_start":436,"line_end":436,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":375870,"byte_end":375918,"line_start":437,"line_end":437,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":375923,"byte_end":375926,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ let s = DefaultHashBuilder::default();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":375931,"byte_end":375973,"line_start":439,"line_end":439,"column_start":5,"column_end":47}},{"value":"/ let mut set = HashSet::with_capacity_and_hasher(10, s);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":375978,"byte_end":376037,"line_start":440,"line_end":440,"column_start":5,"column_end":64}},{"value":"/ set.insert(1);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":376042,"byte_end":376060,"line_start":441,"line_end":441,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":376065,"byte_end":376072,"line_start":442,"line_end":442,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":376077,"byte_end":376080,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ [`BuildHasher`]: ../../std/hash/trait.BuildHasher.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":376085,"byte_end":376143,"line_start":444,"line_end":444,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":376184,"byte_end":376190,"line_start":445,"line_end":445,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1778},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":376518,"byte_end":376527,"line_start":459,"line_end":459,"column_start":12,"column_end":21},"name":"allocator","qualname":"<HashSet<T, S, A>>::allocator","value":"pub fn allocator(&Self) -> &A","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying allocator.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying allocator.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":376440,"byte_end":376492,"line_start":457,"line_end":457,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":376497,"byte_end":376506,"line_start":458,"line_end":458,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1779},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":377358,"byte_end":377372,"line_start":484,"line_end":484,"column_start":12,"column_end":26},"name":"with_hasher_in","qualname":"<HashSet<T, S, A>>::with_hasher_in","value":"pub fn with_hasher_in(S, A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty hash set which will use the given hasher to hash\n keys.","sig":null,"attributes":[{"value":"/ Creates a new empty hash set which will use the given hasher to hash","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":376583,"byte_end":376655,"line_start":463,"line_end":463,"column_start":5,"column_end":77}},{"value":"/ keys.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":376660,"byte_end":376669,"line_start":464,"line_end":464,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":376674,"byte_end":376677,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The hash set is also created with the default initial capacity.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":376682,"byte_end":376749,"line_start":466,"line_end":466,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":376754,"byte_end":376757,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ Warning: `hasher` is normally randomly generated, and","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":376762,"byte_end":376819,"line_start":468,"line_end":468,"column_start":5,"column_end":62}},{"value":"/ is designed to allow `HashSet`s to be resistant to attacks that","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":376824,"byte_end":376891,"line_start":469,"line_end":469,"column_start":5,"column_end":72}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":376896,"byte_end":376959,"line_start":470,"line_end":470,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":376964,"byte_end":377028,"line_start":471,"line_end":471,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":377033,"byte_end":377036,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":377041,"byte_end":377055,"line_start":473,"line_end":473,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":377060,"byte_end":377063,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":377068,"byte_end":377075,"line_start":475,"line_end":475,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":377080,"byte_end":377107,"line_start":476,"line_end":476,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":377112,"byte_end":377160,"line_start":477,"line_end":477,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":377165,"byte_end":377168,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ let s = DefaultHashBuilder::default();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":377173,"byte_end":377215,"line_start":479,"line_end":479,"column_start":5,"column_end":47}},{"value":"/ let mut set = HashSet::with_hasher(s);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":377220,"byte_end":377262,"line_start":480,"line_end":480,"column_start":5,"column_end":47}},{"value":"/ set.insert(2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":377267,"byte_end":377285,"line_start":481,"line_end":481,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":377290,"byte_end":377297,"line_start":482,"line_end":482,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":377338,"byte_end":377344,"line_start":483,"line_end":483,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1780},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":378384,"byte_end":378411,"line_start":512,"line_end":512,"column_start":12,"column_end":39},"name":"with_capacity_and_hasher_in","qualname":"<HashSet<T, S, A>>::with_capacity_and_hasher_in","value":"pub fn with_capacity_and_hasher_in(usize, S, A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashSet` with the specified capacity, using\n `hasher` to hash the keys.","sig":null,"attributes":[{"value":"/ Creates an empty `HashSet` with the specified capacity, using","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":377497,"byte_end":377562,"line_start":490,"line_end":490,"column_start":5,"column_end":70}},{"value":"/ `hasher` to hash the keys.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":377567,"byte_end":377597,"line_start":491,"line_end":491,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":377602,"byte_end":377605,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ The hash set will be able to hold at least `capacity` elements without","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":377610,"byte_end":377684,"line_start":493,"line_end":493,"column_start":5,"column_end":79}},{"value":"/ reallocating. If `capacity` is 0, the hash set will not allocate.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":377689,"byte_end":377758,"line_start":494,"line_end":494,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":377763,"byte_end":377766,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ Warning: `hasher` is normally randomly generated, and","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":377771,"byte_end":377828,"line_start":496,"line_end":496,"column_start":5,"column_end":62}},{"value":"/ is designed to allow `HashSet`s to be resistant to attacks that","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":377833,"byte_end":377900,"line_start":497,"line_end":497,"column_start":5,"column_end":72}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":377905,"byte_end":377968,"line_start":498,"line_end":498,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":377973,"byte_end":378037,"line_start":499,"line_end":499,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":378042,"byte_end":378045,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":378050,"byte_end":378064,"line_start":501,"line_end":501,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":378069,"byte_end":378072,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":378077,"byte_end":378084,"line_start":503,"line_end":503,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":378089,"byte_end":378116,"line_start":504,"line_end":504,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":378121,"byte_end":378169,"line_start":505,"line_end":505,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":378174,"byte_end":378177,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ let s = DefaultHashBuilder::default();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":378182,"byte_end":378224,"line_start":507,"line_end":507,"column_start":5,"column_end":47}},{"value":"/ let mut set = HashSet::with_capacity_and_hasher(10, s);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":378229,"byte_end":378288,"line_start":508,"line_end":508,"column_start":5,"column_end":64}},{"value":"/ set.insert(1);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":378293,"byte_end":378311,"line_start":509,"line_end":509,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":378316,"byte_end":378323,"line_start":510,"line_end":510,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":378364,"byte_end":378370,"line_start":511,"line_end":511,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1781},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":379103,"byte_end":379109,"line_start":533,"line_end":533,"column_start":12,"column_end":18},"name":"hasher","qualname":"<HashSet<T, S, A>>::hasher","value":"pub fn hasher(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the set's [`BuildHasher`].","sig":null,"attributes":[{"value":"/ Returns a reference to the set's [`BuildHasher`].","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":378576,"byte_end":378629,"line_start":518,"line_end":518,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":378634,"byte_end":378637,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ [`BuildHasher`]: https://doc.rust-lang.org/std/hash/trait.BuildHasher.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":378642,"byte_end":378720,"line_start":520,"line_end":520,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":378725,"byte_end":378728,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":378733,"byte_end":378747,"line_start":522,"line_end":522,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":378752,"byte_end":378755,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":378760,"byte_end":378767,"line_start":524,"line_end":524,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":378772,"byte_end":378799,"line_start":525,"line_end":525,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":378804,"byte_end":378852,"line_start":526,"line_end":526,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":378857,"byte_end":378860,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ let hasher = DefaultHashBuilder::default();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":378865,"byte_end":378912,"line_start":528,"line_end":528,"column_start":5,"column_end":52}},{"value":"/ let set: HashSet<i32> = HashSet::with_hasher(hasher);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":378917,"byte_end":378974,"line_start":529,"line_end":529,"column_start":5,"column_end":62}},{"value":"/ let hasher: &DefaultHashBuilder = set.hasher();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":378979,"byte_end":379030,"line_start":530,"line_end":530,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":379035,"byte_end":379042,"line_start":531,"line_end":531,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":379083,"byte_end":379089,"line_start":532,"line_end":532,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1786},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":379810,"byte_end":379817,"line_start":561,"line_end":561,"column_start":12,"column_end":19},"name":"reserve","qualname":"<HashSet<T, S, A>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more elements to be inserted\n in the `HashSet`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more elements to be inserted","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":379267,"byte_end":379343,"line_start":544,"line_end":544,"column_start":5,"column_end":81}},{"value":"/ in the `HashSet`. The collection may reserve more space to avoid","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":379348,"byte_end":379416,"line_start":545,"line_end":545,"column_start":5,"column_end":73}},{"value":"/ frequent reallocations.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":379421,"byte_end":379448,"line_start":546,"line_end":546,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":379453,"byte_end":379456,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":379461,"byte_end":379473,"line_start":548,"line_end":548,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":379478,"byte_end":379481,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ Panics if the new allocation size overflows `usize`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":379486,"byte_end":379542,"line_start":550,"line_end":550,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":379547,"byte_end":379550,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":379555,"byte_end":379569,"line_start":552,"line_end":552,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":379574,"byte_end":379577,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":379582,"byte_end":379589,"line_start":554,"line_end":554,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":379594,"byte_end":379621,"line_start":555,"line_end":555,"column_start":5,"column_end":32}},{"value":"/ let mut set: HashSet<i32> = HashSet::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":379626,"byte_end":379673,"line_start":556,"line_end":556,"column_start":5,"column_end":52}},{"value":"/ set.reserve(10);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":379678,"byte_end":379698,"line_start":557,"line_end":557,"column_start":5,"column_end":25}},{"value":"/ assert!(set.capacity() >= 10);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":379703,"byte_end":379737,"line_start":558,"line_end":558,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":379742,"byte_end":379749,"line_start":559,"line_end":559,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":379790,"byte_end":379796,"line_start":560,"line_end":560,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1787},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":380525,"byte_end":380536,"line_start":582,"line_end":582,"column_start":12,"column_end":23},"name":"try_reserve","qualname":"<HashSet<T, S, A>>::try_reserve","value":"pub fn try_reserve(&mut Self, usize) -> Result<(), TryReserveError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to reserve capacity for at least `additional` more elements to be inserted\n in the given `HashSet<K,V>`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[{"value":"/ Tries to reserve capacity for at least `additional` more elements to be inserted","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":379899,"byte_end":379983,"line_start":565,"line_end":565,"column_start":5,"column_end":89}},{"value":"/ in the given `HashSet<K,V>`. The collection may reserve more space to avoid","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":379988,"byte_end":380067,"line_start":566,"line_end":566,"column_start":5,"column_end":84}},{"value":"/ frequent reallocations.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":380072,"byte_end":380099,"line_start":567,"line_end":567,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":380104,"byte_end":380107,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":380112,"byte_end":380124,"line_start":569,"line_end":569,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":380129,"byte_end":380132,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ If the capacity overflows, or the allocator reports a failure, then an error","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":380137,"byte_end":380217,"line_start":571,"line_end":571,"column_start":5,"column_end":85}},{"value":"/ is returned.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":380222,"byte_end":380238,"line_start":572,"line_end":572,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":380243,"byte_end":380246,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":380251,"byte_end":380265,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":380270,"byte_end":380273,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":380278,"byte_end":380285,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":380290,"byte_end":380317,"line_start":577,"line_end":577,"column_start":5,"column_end":32}},{"value":"/ let mut set: HashSet<i32> = HashSet::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":380322,"byte_end":380369,"line_start":578,"line_end":578,"column_start":5,"column_end":52}},{"value":"/ set.try_reserve(10).expect(\"why is the test harness OOMing on 10 bytes?\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":380374,"byte_end":380452,"line_start":579,"line_end":579,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":380457,"byte_end":380464,"line_start":580,"line_end":580,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":380505,"byte_end":380511,"line_start":581,"line_end":581,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1788},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":381233,"byte_end":381246,"line_start":603,"line_end":603,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<HashSet<T, S, A>>::shrink_to_fit","value":"pub fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the set as much as possible. It will drop\n down as much as possible while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the set as much as possible. It will drop","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":380652,"byte_end":380721,"line_start":586,"line_end":586,"column_start":5,"column_end":74}},{"value":"/ down as much as possible while maintaining the internal rules","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":380726,"byte_end":380791,"line_start":587,"line_end":587,"column_start":5,"column_end":70}},{"value":"/ and possibly leaving some space in accordance with the resize policy.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":380796,"byte_end":380869,"line_start":588,"line_end":588,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":380874,"byte_end":380877,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":380882,"byte_end":380896,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":380901,"byte_end":380904,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":380909,"byte_end":380916,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":380921,"byte_end":380948,"line_start":593,"line_end":593,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":380953,"byte_end":380956,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ let mut set = HashSet::with_capacity(100);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":380961,"byte_end":381007,"line_start":595,"line_end":595,"column_start":5,"column_end":51}},{"value":"/ set.insert(1);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":381012,"byte_end":381030,"line_start":596,"line_end":596,"column_start":5,"column_end":23}},{"value":"/ set.insert(2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":381035,"byte_end":381053,"line_start":597,"line_end":597,"column_start":5,"column_end":23}},{"value":"/ assert!(set.capacity() >= 100);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":381058,"byte_end":381093,"line_start":598,"line_end":598,"column_start":5,"column_end":40}},{"value":"/ set.shrink_to_fit();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":381098,"byte_end":381122,"line_start":599,"line_end":599,"column_start":5,"column_end":29}},{"value":"/ assert!(set.capacity() >= 2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":381127,"byte_end":381160,"line_start":600,"line_end":600,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":381165,"byte_end":381172,"line_start":601,"line_end":601,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":381213,"byte_end":381219,"line_start":602,"line_end":602,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1789},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":382063,"byte_end":382072,"line_start":629,"line_end":629,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<HashSet<T, S, A>>::shrink_to","value":"pub fn shrink_to(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the set with a lower limit. It will drop\n down no lower than the supplied limit while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the set with a lower limit. It will drop","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":381305,"byte_end":381373,"line_start":607,"line_end":607,"column_start":5,"column_end":73}},{"value":"/ down no lower than the supplied limit while maintaining the internal rules","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":381378,"byte_end":381456,"line_start":608,"line_end":608,"column_start":5,"column_end":83}},{"value":"/ and possibly leaving some space in accordance with the resize policy.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":381461,"byte_end":381534,"line_start":609,"line_end":609,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":381539,"byte_end":381542,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ Panics if the current capacity is smaller than the supplied","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":381547,"byte_end":381610,"line_start":611,"line_end":611,"column_start":5,"column_end":68}},{"value":"/ minimum capacity.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":381615,"byte_end":381636,"line_start":612,"line_end":612,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":381641,"byte_end":381644,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":381649,"byte_end":381663,"line_start":614,"line_end":614,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":381668,"byte_end":381671,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":381676,"byte_end":381683,"line_start":616,"line_end":616,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":381688,"byte_end":381715,"line_start":617,"line_end":617,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":381720,"byte_end":381723,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ let mut set = HashSet::with_capacity(100);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":381728,"byte_end":381774,"line_start":619,"line_end":619,"column_start":5,"column_end":51}},{"value":"/ set.insert(1);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":381779,"byte_end":381797,"line_start":620,"line_end":620,"column_start":5,"column_end":23}},{"value":"/ set.insert(2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":381802,"byte_end":381820,"line_start":621,"line_end":621,"column_start":5,"column_end":23}},{"value":"/ assert!(set.capacity() >= 100);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":381825,"byte_end":381860,"line_start":622,"line_end":622,"column_start":5,"column_end":40}},{"value":"/ set.shrink_to(10);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":381865,"byte_end":381887,"line_start":623,"line_end":623,"column_start":5,"column_end":27}},{"value":"/ assert!(set.capacity() >= 10);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":381892,"byte_end":381926,"line_start":624,"line_end":624,"column_start":5,"column_end":39}},{"value":"/ set.shrink_to(0);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":381931,"byte_end":381952,"line_start":625,"line_end":625,"column_start":5,"column_end":26}},{"value":"/ assert!(set.capacity() >= 2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":381957,"byte_end":381990,"line_start":626,"line_end":626,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":381995,"byte_end":382002,"line_start":627,"line_end":627,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":382043,"byte_end":382049,"line_start":628,"line_end":628,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1790},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":383015,"byte_end":383025,"line_start":657,"line_end":657,"column_start":12,"column_end":22},"name":"difference","qualname":"<HashSet<T, S, A>>::difference","value":"pub fn difference<'a>(&'a Self, &'a Self) -> Difference","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the difference,\n i.e., the values that are in `self` but not in `other`.","sig":null,"attributes":[{"value":"/ Visits the values representing the difference,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":382160,"byte_end":382210,"line_start":633,"line_end":633,"column_start":5,"column_end":55}},{"value":"/ i.e., the values that are in `self` but not in `other`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":382215,"byte_end":382274,"line_start":634,"line_end":634,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":382279,"byte_end":382282,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":382287,"byte_end":382301,"line_start":636,"line_end":636,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":382306,"byte_end":382309,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":382314,"byte_end":382321,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":382326,"byte_end":382353,"line_start":639,"line_end":639,"column_start":5,"column_end":32}},{"value":"/ let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":382358,"byte_end":382418,"line_start":640,"line_end":640,"column_start":5,"column_end":65}},{"value":"/ let b: HashSet<_> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":382423,"byte_end":382486,"line_start":641,"line_end":641,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":382491,"byte_end":382494,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ // Can be seen as `a - b`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":382499,"byte_end":382529,"line_start":643,"line_end":643,"column_start":5,"column_end":35}},{"value":"/ for x in a.difference(&b) {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":382534,"byte_end":382565,"line_start":644,"line_end":644,"column_start":5,"column_end":36}},{"value":"/     println!(\"{}\", x); // Print 1","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":382570,"byte_end":382607,"line_start":645,"line_end":645,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":382612,"byte_end":382617,"line_start":646,"line_end":646,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":382622,"byte_end":382625,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ let diff: HashSet<_> = a.difference(&b).collect();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":382630,"byte_end":382684,"line_start":648,"line_end":648,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(diff, [1].iter().collect());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":382689,"byte_end":382732,"line_start":649,"line_end":649,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":382737,"byte_end":382740,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ // Note that difference is not symmetric,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":382745,"byte_end":382790,"line_start":651,"line_end":651,"column_start":5,"column_end":50}},{"value":"/ // and `b - a` means something else:","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":382795,"byte_end":382835,"line_start":652,"line_end":652,"column_start":5,"column_end":45}},{"value":"/ let diff: HashSet<_> = b.difference(&a).collect();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":382840,"byte_end":382894,"line_start":653,"line_end":653,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(diff, [4].iter().collect());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":382899,"byte_end":382942,"line_start":654,"line_end":654,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":382947,"byte_end":382954,"line_start":655,"line_end":655,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":382995,"byte_end":383001,"line_start":656,"line_end":656,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1792},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":383977,"byte_end":383997,"line_start":686,"line_end":686,"column_start":12,"column_end":32},"name":"symmetric_difference","qualname":"<HashSet<T, S, A>>::symmetric_difference","value":"pub fn symmetric_difference<'a>(&'a Self, &'a Self) -> SymmetricDifference","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the symmetric difference,\n i.e., the values that are in `self` or in `other` but not in both.","sig":null,"attributes":[{"value":"/ Visits the values representing the symmetric difference,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":383178,"byte_end":383238,"line_start":664,"line_end":664,"column_start":5,"column_end":65}},{"value":"/ i.e., the values that are in `self` or in `other` but not in both.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":383243,"byte_end":383313,"line_start":665,"line_end":665,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":383318,"byte_end":383321,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":383326,"byte_end":383340,"line_start":667,"line_end":667,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":383345,"byte_end":383348,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":383353,"byte_end":383360,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":383365,"byte_end":383392,"line_start":670,"line_end":670,"column_start":5,"column_end":32}},{"value":"/ let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":383397,"byte_end":383457,"line_start":671,"line_end":671,"column_start":5,"column_end":65}},{"value":"/ let b: HashSet<_> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":383462,"byte_end":383525,"line_start":672,"line_end":672,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":383530,"byte_end":383533,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ // Print 1, 4 in arbitrary order.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":383538,"byte_end":383575,"line_start":674,"line_end":674,"column_start":5,"column_end":42}},{"value":"/ for x in a.symmetric_difference(&b) {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":383580,"byte_end":383621,"line_start":675,"line_end":675,"column_start":5,"column_end":46}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":383626,"byte_end":383652,"line_start":676,"line_end":676,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":383657,"byte_end":383662,"line_start":677,"line_end":677,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":383667,"byte_end":383670,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ let diff1: HashSet<_> = a.symmetric_difference(&b).collect();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":383675,"byte_end":383740,"line_start":679,"line_end":679,"column_start":5,"column_end":70}},{"value":"/ let diff2: HashSet<_> = b.symmetric_difference(&a).collect();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":383745,"byte_end":383810,"line_start":680,"line_end":680,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":383815,"byte_end":383818,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(diff1, diff2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":383823,"byte_end":383852,"line_start":682,"line_end":682,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(diff1, [1, 4].iter().collect());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":383857,"byte_end":383904,"line_start":683,"line_end":683,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":383909,"byte_end":383916,"line_start":684,"line_end":684,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":383957,"byte_end":383963,"line_start":685,"line_end":685,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1794},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":384854,"byte_end":384866,"line_start":711,"line_end":711,"column_start":12,"column_end":24},"name":"intersection","qualname":"<HashSet<T, S, A>>::intersection","value":"pub fn intersection<'a>(&'a Self, &'a Self) -> Intersection","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the intersection,\n i.e., the values that are both in `self` and `other`.","sig":null,"attributes":[{"value":"/ Visits the values representing the intersection,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":384190,"byte_end":384242,"line_start":692,"line_end":692,"column_start":5,"column_end":57}},{"value":"/ i.e., the values that are both in `self` and `other`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":384247,"byte_end":384304,"line_start":693,"line_end":693,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":384309,"byte_end":384312,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":384317,"byte_end":384331,"line_start":695,"line_end":695,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":384336,"byte_end":384339,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":384344,"byte_end":384351,"line_start":697,"line_end":697,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":384356,"byte_end":384383,"line_start":698,"line_end":698,"column_start":5,"column_end":32}},{"value":"/ let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":384388,"byte_end":384448,"line_start":699,"line_end":699,"column_start":5,"column_end":65}},{"value":"/ let b: HashSet<_> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":384453,"byte_end":384516,"line_start":700,"line_end":700,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":384521,"byte_end":384524,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ // Print 2, 3 in arbitrary order.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":384529,"byte_end":384566,"line_start":702,"line_end":702,"column_start":5,"column_end":42}},{"value":"/ for x in a.intersection(&b) {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":384571,"byte_end":384604,"line_start":703,"line_end":703,"column_start":5,"column_end":38}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":384609,"byte_end":384635,"line_start":704,"line_end":704,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":384640,"byte_end":384645,"line_start":705,"line_end":705,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":384650,"byte_end":384653,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ let intersection: HashSet<_> = a.intersection(&b).collect();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":384658,"byte_end":384722,"line_start":707,"line_end":707,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(intersection, [2, 3].iter().collect());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":384727,"byte_end":384781,"line_start":708,"line_end":708,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":384786,"byte_end":384793,"line_start":709,"line_end":709,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":384834,"byte_end":384840,"line_start":710,"line_end":710,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1796},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":385827,"byte_end":385832,"line_start":742,"line_end":742,"column_start":12,"column_end":17},"name":"union","qualname":"<HashSet<T, S, A>>::union","value":"pub fn union<'a>(&'a Self, &'a Self) -> Union","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the union,\n i.e., all the values in `self` or `other`, without duplicates.","sig":null,"attributes":[{"value":"/ Visits the values representing the union,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":385177,"byte_end":385222,"line_start":723,"line_end":723,"column_start":5,"column_end":50}},{"value":"/ i.e., all the values in `self` or `other`, without duplicates.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":385227,"byte_end":385293,"line_start":724,"line_end":724,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":385298,"byte_end":385301,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":385306,"byte_end":385320,"line_start":726,"line_end":726,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":385325,"byte_end":385328,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":385333,"byte_end":385340,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":385345,"byte_end":385372,"line_start":729,"line_end":729,"column_start":5,"column_end":32}},{"value":"/ let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":385377,"byte_end":385437,"line_start":730,"line_end":730,"column_start":5,"column_end":65}},{"value":"/ let b: HashSet<_> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":385442,"byte_end":385505,"line_start":731,"line_end":731,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":385510,"byte_end":385513,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ // Print 1, 2, 3, 4 in arbitrary order.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":385518,"byte_end":385561,"line_start":733,"line_end":733,"column_start":5,"column_end":48}},{"value":"/ for x in a.union(&b) {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":385566,"byte_end":385592,"line_start":734,"line_end":734,"column_start":5,"column_end":31}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":385597,"byte_end":385623,"line_start":735,"line_end":735,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":385628,"byte_end":385633,"line_start":736,"line_end":736,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":385638,"byte_end":385641,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ let union: HashSet<_> = a.union(&b).collect();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":385646,"byte_end":385696,"line_start":738,"line_end":738,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(union, [1, 2, 3, 4].iter().collect());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":385701,"byte_end":385754,"line_start":739,"line_end":739,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":385759,"byte_end":385766,"line_start":740,"line_end":740,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":385807,"byte_end":385813,"line_start":741,"line_end":741,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1798},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":386990,"byte_end":386998,"line_start":774,"line_end":774,"column_start":12,"column_end":20},"name":"contains","qualname":"<HashSet<T, S, A>>::contains","value":"pub fn contains<Q: ?Sized>(&Self, &Q) -> bool where T: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains a value.","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains a value.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":386310,"byte_end":386357,"line_start":755,"line_end":755,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":386362,"byte_end":386365,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type, but","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":386370,"byte_end":386437,"line_start":757,"line_end":757,"column_start":5,"column_end":72}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":386442,"byte_end":386509,"line_start":758,"line_end":758,"column_start":5,"column_end":72}},{"value":"/ the value type.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":386514,"byte_end":386533,"line_start":759,"line_end":759,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":386538,"byte_end":386541,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":386546,"byte_end":386560,"line_start":761,"line_end":761,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":386565,"byte_end":386568,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":386573,"byte_end":386580,"line_start":763,"line_end":763,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":386585,"byte_end":386612,"line_start":764,"line_end":764,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":386617,"byte_end":386620,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ let set: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":386625,"byte_end":386687,"line_start":766,"line_end":766,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(set.contains(&1), true);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":386692,"byte_end":386731,"line_start":767,"line_end":767,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(set.contains(&4), false);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":386736,"byte_end":386776,"line_start":768,"line_end":768,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":386781,"byte_end":386788,"line_start":769,"line_end":769,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":386793,"byte_end":386796,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":386801,"byte_end":386860,"line_start":771,"line_end":771,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":386865,"byte_end":386929,"line_start":772,"line_end":772,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":386970,"byte_end":386976,"line_start":773,"line_end":773,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1800},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":387860,"byte_end":387863,"line_start":801,"line_end":801,"column_start":12,"column_end":15},"name":"get","qualname":"<HashSet<T, S, A>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&T> where T: Borrow<Q>, Q: Hash +\nEq","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value in the set, if any, that is equal to the given value.","sig":null,"attributes":[{"value":"/ Returns a reference to the value in the set, if any, that is equal to the given value.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":387144,"byte_end":387234,"line_start":782,"line_end":782,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":387239,"byte_end":387242,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type, but","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":387247,"byte_end":387314,"line_start":784,"line_end":784,"column_start":5,"column_end":72}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":387319,"byte_end":387386,"line_start":785,"line_end":785,"column_start":5,"column_end":72}},{"value":"/ the value type.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":387391,"byte_end":387410,"line_start":786,"line_end":786,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":387415,"byte_end":387418,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":387423,"byte_end":387437,"line_start":788,"line_end":788,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":387442,"byte_end":387445,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":387450,"byte_end":387457,"line_start":790,"line_end":790,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":387462,"byte_end":387489,"line_start":791,"line_end":791,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":387494,"byte_end":387497,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ let set: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":387502,"byte_end":387564,"line_start":793,"line_end":793,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(set.get(&2), Some(&2));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":387569,"byte_end":387607,"line_start":794,"line_end":794,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(set.get(&4), None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":387612,"byte_end":387646,"line_start":795,"line_end":795,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":387651,"byte_end":387658,"line_start":796,"line_end":796,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":387663,"byte_end":387666,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":387671,"byte_end":387730,"line_start":798,"line_end":798,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":387735,"byte_end":387799,"line_start":799,"line_end":799,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":387840,"byte_end":387846,"line_start":800,"line_end":800,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1802},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":388692,"byte_end":388705,"line_start":828,"line_end":828,"column_start":12,"column_end":25},"name":"get_or_insert","qualname":"<HashSet<T, S, A>>::get_or_insert","value":"pub fn get_or_insert(&mut Self, T) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Inserts the given `value` into the set if it is not present, then\n returns a reference to the value in the set.","sig":null,"attributes":[{"value":"/ Inserts the given `value` into the set if it is not present, then","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":388155,"byte_end":388224,"line_start":813,"line_end":813,"column_start":5,"column_end":74}},{"value":"/ returns a reference to the value in the set.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":388229,"byte_end":388277,"line_start":814,"line_end":814,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":388282,"byte_end":388285,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":388290,"byte_end":388304,"line_start":816,"line_end":816,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":388309,"byte_end":388312,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":388317,"byte_end":388324,"line_start":818,"line_end":818,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":388329,"byte_end":388356,"line_start":819,"line_end":819,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":388361,"byte_end":388364,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":388369,"byte_end":388435,"line_start":821,"line_end":821,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(set.len(), 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":388440,"byte_end":388469,"line_start":822,"line_end":822,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(set.get_or_insert(2), &2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":388474,"byte_end":388515,"line_start":823,"line_end":823,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(set.get_or_insert(100), &100);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":388520,"byte_end":388565,"line_start":824,"line_end":824,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(set.len(), 4); // 100 was inserted","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":388570,"byte_end":388619,"line_start":825,"line_end":825,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":388624,"byte_end":388631,"line_start":826,"line_end":826,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":388672,"byte_end":388678,"line_start":827,"line_end":827,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1803},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":389696,"byte_end":389715,"line_start":857,"line_end":857,"column_start":12,"column_end":31},"name":"get_or_insert_owned","qualname":"<HashSet<T, S, A>>::get_or_insert_owned","value":"pub fn get_or_insert_owned<Q: ?Sized>(&mut Self, &Q) -> &T where T: Borrow<Q>,\nQ: Hash + Eq + ToOwned<Owned = T>","parent":null,"children":[],"decl_id":null,"docs":" Inserts an owned copy of the given `value` into the set if it is not\n present, then returns a reference to the value in the set.","sig":null,"attributes":[{"value":"/ Inserts an owned copy of the given `value` into the set if it is not","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":389060,"byte_end":389132,"line_start":838,"line_end":838,"column_start":5,"column_end":77}},{"value":"/ present, then returns a reference to the value in the set.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":389137,"byte_end":389199,"line_start":839,"line_end":839,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":389204,"byte_end":389207,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":389212,"byte_end":389226,"line_start":841,"line_end":841,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":389231,"byte_end":389234,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":389239,"byte_end":389246,"line_start":843,"line_end":843,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":389251,"byte_end":389278,"line_start":844,"line_end":844,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":389283,"byte_end":389286,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<String> = [\"cat\", \"dog\", \"horse\"]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":389291,"byte_end":389349,"line_start":846,"line_end":846,"column_start":5,"column_end":63}},{"value":"/     .iter().map(|&pet| pet.to_owned()).collect();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":389354,"byte_end":389407,"line_start":847,"line_end":847,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":389412,"byte_end":389415,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.len(), 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":389420,"byte_end":389449,"line_start":849,"line_end":849,"column_start":5,"column_end":34}},{"value":"/ for &pet in &[\"cat\", \"dog\", \"fish\"] {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":389454,"byte_end":389495,"line_start":850,"line_end":850,"column_start":5,"column_end":46}},{"value":"/     let value = set.get_or_insert_owned(pet);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":389500,"byte_end":389549,"line_start":851,"line_end":851,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(value, pet);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":389554,"byte_end":389585,"line_start":852,"line_end":852,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":389590,"byte_end":389595,"line_start":853,"line_end":853,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(set.len(), 4); // a new \"fish\" was inserted","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":389600,"byte_end":389658,"line_start":854,"line_end":854,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":389663,"byte_end":389670,"line_start":855,"line_end":855,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":389675,"byte_end":389684,"line_start":856,"line_end":856,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1806},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":390872,"byte_end":390890,"line_start":890,"line_end":890,"column_start":12,"column_end":30},"name":"get_or_insert_with","qualname":"<HashSet<T, S, A>>::get_or_insert_with","value":"pub fn get_or_insert_with<Q: ?Sized, F>(&mut Self, &Q, F) -> &T where\nT: Borrow<Q>, Q: Hash + Eq, F: FnOnce(&Q) -> T","parent":null,"children":[],"decl_id":null,"docs":" Inserts a value computed from `f` into the set if the given `value` is\n not present, then returns a reference to the value in the set.","sig":null,"attributes":[{"value":"/ Inserts a value computed from `f` into the set if the given `value` is","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":390181,"byte_end":390255,"line_start":871,"line_end":871,"column_start":5,"column_end":79}},{"value":"/ not present, then returns a reference to the value in the set.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":390260,"byte_end":390326,"line_start":872,"line_end":872,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":390331,"byte_end":390334,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":390339,"byte_end":390353,"line_start":874,"line_end":874,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":390358,"byte_end":390361,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":390366,"byte_end":390373,"line_start":876,"line_end":876,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":390378,"byte_end":390405,"line_start":877,"line_end":877,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":390410,"byte_end":390413,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<String> = [\"cat\", \"dog\", \"horse\"]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":390418,"byte_end":390476,"line_start":879,"line_end":879,"column_start":5,"column_end":63}},{"value":"/     .iter().map(|&pet| pet.to_owned()).collect();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":390481,"byte_end":390534,"line_start":880,"line_end":880,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":390539,"byte_end":390542,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.len(), 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":390547,"byte_end":390576,"line_start":882,"line_end":882,"column_start":5,"column_end":34}},{"value":"/ for &pet in &[\"cat\", \"dog\", \"fish\"] {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":390581,"byte_end":390622,"line_start":883,"line_end":883,"column_start":5,"column_end":46}},{"value":"/     let value = set.get_or_insert_with(pet, str::to_owned);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":390627,"byte_end":390690,"line_start":884,"line_end":884,"column_start":5,"column_end":68}},{"value":"/     assert_eq!(value, pet);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":390695,"byte_end":390726,"line_start":885,"line_end":885,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":390731,"byte_end":390736,"line_start":886,"line_end":886,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(set.len(), 4); // a new \"fish\" was inserted","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":390741,"byte_end":390799,"line_start":887,"line_end":887,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":390804,"byte_end":390811,"line_start":888,"line_end":888,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":390852,"byte_end":390858,"line_start":889,"line_end":889,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1810},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":392687,"byte_end":392692,"line_start":939,"line_end":939,"column_start":12,"column_end":17},"name":"entry","qualname":"<HashSet<T, S, A>>::entry","value":"pub fn entry(&mut Self, T) -> Entry<, T, S, A>","parent":null,"children":[],"decl_id":null,"docs":" Gets the given value's corresponding entry in the set for in-place manipulation.","sig":null,"attributes":[{"value":"/ Gets the given value's corresponding entry in the set for in-place manipulation.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":391364,"byte_end":391448,"line_start":905,"line_end":905,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":391453,"byte_end":391456,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":391461,"byte_end":391475,"line_start":907,"line_end":907,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":391480,"byte_end":391483,"line_start":908,"line_end":908,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":391488,"byte_end":391495,"line_start":909,"line_end":909,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":391500,"byte_end":391527,"line_start":910,"line_end":910,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_set::Entry::*;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":391532,"byte_end":391570,"line_start":911,"line_end":911,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":391575,"byte_end":391578,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ let mut singles = HashSet::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":391583,"byte_end":391620,"line_start":913,"line_end":913,"column_start":5,"column_end":42}},{"value":"/ let mut dupes = HashSet::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":391625,"byte_end":391660,"line_start":914,"line_end":914,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":391665,"byte_end":391668,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ for ch in \"a short treatise on fungi\".chars() {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":391673,"byte_end":391724,"line_start":916,"line_end":916,"column_start":5,"column_end":56}},{"value":"/     if let Vacant(dupe_entry) = dupes.entry(ch) {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":391729,"byte_end":391782,"line_start":917,"line_end":917,"column_start":5,"column_end":58}},{"value":"/         // We haven't already seen a duplicate, so","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":391787,"byte_end":391841,"line_start":918,"line_end":918,"column_start":5,"column_end":59}},{"value":"/         // check if we've at least seen it once.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":391846,"byte_end":391898,"line_start":919,"line_end":919,"column_start":5,"column_end":57}},{"value":"/         match singles.entry(ch) {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":391903,"byte_end":391940,"line_start":920,"line_end":920,"column_start":5,"column_end":42}},{"value":"/             Vacant(single_entry) => {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":391945,"byte_end":391986,"line_start":921,"line_end":921,"column_start":5,"column_end":46}},{"value":"/                 // We found a new character for the first time.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":391991,"byte_end":392058,"line_start":922,"line_end":922,"column_start":5,"column_end":72}},{"value":"/                 single_entry.insert()","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":392063,"byte_end":392104,"line_start":923,"line_end":923,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":392109,"byte_end":392126,"line_start":924,"line_end":924,"column_start":5,"column_end":22}},{"value":"/             Occupied(single_entry) => {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":392131,"byte_end":392174,"line_start":925,"line_end":925,"column_start":5,"column_end":48}},{"value":"/                 // We've already seen this once, \"move\" it to dupes.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":392179,"byte_end":392251,"line_start":926,"line_end":926,"column_start":5,"column_end":77}},{"value":"/                 single_entry.remove();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":392256,"byte_end":392298,"line_start":927,"line_end":927,"column_start":5,"column_end":47}},{"value":"/                 dupe_entry.insert();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":392303,"byte_end":392343,"line_start":928,"line_end":928,"column_start":5,"column_end":45}},{"value":"/             }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":392348,"byte_end":392365,"line_start":929,"line_end":929,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":392370,"byte_end":392383,"line_start":930,"line_end":930,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":392388,"byte_end":392397,"line_start":931,"line_end":931,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":392402,"byte_end":392407,"line_start":932,"line_end":932,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":392412,"byte_end":392415,"line_start":933,"line_end":933,"column_start":5,"column_end":8}},{"value":"/ assert!(!singles.contains(&'t') && dupes.contains(&'t'));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":392420,"byte_end":392481,"line_start":934,"line_end":934,"column_start":5,"column_end":66}},{"value":"/ assert!(singles.contains(&'u') && !dupes.contains(&'u'));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":392486,"byte_end":392547,"line_start":935,"line_end":935,"column_start":5,"column_end":66}},{"value":"/ assert!(!singles.contains(&'v') && !dupes.contains(&'v'));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":392552,"byte_end":392614,"line_start":936,"line_end":936,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":392619,"byte_end":392626,"line_start":937,"line_end":937,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":392667,"byte_end":392673,"line_start":938,"line_end":938,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1811},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":393507,"byte_end":393518,"line_start":963,"line_end":963,"column_start":12,"column_end":23},"name":"is_disjoint","qualname":"<HashSet<T, S, A>>::is_disjoint","value":"pub fn is_disjoint(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` has no elements in common with `other`.\n This is equivalent to checking for an empty intersection.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` has no elements in common with `other`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":392975,"byte_end":393043,"line_start":946,"line_end":946,"column_start":5,"column_end":73}},{"value":"/ This is equivalent to checking for an empty intersection.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":393048,"byte_end":393109,"line_start":947,"line_end":947,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":393114,"byte_end":393117,"line_start":948,"line_end":948,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":393122,"byte_end":393136,"line_start":949,"line_end":949,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":393141,"byte_end":393144,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":393149,"byte_end":393156,"line_start":951,"line_end":951,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":393161,"byte_end":393188,"line_start":952,"line_end":952,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":393193,"byte_end":393196,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/ let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":393201,"byte_end":393261,"line_start":954,"line_end":954,"column_start":5,"column_end":65}},{"value":"/ let mut b = HashSet::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":393266,"byte_end":393297,"line_start":955,"line_end":955,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":393302,"byte_end":393305,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.is_disjoint(&b), true);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":393310,"byte_end":393350,"line_start":957,"line_end":957,"column_start":5,"column_end":45}},{"value":"/ b.insert(4);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":393355,"byte_end":393371,"line_start":958,"line_end":958,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(a.is_disjoint(&b), true);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":393376,"byte_end":393416,"line_start":959,"line_end":959,"column_start":5,"column_end":45}},{"value":"/ b.insert(1);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":393421,"byte_end":393437,"line_start":960,"line_end":960,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(a.is_disjoint(&b), false);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":393442,"byte_end":393483,"line_start":961,"line_end":961,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":393488,"byte_end":393495,"line_start":962,"line_end":962,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1813},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":394140,"byte_end":394149,"line_start":984,"line_end":984,"column_start":12,"column_end":21},"name":"is_subset","qualname":"<HashSet<T, S, A>>::is_subset","value":"pub fn is_subset(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set is a subset of another,\n i.e., `other` contains at least all the values in `self`.","sig":null,"attributes":[{"value":"/ Returns `true` if the set is a subset of another,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":393609,"byte_end":393662,"line_start":967,"line_end":967,"column_start":5,"column_end":58}},{"value":"/ i.e., `other` contains at least all the values in `self`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":393667,"byte_end":393728,"line_start":968,"line_end":968,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":393733,"byte_end":393736,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":393741,"byte_end":393755,"line_start":970,"line_end":970,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":393760,"byte_end":393763,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":393768,"byte_end":393775,"line_start":972,"line_end":972,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":393780,"byte_end":393807,"line_start":973,"line_end":973,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":393812,"byte_end":393815,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ let sup: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":393820,"byte_end":393882,"line_start":975,"line_end":975,"column_start":5,"column_end":67}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":393887,"byte_end":393920,"line_start":976,"line_end":976,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":393925,"byte_end":393928,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.is_subset(&sup), true);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":393933,"byte_end":393975,"line_start":978,"line_end":978,"column_start":5,"column_end":47}},{"value":"/ set.insert(2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":393980,"byte_end":393998,"line_start":979,"line_end":979,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.is_subset(&sup), true);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":394003,"byte_end":394045,"line_start":980,"line_end":980,"column_start":5,"column_end":47}},{"value":"/ set.insert(4);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":394050,"byte_end":394068,"line_start":981,"line_end":981,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.is_subset(&sup), false);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":394073,"byte_end":394116,"line_start":982,"line_end":982,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":394121,"byte_end":394128,"line_start":983,"line_end":983,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1815},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":394893,"byte_end":394904,"line_start":1009,"line_end":1009,"column_start":12,"column_end":23},"name":"is_superset","qualname":"<HashSet<T, S, A>>::is_superset","value":"pub fn is_superset(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set is a superset of another,\n i.e., `self` contains at least all the values in `other`.","sig":null,"attributes":[{"value":"/ Returns `true` if the set is a superset of another,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":394268,"byte_end":394323,"line_start":988,"line_end":988,"column_start":5,"column_end":60}},{"value":"/ i.e., `self` contains at least all the values in `other`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":394328,"byte_end":394389,"line_start":989,"line_end":989,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":394394,"byte_end":394397,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":394402,"byte_end":394416,"line_start":991,"line_end":991,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":394421,"byte_end":394424,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":394429,"byte_end":394436,"line_start":993,"line_end":993,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":394441,"byte_end":394468,"line_start":994,"line_end":994,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":394473,"byte_end":394476,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ let sub: HashSet<_> = [1, 2].iter().cloned().collect();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":394481,"byte_end":394540,"line_start":996,"line_end":996,"column_start":5,"column_end":64}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":394545,"byte_end":394578,"line_start":997,"line_end":997,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":394583,"byte_end":394586,"line_start":998,"line_end":998,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.is_superset(&sub), false);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":394591,"byte_end":394636,"line_start":999,"line_end":999,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":394641,"byte_end":394644,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ set.insert(0);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":394649,"byte_end":394667,"line_start":1001,"line_end":1001,"column_start":5,"column_end":23}},{"value":"/ set.insert(1);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":394672,"byte_end":394690,"line_start":1002,"line_end":1002,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.is_superset(&sub), false);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":394695,"byte_end":394740,"line_start":1003,"line_end":1003,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":394745,"byte_end":394748,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/ set.insert(2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":394753,"byte_end":394771,"line_start":1005,"line_end":1005,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.is_superset(&sub), true);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":394776,"byte_end":394820,"line_start":1006,"line_end":1006,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":394825,"byte_end":394832,"line_start":1007,"line_end":1007,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":394873,"byte_end":394879,"line_start":1008,"line_end":1008,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1816},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":395485,"byte_end":395491,"line_start":1031,"line_end":1031,"column_start":12,"column_end":18},"name":"insert","qualname":"<HashSet<T, S, A>>::insert","value":"pub fn insert(&mut Self, T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to the set.","sig":null,"attributes":[{"value":"/ Adds a value to the set.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":394977,"byte_end":395005,"line_start":1013,"line_end":1013,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":395010,"byte_end":395013,"line_start":1014,"line_end":1014,"column_start":5,"column_end":8}},{"value":"/ If the set did not have this value present, `true` is returned.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":395018,"byte_end":395085,"line_start":1015,"line_end":1015,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":395090,"byte_end":395093,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ If the set did have this value present, `false` is returned.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":395098,"byte_end":395162,"line_start":1017,"line_end":1017,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":395167,"byte_end":395170,"line_start":1018,"line_end":1018,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":395175,"byte_end":395189,"line_start":1019,"line_end":1019,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":395194,"byte_end":395197,"line_start":1020,"line_end":1020,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":395202,"byte_end":395209,"line_start":1021,"line_end":1021,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":395214,"byte_end":395241,"line_start":1022,"line_end":1022,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":395246,"byte_end":395249,"line_start":1023,"line_end":1023,"column_start":5,"column_end":8}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":395254,"byte_end":395287,"line_start":1024,"line_end":1024,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":395292,"byte_end":395295,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.insert(2), true);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":395300,"byte_end":395336,"line_start":1026,"line_end":1026,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(set.insert(2), false);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":395341,"byte_end":395378,"line_start":1027,"line_end":1027,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(set.len(), 1);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":395383,"byte_end":395412,"line_start":1028,"line_end":1028,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":395417,"byte_end":395424,"line_start":1029,"line_end":1029,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":395465,"byte_end":395471,"line_start":1030,"line_end":1030,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1817},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":396531,"byte_end":396554,"line_start":1055,"line_end":1055,"column_start":12,"column_end":35},"name":"insert_unique_unchecked","qualname":"<HashSet<T, S, A>>::insert_unique_unchecked","value":"pub fn insert_unique_unchecked(&mut Self, T) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Insert a value the set without checking if the value already exists in the set.","sig":null,"attributes":[{"value":"/ Insert a value the set without checking if the value already exists in the set.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":395579,"byte_end":395662,"line_start":1035,"line_end":1035,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":395667,"byte_end":395670,"line_start":1036,"line_end":1036,"column_start":5,"column_end":8}},{"value":"/ Returns a reference to the value just inserted.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":395675,"byte_end":395726,"line_start":1037,"line_end":1037,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":395731,"byte_end":395734,"line_start":1038,"line_end":1038,"column_start":5,"column_end":8}},{"value":"/ This operation is safe if a value does not exist in the set.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":395739,"byte_end":395803,"line_start":1039,"line_end":1039,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":395808,"byte_end":395811,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ However, if a value exists in the set already, the behavior is unspecified:","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":395816,"byte_end":395895,"line_start":1041,"line_end":1041,"column_start":5,"column_end":84}},{"value":"/ this operation may panic, loop forever, or any following operation with the set","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":395900,"byte_end":395983,"line_start":1042,"line_end":1042,"column_start":5,"column_end":88}},{"value":"/ may panic, loop forever or return arbitrary result.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":395988,"byte_end":396043,"line_start":1043,"line_end":1043,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":396048,"byte_end":396051,"line_start":1044,"line_end":1044,"column_start":5,"column_end":8}},{"value":"/ That said, this operation (and following operations) are guaranteed to","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":396056,"byte_end":396130,"line_start":1045,"line_end":1045,"column_start":5,"column_end":79}},{"value":"/ not violate memory safety.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":396135,"byte_end":396165,"line_start":1046,"line_end":1046,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":396170,"byte_end":396173,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ This operation is faster than regular insert, because it does not perform","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":396178,"byte_end":396255,"line_start":1048,"line_end":1048,"column_start":5,"column_end":82}},{"value":"/ lookup before insertion.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":396260,"byte_end":396288,"line_start":1049,"line_end":1049,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":396293,"byte_end":396296,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ This operation is useful during initial population of the set.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":396301,"byte_end":396367,"line_start":1051,"line_end":1051,"column_start":5,"column_end":71}},{"value":"/ For example, when constructing a set from another set, we know","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":396372,"byte_end":396438,"line_start":1052,"line_end":1052,"column_start":5,"column_end":71}},{"value":"/ that values are unique.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":396443,"byte_end":396470,"line_start":1053,"line_end":1053,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":396511,"byte_end":396517,"line_start":1054,"line_end":1054,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1818},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":397196,"byte_end":397203,"line_start":1075,"line_end":1075,"column_start":12,"column_end":19},"name":"replace","qualname":"<HashSet<T, S, A>>::replace","value":"pub fn replace(&mut Self, T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to the set, replacing the existing value, if any, that is equal to the given\n one. Returns the replaced value.","sig":null,"attributes":[{"value":"/ Adds a value to the set, replacing the existing value, if any, that is equal to the given","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":396649,"byte_end":396742,"line_start":1059,"line_end":1059,"column_start":5,"column_end":98}},{"value":"/ one. Returns the replaced value.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":396747,"byte_end":396783,"line_start":1060,"line_end":1060,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":396788,"byte_end":396791,"line_start":1061,"line_end":1061,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":396796,"byte_end":396810,"line_start":1062,"line_end":1062,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":396815,"byte_end":396818,"line_start":1063,"line_end":1063,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":396823,"byte_end":396830,"line_start":1064,"line_end":1064,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":396835,"byte_end":396862,"line_start":1065,"line_end":1065,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":396867,"byte_end":396870,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":396875,"byte_end":396908,"line_start":1067,"line_end":1067,"column_start":5,"column_end":38}},{"value":"/ set.insert(Vec::<i32>::new());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":396913,"byte_end":396947,"line_start":1068,"line_end":1068,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":396952,"byte_end":396955,"line_start":1069,"line_end":1069,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.get(&[][..]).unwrap().capacity(), 0);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":396960,"byte_end":397016,"line_start":1070,"line_end":1070,"column_start":5,"column_end":61}},{"value":"/ set.replace(Vec::with_capacity(10));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":397021,"byte_end":397061,"line_start":1071,"line_end":1071,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(set.get(&[][..]).unwrap().capacity(), 10);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":397066,"byte_end":397123,"line_start":1072,"line_end":1072,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":397128,"byte_end":397135,"line_start":1073,"line_end":1073,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":397176,"byte_end":397182,"line_start":1074,"line_end":1074,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1819},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":398211,"byte_end":398217,"line_start":1107,"line_end":1107,"column_start":12,"column_end":18},"name":"remove","qualname":"<HashSet<T, S, A>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> bool where T: Borrow<Q>, Q: Hash +\nEq","parent":null,"children":[],"decl_id":null,"docs":" Removes a value from the set. Returns whether the value was\n present in the set.","sig":null,"attributes":[{"value":"/ Removes a value from the set. Returns whether the value was","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":397489,"byte_end":397552,"line_start":1085,"line_end":1085,"column_start":5,"column_end":68}},{"value":"/ present in the set.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":397557,"byte_end":397580,"line_start":1086,"line_end":1086,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":397585,"byte_end":397588,"line_start":1087,"line_end":1087,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type, but","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":397593,"byte_end":397660,"line_start":1088,"line_end":1088,"column_start":5,"column_end":72}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":397665,"byte_end":397732,"line_start":1089,"line_end":1089,"column_start":5,"column_end":72}},{"value":"/ the value type.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":397737,"byte_end":397756,"line_start":1090,"line_end":1090,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":397761,"byte_end":397764,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":397769,"byte_end":397783,"line_start":1092,"line_end":1092,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":397788,"byte_end":397791,"line_start":1093,"line_end":1093,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":397796,"byte_end":397803,"line_start":1094,"line_end":1094,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":397808,"byte_end":397835,"line_start":1095,"line_end":1095,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":397840,"byte_end":397843,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":397848,"byte_end":397881,"line_start":1097,"line_end":1097,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":397886,"byte_end":397889,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ set.insert(2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":397894,"byte_end":397912,"line_start":1099,"line_end":1099,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.remove(&2), true);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":397917,"byte_end":397954,"line_start":1100,"line_end":1100,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(set.remove(&2), false);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":397959,"byte_end":397997,"line_start":1101,"line_end":1101,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":398002,"byte_end":398009,"line_start":1102,"line_end":1102,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":398014,"byte_end":398017,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":398022,"byte_end":398081,"line_start":1104,"line_end":1104,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":398086,"byte_end":398150,"line_start":1105,"line_end":1105,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":398191,"byte_end":398197,"line_start":1106,"line_end":1106,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1821},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":399087,"byte_end":399091,"line_start":1134,"line_end":1134,"column_start":12,"column_end":16},"name":"take","qualname":"<HashSet<T, S, A>>::take","value":"pub fn take<Q: ?Sized>(&mut Self, &Q) -> Option<T> where T: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value in the set, if any, that is equal to the given one.","sig":null,"attributes":[{"value":"/ Removes and returns the value in the set, if any, that is equal to the given one.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":398371,"byte_end":398456,"line_start":1115,"line_end":1115,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":398461,"byte_end":398464,"line_start":1116,"line_end":1116,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type, but","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":398469,"byte_end":398536,"line_start":1117,"line_end":1117,"column_start":5,"column_end":72}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":398541,"byte_end":398608,"line_start":1118,"line_end":1118,"column_start":5,"column_end":72}},{"value":"/ the value type.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":398613,"byte_end":398632,"line_start":1119,"line_end":1119,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":398637,"byte_end":398640,"line_start":1120,"line_end":1120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":398645,"byte_end":398659,"line_start":1121,"line_end":1121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":398664,"byte_end":398667,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":398672,"byte_end":398679,"line_start":1123,"line_end":1123,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":398684,"byte_end":398711,"line_start":1124,"line_end":1124,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":398716,"byte_end":398719,"line_start":1125,"line_end":1125,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":398724,"byte_end":398790,"line_start":1126,"line_end":1126,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(set.take(&2), Some(2));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":398795,"byte_end":398833,"line_start":1127,"line_end":1127,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(set.take(&2), None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":398838,"byte_end":398873,"line_start":1128,"line_end":1128,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":398878,"byte_end":398885,"line_start":1129,"line_end":1129,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":398890,"byte_end":398893,"line_start":1130,"line_end":1130,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":398898,"byte_end":398957,"line_start":1131,"line_end":1131,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":398962,"byte_end":399026,"line_start":1132,"line_end":1132,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":399067,"byte_end":399073,"line_start":1133,"line_end":1133,"column_start":41,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1897},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":406234,"byte_end":406238,"line_start":1423,"line_end":1423,"column_start":12,"column_end":16},"name":"Iter","qualname":"::set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1900}],"decl_id":null,"docs":" An iterator over the items of a `HashSet`.","sig":null,"attributes":[{"value":"/ An iterator over the items of a `HashSet`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":405981,"byte_end":406027,"line_start":1416,"line_end":1416,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":406028,"byte_end":406031,"line_start":1417,"line_end":1417,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`HashSet`].","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":406032,"byte_end":406099,"line_start":1418,"line_end":1418,"column_start":1,"column_end":68}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":406100,"byte_end":406135,"line_start":1419,"line_end":1419,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":406136,"byte_end":406139,"line_start":1420,"line_end":1420,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":406140,"byte_end":406176,"line_start":1421,"line_end":1421,"column_start":1,"column_end":37}},{"value":"/ [`iter`]: struct.HashSet.html#method.iter","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":406177,"byte_end":406222,"line_start":1422,"line_end":1422,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1901},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":406592,"byte_end":406600,"line_start":1434,"line_end":1434,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":1904}],"decl_id":null,"docs":" An owning iterator over the items of a `HashSet`.","sig":null,"attributes":[{"value":"/ An owning iterator over the items of a `HashSet`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":406278,"byte_end":406331,"line_start":1427,"line_end":1427,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":406332,"byte_end":406335,"line_start":1428,"line_end":1428,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_iter`] method on [`HashSet`]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":406336,"byte_end":406407,"line_start":1429,"line_end":1429,"column_start":1,"column_end":72}},{"value":"/ (provided by the `IntoIterator` trait). See its documentation for more.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":406408,"byte_end":406483,"line_start":1430,"line_end":1430,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":406484,"byte_end":406487,"line_start":1431,"line_end":1431,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":406488,"byte_end":406524,"line_start":1432,"line_end":1432,"column_start":1,"column_end":37}},{"value":"/ [`into_iter`]: struct.HashSet.html#method.into_iter","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":406525,"byte_end":406580,"line_start":1433,"line_end":1433,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1905},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":406939,"byte_end":406944,"line_start":1445,"line_end":1445,"column_start":12,"column_end":17},"name":"Drain","qualname":"::set::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":1909}],"decl_id":null,"docs":" A draining iterator over the items of a `HashSet`.","sig":null,"attributes":[{"value":"/ A draining iterator over the items of a `HashSet`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":406675,"byte_end":406729,"line_start":1438,"line_end":1438,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":406730,"byte_end":406733,"line_start":1439,"line_end":1439,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain`] method on [`HashSet`].","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":406734,"byte_end":406802,"line_start":1440,"line_end":1440,"column_start":1,"column_end":69}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":406803,"byte_end":406838,"line_start":1441,"line_end":1441,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":406839,"byte_end":406842,"line_start":1442,"line_end":1442,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":406843,"byte_end":406879,"line_start":1443,"line_end":1443,"column_start":1,"column_end":37}},{"value":"/ [`drain`]: struct.HashSet.html#method.drain","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":406880,"byte_end":406927,"line_start":1444,"line_end":1444,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":1910},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":407345,"byte_end":407356,"line_start":1456,"line_end":1456,"column_start":12,"column_end":23},"name":"DrainFilter","qualname":"::set::DrainFilter","value":"DrainFilter {  }","parent":null,"children":[{"krate":0,"index":1915},{"krate":0,"index":1916}],"decl_id":null,"docs":" A draining iterator over entries of a `HashSet` which don't satisfy the predicate `f`.","sig":null,"attributes":[{"value":"/ A draining iterator over entries of a `HashSet` which don't satisfy the predicate `f`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":407024,"byte_end":407114,"line_start":1449,"line_end":1449,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":407115,"byte_end":407118,"line_start":1450,"line_end":1450,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain_filter`] method on [`HashSet`]. See its","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":407119,"byte_end":407202,"line_start":1451,"line_end":1451,"column_start":1,"column_end":84}},{"value":"/ documentation for more.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":407203,"byte_end":407230,"line_start":1452,"line_end":1452,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":407231,"byte_end":407234,"line_start":1453,"line_end":1453,"column_start":1,"column_end":4}},{"value":"/ [`drain_filter`]: struct.HashSet.html#method.drain_filter","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":407235,"byte_end":407296,"line_start":1454,"line_end":1454,"column_start":1,"column_end":62}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":407297,"byte_end":407333,"line_start":1455,"line_end":1455,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1917},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":407792,"byte_end":407804,"line_start":1471,"line_end":1471,"column_start":12,"column_end":24},"name":"Intersection","qualname":"::set::Intersection","value":"Intersection {  }","parent":null,"children":[{"krate":0,"index":1922},{"krate":0,"index":1923}],"decl_id":null,"docs":" A lazy iterator producing elements in the intersection of `HashSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the intersection of `HashSet`s.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":407488,"byte_end":407561,"line_start":1464,"line_end":1464,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":407562,"byte_end":407565,"line_start":1465,"line_end":1465,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`intersection`] method on [`HashSet`].","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":407566,"byte_end":407641,"line_start":1466,"line_end":1466,"column_start":1,"column_end":76}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":407642,"byte_end":407677,"line_start":1467,"line_end":1467,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":407678,"byte_end":407681,"line_start":1468,"line_end":1468,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":407682,"byte_end":407718,"line_start":1469,"line_end":1469,"column_start":1,"column_end":37}},{"value":"/ [`intersection`]: struct.HashSet.html#method.intersection","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":407719,"byte_end":407780,"line_start":1470,"line_end":1470,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":1924},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":408258,"byte_end":408268,"line_start":1485,"line_end":1485,"column_start":12,"column_end":22},"name":"Difference","qualname":"::set::Difference","value":"Difference {  }","parent":null,"children":[{"krate":0,"index":1929},{"krate":0,"index":1930}],"decl_id":null,"docs":" A lazy iterator producing elements in the difference of `HashSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the difference of `HashSet`s.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":407962,"byte_end":408033,"line_start":1478,"line_end":1478,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":408034,"byte_end":408037,"line_start":1479,"line_end":1479,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`difference`] method on [`HashSet`].","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":408038,"byte_end":408111,"line_start":1480,"line_end":1480,"column_start":1,"column_end":74}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":408112,"byte_end":408147,"line_start":1481,"line_end":1481,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":408148,"byte_end":408151,"line_start":1482,"line_end":1482,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":408152,"byte_end":408188,"line_start":1483,"line_end":1483,"column_start":1,"column_end":37}},{"value":"/ [`difference`]: struct.HashSet.html#method.difference","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":408189,"byte_end":408246,"line_start":1484,"line_end":1484,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1931},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":408762,"byte_end":408781,"line_start":1499,"line_end":1499,"column_start":12,"column_end":31},"name":"SymmetricDifference","qualname":"::set::SymmetricDifference","value":"SymmetricDifference {  }","parent":null,"children":[{"krate":0,"index":1936}],"decl_id":null,"docs":" A lazy iterator producing elements in the symmetric difference of `HashSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the symmetric difference of `HashSet`s.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":408426,"byte_end":408507,"line_start":1492,"line_end":1492,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":408508,"byte_end":408511,"line_start":1493,"line_end":1493,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`symmetric_difference`] method on","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":408512,"byte_end":408582,"line_start":1494,"line_end":1494,"column_start":1,"column_end":71}},{"value":"/ [`HashSet`]. See its documentation for more.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":408583,"byte_end":408631,"line_start":1495,"line_end":1495,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":408632,"byte_end":408635,"line_start":1496,"line_end":1496,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":408636,"byte_end":408672,"line_start":1497,"line_end":1497,"column_start":1,"column_end":37}},{"value":"/ [`symmetric_difference`]: struct.HashSet.html#method.symmetric_difference","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":408673,"byte_end":408750,"line_start":1498,"line_end":1498,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1937},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":409171,"byte_end":409176,"line_start":1510,"line_end":1510,"column_start":12,"column_end":17},"name":"Union","qualname":"::set::Union","value":"Union {  }","parent":null,"children":[{"krate":0,"index":1942}],"decl_id":null,"docs":" A lazy iterator producing elements in the union of `HashSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the union of `HashSet`s.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":408895,"byte_end":408961,"line_start":1503,"line_end":1503,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":408962,"byte_end":408965,"line_start":1504,"line_end":1504,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`union`] method on [`HashSet`].","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":408966,"byte_end":409034,"line_start":1505,"line_end":1505,"column_start":1,"column_end":69}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":409035,"byte_end":409070,"line_start":1506,"line_end":1506,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":409071,"byte_end":409074,"line_start":1507,"line_end":1507,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":409075,"byte_end":409111,"line_start":1508,"line_end":1508,"column_start":1,"column_end":37}},{"value":"/ [`union`]: struct.HashSet.html#method.union","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":409112,"byte_end":409159,"line_start":1509,"line_end":1509,"column_start":1,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2123},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":420278,"byte_end":420286,"line_start":1943,"line_end":1943,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::set::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":2118},"children":[],"decl_id":null,"docs":" An occupied entry.","sig":null,"attributes":[{"value":"/ An occupied entry.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":419953,"byte_end":419975,"line_start":1930,"line_end":1930,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":419980,"byte_end":419983,"line_start":1931,"line_end":1931,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":419988,"byte_end":420002,"line_start":1932,"line_end":1932,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":420007,"byte_end":420010,"line_start":1933,"line_end":1933,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":420015,"byte_end":420022,"line_start":1934,"line_end":1934,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_set::{Entry, HashSet};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":420027,"byte_end":420073,"line_start":1935,"line_end":1935,"column_start":5,"column_end":51}},{"value":"/ let mut set: HashSet<_> = [\"a\", \"b\"].into();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":420078,"byte_end":420126,"line_start":1936,"line_end":1936,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":420131,"byte_end":420134,"line_start":1937,"line_end":1937,"column_start":5,"column_end":8}},{"value":"/ match set.entry(\"a\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":420139,"byte_end":420165,"line_start":1938,"line_end":1938,"column_start":5,"column_end":31}},{"value":"/     Entry::Vacant(_) => unreachable!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":420170,"byte_end":420213,"line_start":1939,"line_end":1939,"column_start":5,"column_end":48}},{"value":"/     Entry::Occupied(_) => { }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":420218,"byte_end":420251,"line_start":1940,"line_end":1940,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":420256,"byte_end":420261,"line_start":1941,"line_end":1941,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":420266,"byte_end":420273,"line_start":1942,"line_end":1942,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2126},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":420643,"byte_end":420649,"line_start":1958,"line_end":1958,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::set::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":2118},"children":[],"decl_id":null,"docs":" A vacant entry.","sig":null,"attributes":[{"value":"/ A vacant entry.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":420321,"byte_end":420340,"line_start":1945,"line_end":1945,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":420345,"byte_end":420348,"line_start":1946,"line_end":1946,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":420353,"byte_end":420367,"line_start":1947,"line_end":1947,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":420372,"byte_end":420375,"line_start":1948,"line_end":1948,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":420380,"byte_end":420387,"line_start":1949,"line_end":1949,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_set::{Entry, HashSet};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":420392,"byte_end":420438,"line_start":1950,"line_end":1950,"column_start":5,"column_end":51}},{"value":"/ let mut set: HashSet<&str> = HashSet::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":420443,"byte_end":420491,"line_start":1951,"line_end":1951,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":420496,"byte_end":420499,"line_start":1952,"line_end":1952,"column_start":5,"column_end":8}},{"value":"/ match set.entry(\"a\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":420504,"byte_end":420530,"line_start":1953,"line_end":1953,"column_start":5,"column_end":31}},{"value":"/     Entry::Occupied(_) => unreachable!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":420535,"byte_end":420580,"line_start":1954,"line_end":1954,"column_start":5,"column_end":50}},{"value":"/     Entry::Vacant(_) => { }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":420585,"byte_end":420616,"line_start":1955,"line_end":1955,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":420621,"byte_end":420626,"line_start":1956,"line_end":1956,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":420631,"byte_end":420638,"line_start":1957,"line_end":1957,"column_start":5,"column_end":12}}]},{"kind":"Enum","id":{"krate":0,"index":2118},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":419887,"byte_end":419892,"line_start":1926,"line_end":1926,"column_start":10,"column_end":15},"name":"Entry","qualname":"::set::Entry","value":"pub enum Entry<'a, T, S, A = Global> where A: Allocator + Clone {\n    Occupied(OccupiedEntry),\n    Vacant(VacantEntry),\n}","parent":null,"children":[{"krate":0,"index":2123},{"krate":0,"index":2126}],"decl_id":null,"docs":" A view into a single entry in a set, which may either be vacant or occupied.","sig":null,"attributes":[{"value":"/ A view into a single entry in a set, which may either be vacant or occupied.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":418751,"byte_end":418831,"line_start":1890,"line_end":1890,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":418832,"byte_end":418835,"line_start":1891,"line_end":1891,"column_start":1,"column_end":4}},{"value":"/ This `enum` is constructed from the [`entry`] method on [`HashSet`].","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":418836,"byte_end":418908,"line_start":1892,"line_end":1892,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":418909,"byte_end":418912,"line_start":1893,"line_end":1893,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":418913,"byte_end":418949,"line_start":1894,"line_end":1894,"column_start":1,"column_end":37}},{"value":"/ [`entry`]: struct.HashSet.html#method.entry","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":418950,"byte_end":418997,"line_start":1895,"line_end":1895,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":418998,"byte_end":419001,"line_start":1896,"line_end":1896,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":419002,"byte_end":419016,"line_start":1897,"line_end":1897,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":419017,"byte_end":419020,"line_start":1898,"line_end":1898,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":419021,"byte_end":419028,"line_start":1899,"line_end":1899,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::hash_set::{Entry, HashSet, OccupiedEntry};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":419029,"byte_end":419090,"line_start":1900,"line_end":1900,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":419091,"byte_end":419094,"line_start":1901,"line_end":1901,"column_start":1,"column_end":4}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":419095,"byte_end":419128,"line_start":1902,"line_end":1902,"column_start":1,"column_end":34}},{"value":"/ set.extend([\"a\", \"b\", \"c\"]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":419129,"byte_end":419161,"line_start":1903,"line_end":1903,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(set.len(), 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":419162,"byte_end":419191,"line_start":1904,"line_end":1904,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":419192,"byte_end":419195,"line_start":1905,"line_end":1905,"column_start":1,"column_end":4}},{"value":"/ // Existing value (insert)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":419196,"byte_end":419226,"line_start":1906,"line_end":1906,"column_start":1,"column_end":31}},{"value":"/ let entry: Entry<_, _> = set.entry(\"a\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":419227,"byte_end":419271,"line_start":1907,"line_end":1907,"column_start":1,"column_end":45}},{"value":"/ let _raw_o: OccupiedEntry<_, _> = entry.insert();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":419272,"byte_end":419325,"line_start":1908,"line_end":1908,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(set.len(), 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":419326,"byte_end":419355,"line_start":1909,"line_end":1909,"column_start":1,"column_end":30}},{"value":"/ // Nonexistent value (insert)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":419356,"byte_end":419389,"line_start":1910,"line_end":1910,"column_start":1,"column_end":34}},{"value":"/ set.entry(\"d\").insert();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":419390,"byte_end":419418,"line_start":1911,"line_end":1911,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":419419,"byte_end":419422,"line_start":1912,"line_end":1912,"column_start":1,"column_end":4}},{"value":"/ // Existing value (or_insert)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":419423,"byte_end":419456,"line_start":1913,"line_end":1913,"column_start":1,"column_end":34}},{"value":"/ set.entry(\"b\").or_insert();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":419457,"byte_end":419488,"line_start":1914,"line_end":1914,"column_start":1,"column_end":32}},{"value":"/ // Nonexistent value (or_insert)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":419489,"byte_end":419525,"line_start":1915,"line_end":1915,"column_start":1,"column_end":37}},{"value":"/ set.entry(\"e\").or_insert();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":419526,"byte_end":419557,"line_start":1916,"line_end":1916,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":419558,"byte_end":419561,"line_start":1917,"line_end":1917,"column_start":1,"column_end":4}},{"value":"/ println!(\"Our HashSet: {:?}\", set);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":419562,"byte_end":419601,"line_start":1918,"line_end":1918,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":419602,"byte_end":419605,"line_start":1919,"line_end":1919,"column_start":1,"column_end":4}},{"value":"/ let mut vec: Vec<_> = set.iter().copied().collect();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":419606,"byte_end":419662,"line_start":1920,"line_end":1920,"column_start":1,"column_end":57}},{"value":"/ // The `Iter` iterator produces items in arbitrary order, so the","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":419663,"byte_end":419731,"line_start":1921,"line_end":1921,"column_start":1,"column_end":69}},{"value":"/ // items must be sorted to test them against a sorted array.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":419732,"byte_end":419796,"line_start":1922,"line_end":1922,"column_start":1,"column_end":65}},{"value":"/ vec.sort_unstable();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":419797,"byte_end":419821,"line_start":1923,"line_end":1923,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(vec, [\"a\", \"b\", \"c\", \"d\", \"e\"]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":419822,"byte_end":419869,"line_start":1924,"line_end":1924,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":419870,"byte_end":419877,"line_start":1925,"line_end":1925,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2134},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":421914,"byte_end":421927,"line_start":2006,"line_end":2006,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::set::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":2139}],"decl_id":null,"docs":" A view into an occupied entry in a `HashSet`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ A view into an occupied entry in a `HashSet`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":421023,"byte_end":421072,"line_start":1970,"line_end":1970,"column_start":1,"column_end":50}},{"value":"/ It is part of the [`Entry`] enum.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":421073,"byte_end":421110,"line_start":1971,"line_end":1971,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":421111,"byte_end":421114,"line_start":1972,"line_end":1972,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":421115,"byte_end":421145,"line_start":1973,"line_end":1973,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":421146,"byte_end":421149,"line_start":1974,"line_end":1974,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":421150,"byte_end":421164,"line_start":1975,"line_end":1975,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":421165,"byte_end":421168,"line_start":1976,"line_end":1976,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":421169,"byte_end":421176,"line_start":1977,"line_end":1977,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::hash_set::{Entry, HashSet, OccupiedEntry};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":421177,"byte_end":421238,"line_start":1978,"line_end":1978,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":421239,"byte_end":421242,"line_start":1979,"line_end":1979,"column_start":1,"column_end":4}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":421243,"byte_end":421276,"line_start":1980,"line_end":1980,"column_start":1,"column_end":34}},{"value":"/ set.extend([\"a\", \"b\", \"c\"]);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":421277,"byte_end":421309,"line_start":1981,"line_end":1981,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":421310,"byte_end":421313,"line_start":1982,"line_end":1982,"column_start":1,"column_end":4}},{"value":"/ let _entry_o: OccupiedEntry<_, _> = set.entry(\"a\").insert();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":421314,"byte_end":421378,"line_start":1983,"line_end":1983,"column_start":1,"column_end":65}},{"value":"/ assert_eq!(set.len(), 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":421379,"byte_end":421408,"line_start":1984,"line_end":1984,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":421409,"byte_end":421412,"line_start":1985,"line_end":1985,"column_start":1,"column_end":4}},{"value":"/ // Existing key","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":421413,"byte_end":421432,"line_start":1986,"line_end":1986,"column_start":1,"column_end":20}},{"value":"/ match set.entry(\"a\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":421433,"byte_end":421459,"line_start":1987,"line_end":1987,"column_start":1,"column_end":27}},{"value":"/     Entry::Vacant(_) => unreachable!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":421460,"byte_end":421503,"line_start":1988,"line_end":1988,"column_start":1,"column_end":44}},{"value":"/     Entry::Occupied(view) => {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":421504,"byte_end":421538,"line_start":1989,"line_end":1989,"column_start":1,"column_end":35}},{"value":"/         assert_eq!(view.get(), &\"a\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":421539,"byte_end":421580,"line_start":1990,"line_end":1990,"column_start":1,"column_end":42}},{"value":"/     }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":421581,"byte_end":421590,"line_start":1991,"line_end":1991,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":421591,"byte_end":421596,"line_start":1992,"line_end":1992,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":421597,"byte_end":421600,"line_start":1993,"line_end":1993,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(set.len(), 3);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":421601,"byte_end":421630,"line_start":1994,"line_end":1994,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":421631,"byte_end":421634,"line_start":1995,"line_end":1995,"column_start":1,"column_end":4}},{"value":"/ // Existing key (take)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":421635,"byte_end":421661,"line_start":1996,"line_end":1996,"column_start":1,"column_end":27}},{"value":"/ match set.entry(\"c\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":421662,"byte_end":421688,"line_start":1997,"line_end":1997,"column_start":1,"column_end":27}},{"value":"/     Entry::Vacant(_) => unreachable!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":421689,"byte_end":421732,"line_start":1998,"line_end":1998,"column_start":1,"column_end":44}},{"value":"/     Entry::Occupied(view) => {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":421733,"byte_end":421767,"line_start":1999,"line_end":1999,"column_start":1,"column_end":35}},{"value":"/         assert_eq!(view.remove(), \"c\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":421768,"byte_end":421811,"line_start":2000,"line_end":2000,"column_start":1,"column_end":44}},{"value":"/     }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":421812,"byte_end":421821,"line_start":2001,"line_end":2001,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":421822,"byte_end":421827,"line_start":2002,"line_end":2002,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(set.get(&\"c\"), None);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":421828,"byte_end":421864,"line_start":2003,"line_end":2003,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(set.len(), 2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":421865,"byte_end":421894,"line_start":2004,"line_end":2004,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":421895,"byte_end":421902,"line_start":2005,"line_end":2005,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2145},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":422998,"byte_end":423009,"line_start":2044,"line_end":2044,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::set::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":2150}],"decl_id":null,"docs":" A view into a vacant entry in a `HashSet`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ A view into a vacant entry in a `HashSet`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":422285,"byte_end":422331,"line_start":2018,"line_end":2018,"column_start":1,"column_end":47}},{"value":"/ It is part of the [`Entry`] enum.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":422332,"byte_end":422369,"line_start":2019,"line_end":2019,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":422370,"byte_end":422373,"line_start":2020,"line_end":2020,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":422374,"byte_end":422404,"line_start":2021,"line_end":2021,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":422405,"byte_end":422408,"line_start":2022,"line_end":2022,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":422409,"byte_end":422423,"line_start":2023,"line_end":2023,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":422424,"byte_end":422427,"line_start":2024,"line_end":2024,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":422428,"byte_end":422435,"line_start":2025,"line_end":2025,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::hash_set::{Entry, HashSet, VacantEntry};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":422436,"byte_end":422495,"line_start":2026,"line_end":2026,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":422496,"byte_end":422499,"line_start":2027,"line_end":2027,"column_start":1,"column_end":4}},{"value":"/ let mut set = HashSet::<&str>::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":422500,"byte_end":422541,"line_start":2028,"line_end":2028,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":422542,"byte_end":422545,"line_start":2029,"line_end":2029,"column_start":1,"column_end":4}},{"value":"/ let entry_v: VacantEntry<_, _> = match set.entry(\"a\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":422546,"byte_end":422605,"line_start":2030,"line_end":2030,"column_start":1,"column_end":60}},{"value":"/     Entry::Vacant(view) => view,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":422606,"byte_end":422642,"line_start":2031,"line_end":2031,"column_start":1,"column_end":37}},{"value":"/     Entry::Occupied(_) => unreachable!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":422643,"byte_end":422688,"line_start":2032,"line_end":2032,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":422689,"byte_end":422695,"line_start":2033,"line_end":2033,"column_start":1,"column_end":7}},{"value":"/ entry_v.insert();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":422696,"byte_end":422717,"line_start":2034,"line_end":2034,"column_start":1,"column_end":22}},{"value":"/ assert!(set.contains(\"a\") && set.len() == 1);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":422718,"byte_end":422767,"line_start":2035,"line_end":2035,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":422768,"byte_end":422771,"line_start":2036,"line_end":2036,"column_start":1,"column_end":4}},{"value":"/ // Nonexistent key (insert)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":422772,"byte_end":422803,"line_start":2037,"line_end":2037,"column_start":1,"column_end":32}},{"value":"/ match set.entry(\"b\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":422804,"byte_end":422830,"line_start":2038,"line_end":2038,"column_start":1,"column_end":27}},{"value":"/     Entry::Vacant(view) => view.insert(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":422831,"byte_end":422876,"line_start":2039,"line_end":2039,"column_start":1,"column_end":46}},{"value":"/     Entry::Occupied(_) => unreachable!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":422877,"byte_end":422922,"line_start":2040,"line_end":2040,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":422923,"byte_end":422928,"line_start":2041,"line_end":2041,"column_start":1,"column_end":6}},{"value":"/ assert!(set.contains(\"b\") && set.len() == 2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":422929,"byte_end":422978,"line_start":2042,"line_end":2042,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":422979,"byte_end":422986,"line_start":2043,"line_end":2043,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2161},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":423772,"byte_end":423778,"line_start":2068,"line_end":2068,"column_start":12,"column_end":18},"name":"insert","qualname":"<Entry>::insert","value":"pub fn insert(Self) -> OccupiedEntry where T: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns an OccupiedEntry.","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns an OccupiedEntry.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":423387,"byte_end":423449,"line_start":2055,"line_end":2055,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":423454,"byte_end":423457,"line_start":2056,"line_end":2056,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":423462,"byte_end":423476,"line_start":2057,"line_end":2057,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":423481,"byte_end":423484,"line_start":2058,"line_end":2058,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":423489,"byte_end":423496,"line_start":2059,"line_end":2059,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":423501,"byte_end":423528,"line_start":2060,"line_end":2060,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":423533,"byte_end":423536,"line_start":2061,"line_end":2061,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<&str> = HashSet::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":423541,"byte_end":423589,"line_start":2062,"line_end":2062,"column_start":5,"column_end":53}},{"value":"/ let entry = set.entry(\"horseyland\").insert();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":423594,"byte_end":423643,"line_start":2063,"line_end":2063,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":423648,"byte_end":423651,"line_start":2064,"line_end":2064,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(entry.get(), &\"horseyland\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":423656,"byte_end":423699,"line_start":2065,"line_end":2065,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":423704,"byte_end":423711,"line_start":2066,"line_end":2066,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":423752,"byte_end":423758,"line_start":2067,"line_end":2067,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2162},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":424573,"byte_end":424582,"line_start":2098,"line_end":2098,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub fn or_insert(Self) where T: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting if it was vacant.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting if it was vacant.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":424017,"byte_end":424083,"line_start":2079,"line_end":2079,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":424088,"byte_end":424091,"line_start":2080,"line_end":2080,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":424096,"byte_end":424110,"line_start":2081,"line_end":2081,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":424115,"byte_end":424118,"line_start":2082,"line_end":2082,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":424123,"byte_end":424130,"line_start":2083,"line_end":2083,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":424135,"byte_end":424162,"line_start":2084,"line_end":2084,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":424167,"byte_end":424170,"line_start":2085,"line_end":2085,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<&str> = HashSet::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":424175,"byte_end":424223,"line_start":2086,"line_end":2086,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":424228,"byte_end":424231,"line_start":2087,"line_end":2087,"column_start":5,"column_end":8}},{"value":"/ // nonexistent key","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":424236,"byte_end":424258,"line_start":2088,"line_end":2088,"column_start":5,"column_end":27}},{"value":"/ set.entry(\"poneyland\").or_insert();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":424263,"byte_end":424302,"line_start":2089,"line_end":2089,"column_start":5,"column_end":44}},{"value":"/ assert!(set.contains(\"poneyland\"));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":424307,"byte_end":424346,"line_start":2090,"line_end":2090,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":424351,"byte_end":424354,"line_start":2091,"line_end":2091,"column_start":5,"column_end":8}},{"value":"/ // existing key","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":424359,"byte_end":424378,"line_start":2092,"line_end":2092,"column_start":5,"column_end":24}},{"value":"/ set.entry(\"poneyland\").or_insert();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":424383,"byte_end":424422,"line_start":2093,"line_end":2093,"column_start":5,"column_end":44}},{"value":"/ assert!(set.contains(\"poneyland\"));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":424427,"byte_end":424466,"line_start":2094,"line_end":2094,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(set.len(), 1);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":424471,"byte_end":424500,"line_start":2095,"line_end":2095,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":424505,"byte_end":424512,"line_start":2096,"line_end":2096,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":424553,"byte_end":424559,"line_start":2097,"line_end":2097,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2163},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":425222,"byte_end":425225,"line_start":2123,"line_end":2123,"column_start":12,"column_end":15},"name":"get","qualname":"<Entry>::get","value":"pub fn get(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to this entry's value.","sig":null,"attributes":[{"value":"/ Returns a reference to this entry's value.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":424740,"byte_end":424786,"line_start":2108,"line_end":2108,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":424791,"byte_end":424794,"line_start":2109,"line_end":2109,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":424799,"byte_end":424813,"line_start":2110,"line_end":2110,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":424818,"byte_end":424821,"line_start":2111,"line_end":2111,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":424826,"byte_end":424833,"line_start":2112,"line_end":2112,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":424838,"byte_end":424865,"line_start":2113,"line_end":2113,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":424870,"byte_end":424873,"line_start":2114,"line_end":2114,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<&str> = HashSet::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":424878,"byte_end":424926,"line_start":2115,"line_end":2115,"column_start":5,"column_end":53}},{"value":"/ set.entry(\"poneyland\").or_insert();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":424931,"byte_end":424970,"line_start":2116,"line_end":2116,"column_start":5,"column_end":44}},{"value":"/ // existing key","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":424975,"byte_end":424994,"line_start":2117,"line_end":2117,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(set.entry(\"poneyland\").get(), &\"poneyland\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":424999,"byte_end":425058,"line_start":2118,"line_end":2118,"column_start":5,"column_end":64}},{"value":"/ // nonexistent key","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":425063,"byte_end":425085,"line_start":2119,"line_end":2119,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(set.entry(\"horseland\").get(), &\"horseland\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":425090,"byte_end":425149,"line_start":2120,"line_end":2120,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":425154,"byte_end":425161,"line_start":2121,"line_end":2121,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":425202,"byte_end":425208,"line_start":2122,"line_end":2122,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2168},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":425955,"byte_end":425958,"line_start":2148,"line_end":2148,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"pub fn get(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Gets a reference to the value in the entry.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":425456,"byte_end":425503,"line_start":2132,"line_end":2132,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":425508,"byte_end":425511,"line_start":2133,"line_end":2133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":425516,"byte_end":425530,"line_start":2134,"line_end":2134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":425535,"byte_end":425538,"line_start":2135,"line_end":2135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":425543,"byte_end":425550,"line_start":2136,"line_end":2136,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_set::{Entry, HashSet};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":425555,"byte_end":425601,"line_start":2137,"line_end":2137,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":425606,"byte_end":425609,"line_start":2138,"line_end":2138,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<&str> = HashSet::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":425614,"byte_end":425662,"line_start":2139,"line_end":2139,"column_start":5,"column_end":53}},{"value":"/ set.entry(\"poneyland\").or_insert();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":425667,"byte_end":425706,"line_start":2140,"line_end":2140,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":425711,"byte_end":425714,"line_start":2141,"line_end":2141,"column_start":5,"column_end":8}},{"value":"/ match set.entry(\"poneyland\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":425719,"byte_end":425753,"line_start":2142,"line_end":2142,"column_start":5,"column_end":39}},{"value":"/     Entry::Vacant(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":425758,"byte_end":425795,"line_start":2143,"line_end":2143,"column_start":5,"column_end":42}},{"value":"/     Entry::Occupied(entry) => assert_eq!(entry.get(), &\"poneyland\"),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":425800,"byte_end":425872,"line_start":2144,"line_end":2144,"column_start":5,"column_end":77}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":425877,"byte_end":425882,"line_start":2145,"line_end":2145,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":425887,"byte_end":425894,"line_start":2146,"line_end":2146,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":425935,"byte_end":425941,"line_start":2147,"line_end":2147,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2169},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":426893,"byte_end":426899,"line_start":2177,"line_end":2177,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"pub fn remove(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of the entry, and returns it.\n Keeps the allocated memory for reuse.","sig":null,"attributes":[{"value":"/ Takes the value out of the entry, and returns it.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":426010,"byte_end":426063,"line_start":2152,"line_end":2152,"column_start":5,"column_end":58}},{"value":"/ Keeps the allocated memory for reuse.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":426068,"byte_end":426109,"line_start":2153,"line_end":2153,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":426114,"byte_end":426117,"line_start":2154,"line_end":2154,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":426122,"byte_end":426136,"line_start":2155,"line_end":2155,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":426141,"byte_end":426144,"line_start":2156,"line_end":2156,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":426149,"byte_end":426156,"line_start":2157,"line_end":2157,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":426161,"byte_end":426188,"line_start":2158,"line_end":2158,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_set::Entry;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":426193,"byte_end":426228,"line_start":2159,"line_end":2159,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":426233,"byte_end":426236,"line_start":2160,"line_end":2160,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<&str> = HashSet::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":426241,"byte_end":426289,"line_start":2161,"line_end":2161,"column_start":5,"column_end":53}},{"value":"/ // The set is empty","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":426294,"byte_end":426317,"line_start":2162,"line_end":2162,"column_start":5,"column_end":28}},{"value":"/ assert!(set.is_empty() && set.capacity() == 0);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":426322,"byte_end":426373,"line_start":2163,"line_end":2163,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":426378,"byte_end":426381,"line_start":2164,"line_end":2164,"column_start":5,"column_end":8}},{"value":"/ set.entry(\"poneyland\").or_insert();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":426386,"byte_end":426425,"line_start":2165,"line_end":2165,"column_start":5,"column_end":44}},{"value":"/ let capacity_before_remove = set.capacity();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":426430,"byte_end":426478,"line_start":2166,"line_end":2166,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":426483,"byte_end":426486,"line_start":2167,"line_end":2167,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(o) = set.entry(\"poneyland\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":426491,"byte_end":426547,"line_start":2168,"line_end":2168,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(o.remove(), \"poneyland\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":426552,"byte_end":426596,"line_start":2169,"line_end":2169,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":426601,"byte_end":426606,"line_start":2170,"line_end":2170,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":426611,"byte_end":426614,"line_start":2171,"line_end":2171,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.contains(\"poneyland\"), false);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":426619,"byte_end":426668,"line_start":2172,"line_end":2172,"column_start":5,"column_end":54}},{"value":"/ // Now set hold none elements but capacity is equal to the old one","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":426673,"byte_end":426743,"line_start":2173,"line_end":2173,"column_start":5,"column_end":75}},{"value":"/ assert!(set.len() == 0 && set.capacity() == capacity_before_remove);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":426748,"byte_end":426820,"line_start":2174,"line_end":2174,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":426825,"byte_end":426832,"line_start":2175,"line_end":2175,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":426873,"byte_end":426879,"line_start":2176,"line_end":2176,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2170},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":428153,"byte_end":428160,"line_start":2213,"line_end":2213,"column_start":12,"column_end":19},"name":"replace","qualname":"<OccupiedEntry>::replace","value":"pub fn replace(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Replaces the entry, returning the old value. The new value in the hash map will be\n the value used to create this entry.","sig":null,"attributes":[{"value":"/ Replaces the entry, returning the old value. The new value in the hash map will be","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":426960,"byte_end":427046,"line_start":2181,"line_end":2181,"column_start":5,"column_end":91}},{"value":"/ the value used to create this entry.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":427051,"byte_end":427091,"line_start":2182,"line_end":2182,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":427096,"byte_end":427099,"line_start":2183,"line_end":2183,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":427104,"byte_end":427116,"line_start":2184,"line_end":2184,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":427121,"byte_end":427124,"line_start":2185,"line_end":2185,"column_start":5,"column_end":8}},{"value":"/ Will panic if this OccupiedEntry was created through [`Entry::insert`].","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":427129,"byte_end":427204,"line_start":2186,"line_end":2186,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":427209,"byte_end":427212,"line_start":2187,"line_end":2187,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":427217,"byte_end":427231,"line_start":2188,"line_end":2188,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":427236,"byte_end":427239,"line_start":2189,"line_end":2189,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":427244,"byte_end":427251,"line_start":2190,"line_end":2190,"column_start":5,"column_end":12}},{"value":"/  use hashbrown::hash_set::{Entry, HashSet};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":427256,"byte_end":427303,"line_start":2191,"line_end":2191,"column_start":5,"column_end":52}},{"value":"/  use std::rc::Rc;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":427308,"byte_end":427329,"line_start":2192,"line_end":2192,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":427334,"byte_end":427337,"line_start":2193,"line_end":2193,"column_start":5,"column_end":8}},{"value":"/  let mut set: HashSet<Rc<String>> = HashSet::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":427342,"byte_end":427397,"line_start":2194,"line_end":2194,"column_start":5,"column_end":60}},{"value":"/  let key_one = Rc::new(\"Stringthing\".to_string());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":427402,"byte_end":427456,"line_start":2195,"line_end":2195,"column_start":5,"column_end":59}},{"value":"/  let key_two = Rc::new(\"Stringthing\".to_string());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":427461,"byte_end":427515,"line_start":2196,"line_end":2196,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":427520,"byte_end":427523,"line_start":2197,"line_end":2197,"column_start":5,"column_end":8}},{"value":"/  set.insert(key_one.clone());","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":427528,"byte_end":427561,"line_start":2198,"line_end":2198,"column_start":5,"column_end":38}},{"value":"/  assert!(Rc::strong_count(&key_one) == 2 && Rc::strong_count(&key_two) == 1);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":427566,"byte_end":427647,"line_start":2199,"line_end":2199,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":427652,"byte_end":427655,"line_start":2200,"line_end":2200,"column_start":5,"column_end":8}},{"value":"/  match set.entry(key_two.clone()) {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":427660,"byte_end":427699,"line_start":2201,"line_end":2201,"column_start":5,"column_end":44}},{"value":"/      Entry::Occupied(entry) => {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":427704,"byte_end":427740,"line_start":2202,"line_end":2202,"column_start":5,"column_end":41}},{"value":"/          let old_key: Rc<String> = entry.replace();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":427745,"byte_end":427800,"line_start":2203,"line_end":2203,"column_start":5,"column_end":60}},{"value":"/          assert!(Rc::ptr_eq(&key_one, &old_key));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":427805,"byte_end":427858,"line_start":2204,"line_end":2204,"column_start":5,"column_end":58}},{"value":"/      }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":427863,"byte_end":427873,"line_start":2205,"line_end":2205,"column_start":5,"column_end":15}},{"value":"/      Entry::Vacant(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":427878,"byte_end":427916,"line_start":2206,"line_end":2206,"column_start":5,"column_end":43}},{"value":"/  }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":427921,"byte_end":427927,"line_start":2207,"line_end":2207,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":427932,"byte_end":427935,"line_start":2208,"line_end":2208,"column_start":5,"column_end":8}},{"value":"/  assert!(Rc::strong_count(&key_one) == 1 && Rc::strong_count(&key_two) == 2);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":427940,"byte_end":428021,"line_start":2209,"line_end":2209,"column_start":5,"column_end":86}},{"value":"/  assert!(set.contains(&\"Stringthing\".to_owned()));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":428026,"byte_end":428080,"line_start":2210,"line_end":2210,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":428085,"byte_end":428092,"line_start":2211,"line_end":2211,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":428133,"byte_end":428139,"line_start":2212,"line_end":2212,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2176},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":428663,"byte_end":428666,"line_start":2231,"line_end":2231,"column_start":12,"column_end":15},"name":"get","qualname":"<VacantEntry>::get","value":"pub fn get(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value that would be used when inserting\n through the `VacantEntry`.","sig":null,"attributes":[{"value":"/ Gets a reference to the value that would be used when inserting","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":428284,"byte_end":428351,"line_start":2219,"line_end":2219,"column_start":5,"column_end":72}},{"value":"/ through the `VacantEntry`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":428356,"byte_end":428386,"line_start":2220,"line_end":2220,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":428391,"byte_end":428394,"line_start":2221,"line_end":2221,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":428399,"byte_end":428413,"line_start":2222,"line_end":2222,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":428418,"byte_end":428421,"line_start":2223,"line_end":2223,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":428426,"byte_end":428433,"line_start":2224,"line_end":2224,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":428438,"byte_end":428465,"line_start":2225,"line_end":2225,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":428470,"byte_end":428473,"line_start":2226,"line_end":2226,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<&str> = HashSet::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":428478,"byte_end":428526,"line_start":2227,"line_end":2227,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(set.entry(\"poneyland\").get(), &\"poneyland\");","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":428531,"byte_end":428590,"line_start":2228,"line_end":2228,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":428595,"byte_end":428602,"line_start":2229,"line_end":2229,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":428643,"byte_end":428649,"line_start":2230,"line_end":2230,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2177},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":429156,"byte_end":429166,"line_start":2250,"line_end":2250,"column_start":12,"column_end":22},"name":"into_value","qualname":"<VacantEntry>::into_value","value":"pub fn into_value(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Take ownership of the value.","sig":null,"attributes":[{"value":"/ Take ownership of the value.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":428718,"byte_end":428750,"line_start":2235,"line_end":2235,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":428755,"byte_end":428758,"line_start":2236,"line_end":2236,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":428763,"byte_end":428777,"line_start":2237,"line_end":2237,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":428782,"byte_end":428785,"line_start":2238,"line_end":2238,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":428790,"byte_end":428797,"line_start":2239,"line_end":2239,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_set::{Entry, HashSet};","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":428802,"byte_end":428848,"line_start":2240,"line_end":2240,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":428853,"byte_end":428856,"line_start":2241,"line_end":2241,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<&str> = HashSet::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":428861,"byte_end":428909,"line_start":2242,"line_end":2242,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":428914,"byte_end":428917,"line_start":2243,"line_end":2243,"column_start":5,"column_end":8}},{"value":"/ match set.entry(\"poneyland\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":428922,"byte_end":428956,"line_start":2244,"line_end":2244,"column_start":5,"column_end":39}},{"value":"/     Entry::Occupied(_) => panic!(),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":428961,"byte_end":429000,"line_start":2245,"line_end":2245,"column_start":5,"column_end":44}},{"value":"/     Entry::Vacant(v) => assert_eq!(v.into_value(), \"poneyland\"),","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":429005,"byte_end":429073,"line_start":2246,"line_end":2246,"column_start":5,"column_end":73}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":429078,"byte_end":429083,"line_start":2247,"line_end":2247,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":429088,"byte_end":429095,"line_start":2248,"line_end":2248,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":429136,"byte_end":429142,"line_start":2249,"line_end":2249,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2178},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":429680,"byte_end":429686,"line_start":2270,"line_end":2270,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"pub fn insert(Self) where T: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's value.","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the VacantEntry's value.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":429221,"byte_end":429282,"line_start":2254,"line_end":2254,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":429287,"byte_end":429290,"line_start":2255,"line_end":2255,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":429295,"byte_end":429309,"line_start":2256,"line_end":2256,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":429314,"byte_end":429317,"line_start":2257,"line_end":2257,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":429322,"byte_end":429329,"line_start":2258,"line_end":2258,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":429334,"byte_end":429361,"line_start":2259,"line_end":2259,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_set::Entry;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":429366,"byte_end":429401,"line_start":2260,"line_end":2260,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":429406,"byte_end":429409,"line_start":2261,"line_end":2261,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<&str> = HashSet::new();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":429414,"byte_end":429462,"line_start":2262,"line_end":2262,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":429467,"byte_end":429470,"line_start":2263,"line_end":2263,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Vacant(o) = set.entry(\"poneyland\") {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":429475,"byte_end":429529,"line_start":2264,"line_end":2264,"column_start":5,"column_end":59}},{"value":"/     o.insert();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":429534,"byte_end":429553,"line_start":2265,"line_end":2265,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":429558,"byte_end":429563,"line_start":2266,"line_end":2266,"column_start":5,"column_end":10}},{"value":"/ assert!(set.contains(\"poneyland\"));","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":429568,"byte_end":429607,"line_start":2267,"line_end":2267,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":429612,"byte_end":429619,"line_start":2268,"line_end":2268,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":429660,"byte_end":429666,"line_start":2269,"line_end":2269,"column_start":41,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":2208},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/lib.rs","byte_start":2251,"byte_end":2259,"line_start":85,"line_end":85,"column_start":9,"column_end":17},"name":"hash_map","qualname":"::hash_map","value":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":2209}],"decl_id":null,"docs":" A hash map implemented with quadratic probing and SIMD lookup.\n","sig":null,"attributes":[{"value":"/ A hash map implemented with quadratic probing and SIMD lookup.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/lib.rs","byte_start":2266,"byte_end":2332,"line_start":86,"line_end":86,"column_start":5,"column_end":71}}]},{"kind":"Mod","id":{"krate":0,"index":2210},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/lib.rs","byte_start":2806,"byte_end":2814,"line_start":102,"line_end":102,"column_start":9,"column_end":17},"name":"hash_set","qualname":"::hash_set","value":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":2211}],"decl_id":null,"docs":" A hash set implemented as a `HashMap` where the value is `()`.\n","sig":null,"attributes":[{"value":"/ A hash set implemented as a `HashMap` where the value is `()`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/lib.rs","byte_start":2821,"byte_end":2887,"line_start":103,"line_end":103,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2293},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/lib.rs","byte_start":3566,"byte_end":3582,"line_start":125,"line_end":125,"column_start":5,"column_end":21},"name":"CapacityOverflow","qualname":"::TryReserveError::CapacityOverflow","value":"TryReserveError::CapacityOverflow","parent":{"krate":0,"index":2292},"children":[],"decl_id":null,"docs":" Error due to the computed capacity exceeding the collection's maximum\n (usually `isize::MAX` bytes).\n","sig":null,"attributes":[{"value":"/ Error due to the computed capacity exceeding the collection's maximum","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/lib.rs","byte_start":3450,"byte_end":3523,"line_start":123,"line_end":123,"column_start":5,"column_end":78}},{"value":"/ (usually `isize::MAX` bytes).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/lib.rs","byte_start":3528,"byte_end":3561,"line_start":124,"line_end":124,"column_start":5,"column_end":38}}]},{"kind":"StructVariant","id":{"krate":0,"index":2295},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/lib.rs","byte_start":3636,"byte_end":3646,"line_start":128,"line_end":128,"column_start":5,"column_end":15},"name":"AllocError","qualname":"::TryReserveError::AllocError","value":"TryReserveError::AllocError { layout }","parent":{"krate":0,"index":2292},"children":[],"decl_id":null,"docs":" The memory allocator returned an error\n","sig":null,"attributes":[{"value":"/ The memory allocator returned an error","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/lib.rs","byte_start":3589,"byte_end":3631,"line_start":127,"line_end":127,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":2292},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/lib.rs","byte_start":3428,"byte_end":3443,"line_start":122,"line_end":122,"column_start":10,"column_end":25},"name":"TryReserveError","qualname":"::TryReserveError","value":"pub enum TryReserveError {\n    CapacityOverflow,\n    AllocError {\n            layout: alloc::alloc::Layout,\n        },\n}","parent":null,"children":[{"krate":0,"index":2293},{"krate":0,"index":2295}],"decl_id":null,"docs":" The error type for `try_reserve` methods.\n","sig":null,"attributes":[{"value":"/ The error type for `try_reserve` methods.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/lib.rs","byte_start":3334,"byte_end":3379,"line_start":120,"line_end":120,"column_start":1,"column_end":46}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/generic.rs","byte_start":8940593,"byte_end":8940598,"line_start":47,"line_end":47,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2239},{"krate":0,"index":2240},{"krate":0,"index":2249},{"krate":0,"index":2250},{"krate":0,"index":2251},{"krate":0,"index":2252},{"krate":0,"index":2253},{"krate":0,"index":2254},{"krate":0,"index":2255},{"krate":0,"index":2256}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/alloc.rs","byte_start":95521,"byte_end":95527,"line_start":44,"line_end":44,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/alloc.rs","byte_start":95861,"byte_end":95867,"line_start":54,"line_end":54,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/bitmask.rs","byte_start":97243,"byte_end":97250,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/bitmask.rs","byte_start":99864,"byte_end":99871,"line_start":99,"line_end":99,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/bitmask.rs","byte_start":100158,"byte_end":100169,"line_start":113,"line_end":113,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":8668,"byte_end":8679,"line_start":84,"line_end":84,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":11373,"byte_end":11381,"line_start":163,"line_end":163,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":13874,"byte_end":13885,"line_start":231,"line_end":231,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":15790,"byte_end":15796,"line_start":283,"line_end":283,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":15822,"byte_end":15828,"line_start":285,"line_end":285,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":15926,"byte_end":15932,"line_start":292,"line_end":292,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":18724,"byte_end":18732,"line_start":387,"line_end":387,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":19818,"byte_end":19826,"line_start":415,"line_end":415,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":223},{"krate":0,"index":225},{"krate":0,"index":227},{"krate":0,"index":230},{"krate":0,"index":233},{"krate":0,"index":235},{"krate":0,"index":237},{"krate":0,"index":239},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":252},{"krate":0,"index":257},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":42337,"byte_end":42345,"line_start":1028,"line_end":1028,"column_start":47,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":42434,"byte_end":42442,"line_start":1034,"line_end":1034,"column_start":47,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":42494,"byte_end":42507,"line_start":1041,"line_end":1041,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":42893,"byte_end":42906,"line_start":1055,"line_end":1055,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":63549,"byte_end":63557,"line_start":1599,"line_end":1599,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":66869,"byte_end":66877,"line_start":1681,"line_end":1681,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":2291}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":67698,"byte_end":67706,"line_start":1706,"line_end":1706,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":71102,"byte_end":71110,"line_start":1793,"line_end":1793,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":71635,"byte_end":71643,"line_start":1813,"line_end":1813,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":71948,"byte_end":71956,"line_start":1825,"line_end":1825,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":72807,"byte_end":72819,"line_start":1856,"line_end":1856,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":356},{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":76855,"byte_end":76867,"line_start":1951,"line_end":1951,"column_start":25,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":76898,"byte_end":76910,"line_start":1952,"line_end":1952,"column_start":25,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":76936,"byte_end":76948,"line_start":1954,"line_end":1954,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":77238,"byte_end":77250,"line_start":1966,"line_end":1966,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":77980,"byte_end":77992,"line_start":1991,"line_end":1991,"column_start":27,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":78887,"byte_end":78894,"line_start":2010,"line_end":2010,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":85021,"byte_end":85028,"line_start":2136,"line_end":2136,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":85236,"byte_end":85243,"line_start":2146,"line_end":2146,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":85949,"byte_end":85956,"line_start":2175,"line_end":2175,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":85989,"byte_end":85996,"line_start":2176,"line_end":2176,"column_start":27,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":86265,"byte_end":86276,"line_start":2186,"line_end":2186,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":86454,"byte_end":86465,"line_start":2193,"line_end":2193,"column_start":47,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":86554,"byte_end":86565,"line_start":2199,"line_end":2199,"column_start":47,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":87136,"byte_end":87147,"line_start":2222,"line_end":2222,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":87547,"byte_end":87558,"line_start":2237,"line_end":2237,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":87888,"byte_end":87899,"line_start":2251,"line_end":2251,"column_start":53,"column_end":64},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":87957,"byte_end":87968,"line_start":2252,"line_end":2252,"column_start":49,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":88573,"byte_end":88581,"line_start":2269,"line_end":2269,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":88762,"byte_end":88770,"line_start":2276,"line_end":2276,"column_start":46,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":88862,"byte_end":88870,"line_start":2282,"line_end":2282,"column_start":46,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":88957,"byte_end":88965,"line_start":2289,"line_end":2289,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":89570,"byte_end":89578,"line_start":2308,"line_end":2308,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":89961,"byte_end":89969,"line_start":2325,"line_end":2325,"column_start":53,"column_end":61},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":90031,"byte_end":90039,"line_start":2326,"line_end":2326,"column_start":49,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":90835,"byte_end":90846,"line_start":2353,"line_end":2353,"column_start":35,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":91162,"byte_end":91178,"line_start":2363,"line_end":2363,"column_start":32,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":91794,"byte_end":91805,"line_start":2384,"line_end":2384,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":486},{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":92123,"byte_end":92139,"line_start":2397,"line_end":2397,"column_start":45,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":491},{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":107474,"byte_end":107481,"line_start":193,"line_end":193,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":566},{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":110168,"byte_end":110175,"line_start":292,"line_end":292,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":602},{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":111414,"byte_end":111421,"line_start":331,"line_end":331,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":608},{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":112291,"byte_end":112298,"line_start":351,"line_end":351,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":614},{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":115079,"byte_end":115086,"line_start":427,"line_end":427,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":636},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":132323,"byte_end":132330,"line_start":983,"line_end":983,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":655},{"krate":0,"index":657},{"krate":0,"index":659},{"krate":0,"index":661},{"krate":0,"index":663},{"krate":0,"index":665},{"krate":0,"index":667},{"krate":0,"index":669},{"krate":0,"index":676},{"krate":0,"index":683},{"krate":0,"index":690},{"krate":0,"index":697},{"krate":0,"index":703},{"krate":0,"index":709},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":161024,"byte_end":161031,"line_start":1864,"line_end":1864,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":727},{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":169684,"byte_end":169691,"line_start":2078,"line_end":2078,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":170044,"byte_end":170051,"line_start":2095,"line_end":2095,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":170177,"byte_end":170184,"line_start":2104,"line_end":2104,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":747}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":170412,"byte_end":170419,"line_start":2115,"line_end":2115,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":171293,"byte_end":171300,"line_start":2141,"line_end":2141,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":760},{"krate":0,"index":761}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":172158,"byte_end":172165,"line_start":2174,"line_end":2174,"column_start":53,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":173643,"byte_end":173647,"line_start":2227,"line_end":2227,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":173885,"byte_end":173889,"line_start":2237,"line_end":2237,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":175295,"byte_end":175302,"line_start":2279,"line_end":2279,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":175328,"byte_end":175335,"line_start":2281,"line_end":2281,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":176837,"byte_end":176845,"line_start":2326,"line_end":2326,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":806}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":178199,"byte_end":178207,"line_start":2370,"line_end":2370,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":178500,"byte_end":178508,"line_start":2383,"line_end":2383,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":178648,"byte_end":178656,"line_start":2390,"line_end":2390,"column_start":52,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":178732,"byte_end":178740,"line_start":2392,"line_end":2392,"column_start":63,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":833}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":180028,"byte_end":180038,"line_start":2432,"line_end":2432,"column_start":47,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":847}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":180331,"byte_end":180341,"line_start":2445,"line_end":2445,"column_start":56,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":852}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":180481,"byte_end":180491,"line_start":2452,"line_end":2452,"column_start":52,"column_end":62},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":180560,"byte_end":180570,"line_start":2454,"line_end":2454,"column_start":56,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":861}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":181744,"byte_end":181748,"line_start":2495,"line_end":2495,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":181946,"byte_end":181950,"line_start":2504,"line_end":2504,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":875}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":183114,"byte_end":183120,"line_start":2543,"line_end":2543,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":183320,"byte_end":183326,"line_start":2552,"line_end":2552,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":184529,"byte_end":184534,"line_start":2590,"line_end":2590,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":899}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":186082,"byte_end":186093,"line_start":2640,"line_end":2640,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":914}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":186516,"byte_end":186532,"line_start":2657,"line_end":2657,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":186686,"byte_end":186697,"line_start":2664,"line_end":2664,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":187097,"byte_end":187108,"line_start":2682,"line_end":2682,"column_start":33,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":187402,"byte_end":187418,"line_start":2690,"line_end":2690,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":196786,"byte_end":196805,"line_start":2979,"line_end":2979,"column_start":34,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":196937,"byte_end":196956,"line_start":2987,"line_end":2987,"column_start":34,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":200128,"byte_end":200146,"line_start":3087,"line_end":3087,"column_start":41,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1012},{"krate":0,"index":1014}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":202057,"byte_end":202075,"line_start":3146,"line_end":3146,"column_start":41,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1022},{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":203874,"byte_end":203889,"line_start":3197,"line_end":3197,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1035},{"krate":0,"index":1037},{"krate":0,"index":1039},{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":206938,"byte_end":206949,"line_start":3292,"line_end":3292,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1054},{"krate":0,"index":1056}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":212822,"byte_end":212841,"line_start":3486,"line_end":3486,"column_start":41,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1064},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":225775,"byte_end":225792,"line_start":3885,"line_end":3885,"column_start":41,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1092}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":230397,"byte_end":230415,"line_start":4031,"line_end":4031,"column_start":47,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1098}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":230617,"byte_end":230628,"line_start":4037,"line_end":4037,"column_start":61,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":1104}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":230987,"byte_end":231006,"line_start":4046,"line_end":4046,"column_start":61,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":1110}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":231289,"byte_end":231306,"line_start":4055,"line_end":4055,"column_start":47,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1116}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":231496,"byte_end":231511,"line_start":4061,"line_end":4061,"column_start":47,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1122}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":234011,"byte_end":234016,"line_start":4145,"line_end":4145,"column_start":61,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":1140}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":235585,"byte_end":235598,"line_start":4201,"line_end":4201,"column_start":34,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":235730,"byte_end":235743,"line_start":4209,"line_end":4209,"column_start":34,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":235903,"byte_end":235916,"line_start":4218,"line_end":4218,"column_start":61,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":237155,"byte_end":237166,"line_start":4263,"line_end":4263,"column_start":54,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1181}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":240200,"byte_end":240208,"line_start":4357,"line_end":4357,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1202}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":240603,"byte_end":240611,"line_start":4372,"line_end":4372,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1217}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":240878,"byte_end":240886,"line_start":4384,"line_end":4384,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1222}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":242515,"byte_end":242531,"line_start":4441,"line_end":4441,"column_start":45,"column_end":61},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":242703,"byte_end":242719,"line_start":4450,"line_end":4450,"column_start":45,"column_end":61},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":242935,"byte_end":242951,"line_start":4461,"line_end":4461,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1257}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":244305,"byte_end":244319,"line_start":4508,"line_end":4508,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1275}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":245658,"byte_end":245671,"line_start":4546,"line_end":4546,"column_start":61,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":1289}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":246038,"byte_end":246051,"line_start":4557,"line_end":4557,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1296}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":248707,"byte_end":248714,"line_start":4639,"line_end":4639,"column_start":54,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1320},{"krate":0,"index":1321},{"krate":0,"index":1322}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":249688,"byte_end":249692,"line_start":4669,"line_end":4669,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1329}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":250263,"byte_end":250267,"line_start":4688,"line_end":4688,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1333}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":250421,"byte_end":250425,"line_start":4695,"line_end":4695,"column_start":30,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":250468,"byte_end":250475,"line_start":4697,"line_end":4697,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1343}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":251058,"byte_end":251065,"line_start":4716,"line_end":4716,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1347}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":251218,"byte_end":251225,"line_start":4722,"line_end":4722,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":251266,"byte_end":251273,"line_start":4724,"line_end":4724,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1354}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":251501,"byte_end":251509,"line_start":4734,"line_end":4734,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1361}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":251865,"byte_end":251873,"line_start":4746,"line_end":4746,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1366}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":252047,"byte_end":252055,"line_start":4752,"line_end":4752,"column_start":52,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":252131,"byte_end":252139,"line_start":4754,"line_end":4754,"column_start":63,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":1375}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":252304,"byte_end":252308,"line_start":4760,"line_end":4760,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1380},{"krate":0,"index":1381},{"krate":0,"index":1382}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":252780,"byte_end":252784,"line_start":4776,"line_end":4776,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1386}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":252937,"byte_end":252941,"line_start":4782,"line_end":4782,"column_start":30,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":252984,"byte_end":252990,"line_start":4784,"line_end":4784,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1396}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":253462,"byte_end":253468,"line_start":4800,"line_end":4800,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1400}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":253621,"byte_end":253627,"line_start":4806,"line_end":4806,"column_start":30,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":253670,"byte_end":253679,"line_start":4808,"line_end":4808,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1408},{"krate":0,"index":1409},{"krate":0,"index":1410}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":254159,"byte_end":254168,"line_start":4824,"line_end":4824,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1414}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":254321,"byte_end":254330,"line_start":4830,"line_end":4830,"column_start":30,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":254378,"byte_end":254387,"line_start":4832,"line_end":4832,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1421}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":254627,"byte_end":254632,"line_start":4840,"line_end":4840,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1428},{"krate":0,"index":1429},{"krate":0,"index":1430}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":254992,"byte_end":254997,"line_start":4852,"line_end":4852,"column_start":56,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1435}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":255175,"byte_end":255180,"line_start":4858,"line_end":4858,"column_start":52,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":255227,"byte_end":255232,"line_start":4860,"line_end":4860,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1444}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":255483,"byte_end":255488,"line_start":4871,"line_end":4871,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1451},{"krate":0,"index":1452},{"krate":0,"index":1453},{"krate":0,"index":1455},{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1460}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":262863,"byte_end":262868,"line_start":5118,"line_end":5118,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1468}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":263830,"byte_end":263843,"line_start":5151,"line_end":5151,"column_start":41,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1479},{"krate":0,"index":1480},{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1483},{"krate":0,"index":1484}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":275308,"byte_end":275319,"line_start":5508,"line_end":5508,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1493},{"krate":0,"index":1494},{"krate":0,"index":1495},{"krate":0,"index":1496}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":277671,"byte_end":277679,"line_start":5595,"line_end":5595,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1505},{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":1509},{"krate":0,"index":1511},{"krate":0,"index":1512},{"krate":0,"index":1514}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":285374,"byte_end":285382,"line_start":5846,"line_end":5846,"column_start":65,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":1524}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":286408,"byte_end":286424,"line_start":5879,"line_end":5879,"column_start":56,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":1533},{"krate":0,"index":1534},{"krate":0,"index":1535},{"krate":0,"index":1536},{"krate":0,"index":1537},{"krate":0,"index":1538},{"krate":0,"index":1539},{"krate":0,"index":1540},{"krate":0,"index":1541},{"krate":0,"index":1542}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":297913,"byte_end":297927,"line_start":6237,"line_end":6237,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":1553},{"krate":0,"index":1554},{"krate":0,"index":1555},{"krate":0,"index":1556}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":300560,"byte_end":300567,"line_start":6333,"line_end":6333,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1562}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":301211,"byte_end":301218,"line_start":6353,"line_end":6353,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1570}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":304174,"byte_end":304181,"line_start":6436,"line_end":6436,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1579}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":306506,"byte_end":306513,"line_start":6501,"line_end":6501,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1588}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/scopeguard.rs","byte_start":361472,"byte_end":361482,"line_start":24,"line_end":24,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1648}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/scopeguard.rs","byte_start":362189,"byte_end":362199,"line_start":45,"line_end":45,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1652},{"krate":0,"index":1653}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/scopeguard.rs","byte_start":362352,"byte_end":362362,"line_start":56,"line_end":56,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1657}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/scopeguard.rs","byte_start":362506,"byte_end":362516,"line_start":66,"line_end":66,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1661}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":366800,"byte_end":366807,"line_start":119,"line_end":119,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1743},{"krate":0,"index":1744}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":367050,"byte_end":367057,"line_start":132,"line_end":132,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1747},{"krate":0,"index":1748}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":368204,"byte_end":368211,"line_start":172,"line_end":172,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1752},{"krate":0,"index":1753}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":369369,"byte_end":369376,"line_start":211,"line_end":211,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1758},{"krate":0,"index":1759},{"krate":0,"index":1760},{"krate":0,"index":1761},{"krate":0,"index":1762},{"krate":0,"index":1763},{"krate":0,"index":1766},{"krate":0,"index":1768}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":373926,"byte_end":373933,"line_start":385,"line_end":385,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1772},{"krate":0,"index":1773}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":376385,"byte_end":376392,"line_start":453,"line_end":453,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1778},{"krate":0,"index":1779},{"krate":0,"index":1780},{"krate":0,"index":1781}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":379174,"byte_end":379181,"line_start":538,"line_end":538,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1786},{"krate":0,"index":1787},{"krate":0,"index":1788},{"krate":0,"index":1789},{"krate":0,"index":1790},{"krate":0,"index":1792},{"krate":0,"index":1794},{"krate":0,"index":1796},{"krate":0,"index":1798},{"krate":0,"index":1800},{"krate":0,"index":1802},{"krate":0,"index":1803},{"krate":0,"index":1806},{"krate":0,"index":1810},{"krate":0,"index":1811},{"krate":0,"index":1813},{"krate":0,"index":1815},{"krate":0,"index":1816},{"krate":0,"index":1817},{"krate":0,"index":1818},{"krate":0,"index":1819},{"krate":0,"index":1821}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":399411,"byte_end":399418,"line_start":1147,"line_end":1147,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1827}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":399698,"byte_end":399705,"line_start":1162,"line_end":1162,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":399819,"byte_end":399826,"line_start":1170,"line_end":1170,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1837}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":400058,"byte_end":400065,"line_start":1180,"line_end":1180,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1842}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":400222,"byte_end":400229,"line_start":1189,"line_end":1189,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1847}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":400716,"byte_end":400723,"line_start":1205,"line_end":1205,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1854}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":401141,"byte_end":401148,"line_start":1224,"line_end":1224,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1860}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":401746,"byte_end":401753,"line_start":1248,"line_end":1248,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1868}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":402350,"byte_end":402357,"line_start":1272,"line_end":1272,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1874}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":409580,"byte_end":409587,"line_start":1524,"line_end":1524,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1955},{"krate":0,"index":1956},{"krate":0,"index":1957}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":410471,"byte_end":410475,"line_start":1556,"line_end":1556,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1960}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":410659,"byte_end":410663,"line_start":1564,"line_end":1564,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1964},{"krate":0,"index":1965},{"krate":0,"index":1966}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":410992,"byte_end":410996,"line_start":1576,"line_end":1576,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1970}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":411142,"byte_end":411146,"line_start":1582,"line_end":1582,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":411193,"byte_end":411197,"line_start":1584,"line_end":1584,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1975}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":411376,"byte_end":411384,"line_start":1590,"line_end":1590,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1979},{"krate":0,"index":1980},{"krate":0,"index":1981}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":411861,"byte_end":411869,"line_start":1606,"line_end":1606,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1985}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":412036,"byte_end":412044,"line_start":1612,"line_end":1612,"column_start":49,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":412112,"byte_end":412120,"line_start":1614,"line_end":1614,"column_start":58,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":1992}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":412359,"byte_end":412364,"line_start":1621,"line_end":1621,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1997},{"krate":0,"index":1998},{"krate":0,"index":1999}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":412845,"byte_end":412850,"line_start":1637,"line_end":1637,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2003}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":413021,"byte_end":413026,"line_start":1643,"line_end":1643,"column_start":49,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":413098,"byte_end":413103,"line_start":1645,"line_end":1645,"column_start":58,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2010}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":413349,"byte_end":413360,"line_start":1652,"line_end":1652,"column_start":47,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2017}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":413696,"byte_end":413707,"line_start":1666,"line_end":1666,"column_start":47,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2022},{"krate":0,"index":2023},{"krate":0,"index":2025}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":414149,"byte_end":414160,"line_start":1685,"line_end":1685,"column_start":52,"column_end":63},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":414253,"byte_end":414265,"line_start":1690,"line_end":1690,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2034}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":414490,"byte_end":414502,"line_start":1700,"line_end":1700,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2040},{"krate":0,"index":2041},{"krate":0,"index":2042}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":415072,"byte_end":415084,"line_start":1725,"line_end":1725,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2047}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":415341,"byte_end":415353,"line_start":1736,"line_end":1736,"column_start":33,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":415485,"byte_end":415495,"line_start":1744,"line_end":1744,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2056}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":415718,"byte_end":415728,"line_start":1754,"line_end":1754,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2062},{"krate":0,"index":2063},{"krate":0,"index":2064}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":416302,"byte_end":416312,"line_start":1779,"line_end":1779,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":416430,"byte_end":416440,"line_start":1787,"line_end":1787,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2073}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":416708,"byte_end":416727,"line_start":1798,"line_end":1798,"column_start":44,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2078}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":416939,"byte_end":416958,"line_start":1807,"line_end":1807,"column_start":32,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2084},{"krate":0,"index":2085},{"krate":0,"index":2086}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":417362,"byte_end":417381,"line_start":1825,"line_end":1825,"column_start":33,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":417499,"byte_end":417518,"line_start":1833,"line_end":1833,"column_start":30,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2095}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":417786,"byte_end":417791,"line_start":1844,"line_end":1844,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2100}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":417990,"byte_end":417995,"line_start":1853,"line_end":1853,"column_start":33,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":418113,"byte_end":418118,"line_start":1861,"line_end":1861,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2109}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":418374,"byte_end":418379,"line_start":1872,"line_end":1872,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2115},{"krate":0,"index":2116},{"krate":0,"index":2117}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":420740,"byte_end":420745,"line_start":1961,"line_end":1961,"column_start":61,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":2133}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":422082,"byte_end":422095,"line_start":2010,"line_end":2010,"column_start":61,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":2144}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":423162,"byte_end":423173,"line_start":2048,"line_end":2048,"column_start":61,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":2155}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":423362,"byte_end":423367,"line_start":2054,"line_end":2054,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2161},{"krate":0,"index":2162},{"krate":0,"index":2163}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":425423,"byte_end":425436,"line_start":2131,"line_end":2131,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2168},{"krate":0,"index":2169},{"krate":0,"index":2170}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":428253,"byte_end":428264,"line_start":2218,"line_end":2218,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2176},{"krate":0,"index":2177},{"krate":0,"index":2178},{"krate":0,"index":2179}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/generic.rs","byte_start":8940593,"byte_end":8940598,"line_start":47,"line_end":47,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":2260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/alloc.rs","byte_start":95521,"byte_end":95527,"line_start":44,"line_end":44,"column_start":31,"column_end":37},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2266},"to":{"krate":0,"index":76}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/alloc.rs","byte_start":95861,"byte_end":95867,"line_start":54,"line_end":54,"column_start":22,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2266},"to":{"krate":1,"index":3002}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/bitmask.rs","byte_start":97243,"byte_end":97250,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":2271},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/bitmask.rs","byte_start":99864,"byte_end":99871,"line_start":99,"line_end":99,"column_start":23,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2271},"to":{"krate":1,"index":7722}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/bitmask.rs","byte_start":100158,"byte_end":100169,"line_start":113,"line_end":113,"column_start":19,"column_end":30},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":119},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":8668,"byte_end":8679,"line_start":84,"line_end":84,"column_start":6,"column_end":17},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2277},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":11373,"byte_end":11381,"line_start":163,"line_end":163,"column_start":6,"column_end":14},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":150},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":13874,"byte_end":13885,"line_start":231,"line_end":231,"column_start":6,"column_end":17},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":15790,"byte_end":15796,"line_start":283,"line_end":283,"column_start":25,"column_end":31},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":163},"to":{"krate":1,"index":3024}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":15822,"byte_end":15828,"line_start":285,"line_end":285,"column_start":19,"column_end":25},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":163},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":15926,"byte_end":15932,"line_start":292,"line_end":292,"column_start":9,"column_end":15},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":18724,"byte_end":18732,"line_start":387,"line_end":387,"column_start":9,"column_end":17},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":184},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":19818,"byte_end":19826,"line_start":415,"line_end":415,"column_start":31,"column_end":39},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":184},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":42337,"byte_end":42345,"line_start":1028,"line_end":1028,"column_start":47,"column_end":55},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":184},"to":{"krate":1,"index":3024}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":42434,"byte_end":42442,"line_start":1034,"line_end":1034,"column_start":47,"column_end":55},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":184},"to":{"krate":1,"index":3036}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":42494,"byte_end":42507,"line_start":1041,"line_end":1041,"column_start":9,"column_end":22},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":42893,"byte_end":42906,"line_start":1055,"line_end":1055,"column_start":28,"column_end":41},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":63549,"byte_end":63557,"line_start":1599,"line_end":1599,"column_start":48,"column_end":56},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":184},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":66869,"byte_end":66877,"line_start":1681,"line_end":1681,"column_start":56,"column_end":64},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":184},"to":{"krate":0,"index":324}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":67698,"byte_end":67706,"line_start":1706,"line_end":1706,"column_start":38,"column_end":46},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":184},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":71102,"byte_end":71110,"line_start":1793,"line_end":1793,"column_start":53,"column_end":61},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":184},"to":{"krate":1,"index":3002}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":71635,"byte_end":71643,"line_start":1813,"line_end":1813,"column_start":40,"column_end":48},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":184},"to":{"krate":1,"index":3266}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":71948,"byte_end":71956,"line_start":1825,"line_end":1825,"column_start":48,"column_end":56},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":184},"to":{"krate":1,"index":7722}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":72807,"byte_end":72819,"line_start":1856,"line_end":1856,"column_start":9,"column_end":21},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":76855,"byte_end":76867,"line_start":1951,"line_end":1951,"column_start":25,"column_end":37},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":348},"to":{"krate":1,"index":3024}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":76898,"byte_end":76910,"line_start":1952,"line_end":1952,"column_start":25,"column_end":37},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":348},"to":{"krate":1,"index":3036}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":76936,"byte_end":76948,"line_start":1954,"line_end":1954,"column_start":19,"column_end":31},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":348},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":77238,"byte_end":77250,"line_start":1966,"line_end":1966,"column_start":22,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":348},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":77980,"byte_end":77992,"line_start":1991,"line_end":1991,"column_start":27,"column_end":39},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":348},"to":{"krate":1,"index":8187}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":78887,"byte_end":78894,"line_start":2010,"line_end":2010,"column_start":9,"column_end":16},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":85021,"byte_end":85028,"line_start":2136,"line_end":2136,"column_start":19,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":374},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":85236,"byte_end":85243,"line_start":2146,"line_end":2146,"column_start":22,"column_end":29},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":374},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":85949,"byte_end":85956,"line_start":2175,"line_end":2175,"column_start":31,"column_end":38},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":374},"to":{"krate":1,"index":7791}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":85989,"byte_end":85996,"line_start":2176,"line_end":2176,"column_start":27,"column_end":34},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":374},"to":{"krate":1,"index":8187}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":86265,"byte_end":86276,"line_start":2186,"line_end":2186,"column_start":31,"column_end":42},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":394},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":86454,"byte_end":86465,"line_start":2193,"line_end":2193,"column_start":47,"column_end":58},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":394},"to":{"krate":1,"index":3024}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":86554,"byte_end":86565,"line_start":2199,"line_end":2199,"column_start":47,"column_end":58},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":394},"to":{"krate":1,"index":3036}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":87136,"byte_end":87147,"line_start":2222,"line_end":2222,"column_start":40,"column_end":51},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":394},"to":{"krate":1,"index":3266}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":87547,"byte_end":87558,"line_start":2237,"line_end":2237,"column_start":44,"column_end":55},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":394},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":87888,"byte_end":87899,"line_start":2251,"line_end":2251,"column_start":53,"column_end":64},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":394},"to":{"krate":1,"index":7791}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":87957,"byte_end":87968,"line_start":2252,"line_end":2252,"column_start":49,"column_end":60},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":394},"to":{"krate":1,"index":8187}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":88573,"byte_end":88581,"line_start":2269,"line_end":2269,"column_start":31,"column_end":39},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":88762,"byte_end":88770,"line_start":2276,"line_end":2276,"column_start":46,"column_end":54},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":427},"to":{"krate":1,"index":3024}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":88862,"byte_end":88870,"line_start":2282,"line_end":2282,"column_start":46,"column_end":54},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":427},"to":{"krate":1,"index":3036}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":88957,"byte_end":88965,"line_start":2289,"line_end":2289,"column_start":40,"column_end":48},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":427},"to":{"krate":1,"index":3266}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":89570,"byte_end":89578,"line_start":2308,"line_end":2308,"column_start":44,"column_end":52},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":427},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":89961,"byte_end":89969,"line_start":2325,"line_end":2325,"column_start":53,"column_end":61},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":427},"to":{"krate":1,"index":7791}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":90031,"byte_end":90039,"line_start":2326,"line_end":2326,"column_start":49,"column_end":57},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":427},"to":{"krate":1,"index":8187}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":90835,"byte_end":90846,"line_start":2353,"line_end":2353,"column_start":35,"column_end":46},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":91162,"byte_end":91178,"line_start":2363,"line_end":2363,"column_start":32,"column_end":48},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":467},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":91794,"byte_end":91805,"line_start":2384,"line_end":2384,"column_start":48,"column_end":59},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":461},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/raw/mod.rs","byte_start":92123,"byte_end":92139,"line_start":2397,"line_end":2397,"column_start":45,"column_end":61},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":467},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":107474,"byte_end":107481,"line_start":193,"line_end":193,"column_start":68,"column_end":75},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":554},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":110168,"byte_end":110175,"line_start":292,"line_end":292,"column_start":12,"column_end":19},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":111414,"byte_end":111421,"line_start":331,"line_end":331,"column_start":34,"column_end":41},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":112291,"byte_end":112298,"line_start":351,"line_end":351,"column_start":15,"column_end":22},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":115079,"byte_end":115086,"line_start":427,"line_end":427,"column_start":37,"column_end":44},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":132323,"byte_end":132330,"line_start":983,"line_end":983,"column_start":18,"column_end":25},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":161024,"byte_end":161031,"line_start":1864,"line_end":1864,"column_start":37,"column_end":44},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":169684,"byte_end":169691,"line_start":2078,"line_end":2078,"column_start":32,"column_end":39},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":554},"to":{"krate":1,"index":2675}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":170044,"byte_end":170051,"line_start":2095,"line_end":2095,"column_start":25,"column_end":32},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":554},"to":{"krate":1,"index":2680}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":170177,"byte_end":170184,"line_start":2104,"line_end":2104,"column_start":28,"column_end":35},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":554},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":170412,"byte_end":170419,"line_start":2115,"line_end":2115,"column_start":30,"column_end":37},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":554},"to":{"krate":1,"index":3002}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":171293,"byte_end":171300,"line_start":2141,"line_end":2141,"column_start":43,"column_end":50},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":554},"to":{"krate":1,"index":3327}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":172158,"byte_end":172165,"line_start":2174,"line_end":2174,"column_start":53,"column_end":60},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":554},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":173643,"byte_end":173647,"line_start":2227,"line_end":2227,"column_start":22,"column_end":26},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":770},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":173885,"byte_end":173889,"line_start":2237,"line_end":2237,"column_start":41,"column_end":45},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":770},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":175295,"byte_end":175302,"line_start":2279,"line_end":2279,"column_start":40,"column_end":47},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":784},"to":{"krate":1,"index":3024}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":175328,"byte_end":175335,"line_start":2281,"line_end":2281,"column_start":12,"column_end":19},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":784},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":176837,"byte_end":176845,"line_start":2326,"line_end":2326,"column_start":34,"column_end":42},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":797},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":178199,"byte_end":178207,"line_start":2370,"line_end":2370,"column_start":47,"column_end":55},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":807},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":178500,"byte_end":178508,"line_start":2383,"line_end":2383,"column_start":56,"column_end":64},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":807},"to":{"krate":1,"index":7791}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":178648,"byte_end":178656,"line_start":2390,"line_end":2390,"column_start":52,"column_end":60},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":807},"to":{"krate":1,"index":8187}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":178732,"byte_end":178740,"line_start":2392,"line_end":2392,"column_start":63,"column_end":71},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":807},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":180028,"byte_end":180038,"line_start":2432,"line_end":2432,"column_start":47,"column_end":57},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":835},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":180331,"byte_end":180341,"line_start":2445,"line_end":2445,"column_start":56,"column_end":66},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":835},"to":{"krate":1,"index":7791}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":180481,"byte_end":180491,"line_start":2452,"line_end":2452,"column_start":52,"column_end":62},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":835},"to":{"krate":1,"index":8187}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":180560,"byte_end":180570,"line_start":2454,"line_end":2454,"column_start":56,"column_end":66},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":835},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":181744,"byte_end":181748,"line_start":2495,"line_end":2495,"column_start":22,"column_end":26},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":863},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":181946,"byte_end":181950,"line_start":2504,"line_end":2504,"column_start":34,"column_end":38},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":863},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":183114,"byte_end":183120,"line_start":2543,"line_end":2543,"column_start":22,"column_end":28},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":876},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":183320,"byte_end":183326,"line_start":2552,"line_end":2552,"column_start":34,"column_end":40},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":876},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":184529,"byte_end":184534,"line_start":2590,"line_end":2590,"column_start":34,"column_end":39},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":889},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":186082,"byte_end":186093,"line_start":2640,"line_end":2640,"column_start":31,"column_end":42},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":900},"to":{"krate":1,"index":3266}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":186516,"byte_end":186532,"line_start":2657,"line_end":2657,"column_start":28,"column_end":44},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":915},"to":{"krate":1,"index":3266}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":186686,"byte_end":186697,"line_start":2664,"line_end":2664,"column_start":31,"column_end":42},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":900},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":187097,"byte_end":187108,"line_start":2682,"line_end":2682,"column_start":33,"column_end":44},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":900},"to":{"krate":1,"index":8187}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":187402,"byte_end":187418,"line_start":2690,"line_end":2690,"column_start":34,"column_end":50},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":935},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":196786,"byte_end":196805,"line_start":2979,"line_end":2979,"column_start":34,"column_end":53},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":972},"to":{"krate":1,"index":3024}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":196937,"byte_end":196956,"line_start":2987,"line_end":2987,"column_start":34,"column_end":53},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":972},"to":{"krate":1,"index":3036}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":200128,"byte_end":200146,"line_start":3087,"line_end":3087,"column_start":41,"column_end":59},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":953},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":202057,"byte_end":202075,"line_start":3146,"line_end":3146,"column_start":41,"column_end":59},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":953},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":203874,"byte_end":203889,"line_start":3197,"line_end":3197,"column_start":41,"column_end":56},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":999},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":206938,"byte_end":206949,"line_start":3292,"line_end":3292,"column_start":41,"column_end":52},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":960},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":212822,"byte_end":212841,"line_start":3486,"line_end":3486,"column_start":41,"column_end":60},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":972},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":225775,"byte_end":225792,"line_start":3885,"line_end":3885,"column_start":41,"column_end":58},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":991},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":230397,"byte_end":230415,"line_start":4031,"line_end":4031,"column_start":47,"column_end":65},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":953},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":230617,"byte_end":230628,"line_start":4037,"line_end":4037,"column_start":61,"column_end":72},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":960},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":230987,"byte_end":231006,"line_start":4046,"line_end":4046,"column_start":61,"column_end":80},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":972},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":231289,"byte_end":231306,"line_start":4055,"line_end":4055,"column_start":47,"column_end":64},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":991},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":231496,"byte_end":231511,"line_start":4061,"line_end":4061,"column_start":47,"column_end":62},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":999},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":234011,"byte_end":234016,"line_start":4145,"line_end":4145,"column_start":61,"column_end":66},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1123},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":235585,"byte_end":235598,"line_start":4201,"line_end":4201,"column_start":34,"column_end":47},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1141},"to":{"krate":1,"index":3024}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":235730,"byte_end":235743,"line_start":4209,"line_end":4209,"column_start":34,"column_end":47},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1141},"to":{"krate":1,"index":3036}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":235903,"byte_end":235916,"line_start":4218,"line_end":4218,"column_start":61,"column_end":74},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1141},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":237155,"byte_end":237166,"line_start":4263,"line_end":4263,"column_start":54,"column_end":65},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1167},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":240200,"byte_end":240208,"line_start":4357,"line_end":4357,"column_start":9,"column_end":17},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1182},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":240603,"byte_end":240611,"line_start":4372,"line_end":4372,"column_start":24,"column_end":32},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1203},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":240878,"byte_end":240886,"line_start":4384,"line_end":4384,"column_start":48,"column_end":56},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1203},"to":{"krate":1,"index":2921}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":242515,"byte_end":242531,"line_start":4441,"line_end":4441,"column_start":45,"column_end":61},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1223},"to":{"krate":1,"index":3024}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":242703,"byte_end":242719,"line_start":4450,"line_end":4450,"column_start":45,"column_end":61},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1223},"to":{"krate":1,"index":3036}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":242935,"byte_end":242951,"line_start":4461,"line_end":4461,"column_start":9,"column_end":25},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1223},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":244305,"byte_end":244319,"line_start":4508,"line_end":4508,"column_start":9,"column_end":23},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1258},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":245658,"byte_end":245671,"line_start":4546,"line_end":4546,"column_start":61,"column_end":74},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1276},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":246038,"byte_end":246051,"line_start":4557,"line_end":4557,"column_start":9,"column_end":22},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1276},"to":{"krate":1,"index":9611}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":248707,"byte_end":248714,"line_start":4639,"line_end":4639,"column_start":54,"column_end":61},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":554},"to":{"krate":1,"index":7722}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":249688,"byte_end":249692,"line_start":4669,"line_end":4669,"column_start":29,"column_end":33},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":770},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":250263,"byte_end":250267,"line_start":4688,"line_end":4688,"column_start":34,"column_end":38},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":770},"to":{"krate":1,"index":7791}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":250421,"byte_end":250425,"line_start":4695,"line_end":4695,"column_start":30,"column_end":34},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":770},"to":{"krate":1,"index":8187}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":250468,"byte_end":250475,"line_start":4697,"line_end":4697,"column_start":29,"column_end":36},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":784},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":251058,"byte_end":251065,"line_start":4716,"line_end":4716,"column_start":34,"column_end":41},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":784},"to":{"krate":1,"index":7791}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":251218,"byte_end":251225,"line_start":4722,"line_end":4722,"column_start":30,"column_end":37},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":784},"to":{"krate":1,"index":8187}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":251266,"byte_end":251273,"line_start":4724,"line_end":4724,"column_start":27,"column_end":34},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":784},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":251501,"byte_end":251509,"line_start":4734,"line_end":4734,"column_start":47,"column_end":55},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":797},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":251865,"byte_end":251873,"line_start":4746,"line_end":4746,"column_start":56,"column_end":64},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":797},"to":{"krate":1,"index":7791}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":252047,"byte_end":252055,"line_start":4752,"line_end":4752,"column_start":52,"column_end":60},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":797},"to":{"krate":1,"index":8187}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":252131,"byte_end":252139,"line_start":4754,"line_end":4754,"column_start":63,"column_end":71},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":797},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":252304,"byte_end":252308,"line_start":4760,"line_end":4760,"column_start":29,"column_end":33},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":863},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":252780,"byte_end":252784,"line_start":4776,"line_end":4776,"column_start":34,"column_end":38},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":863},"to":{"krate":1,"index":7791}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":252937,"byte_end":252941,"line_start":4782,"line_end":4782,"column_start":30,"column_end":34},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":863},"to":{"krate":1,"index":8187}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":252984,"byte_end":252990,"line_start":4784,"line_end":4784,"column_start":29,"column_end":35},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":876},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":253462,"byte_end":253468,"line_start":4800,"line_end":4800,"column_start":34,"column_end":40},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":876},"to":{"krate":1,"index":7791}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":253621,"byte_end":253627,"line_start":4806,"line_end":4806,"column_start":30,"column_end":36},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":876},"to":{"krate":1,"index":8187}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":253670,"byte_end":253679,"line_start":4808,"line_end":4808,"column_start":29,"column_end":38},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":948},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":254159,"byte_end":254168,"line_start":4824,"line_end":4824,"column_start":34,"column_end":43},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":948},"to":{"krate":1,"index":7791}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":254321,"byte_end":254330,"line_start":4830,"line_end":4830,"column_start":30,"column_end":39},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":948},"to":{"krate":1,"index":8187}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":254378,"byte_end":254387,"line_start":4832,"line_end":4832,"column_start":34,"column_end":43},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":948},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":254627,"byte_end":254632,"line_start":4840,"line_end":4840,"column_start":51,"column_end":56},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":889},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":254992,"byte_end":254997,"line_start":4852,"line_end":4852,"column_start":56,"column_end":61},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":889},"to":{"krate":1,"index":7791}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":255175,"byte_end":255180,"line_start":4858,"line_end":4858,"column_start":52,"column_end":57},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":889},"to":{"krate":1,"index":8187}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":255227,"byte_end":255232,"line_start":4860,"line_end":4860,"column_start":30,"column_end":35},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":889},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":255483,"byte_end":255488,"line_start":4871,"line_end":4871,"column_start":41,"column_end":46},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1123},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":262863,"byte_end":262868,"line_start":5118,"line_end":5118,"column_start":50,"column_end":55},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1123},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":263830,"byte_end":263843,"line_start":5151,"line_end":5151,"column_start":41,"column_end":54},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1141},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":275308,"byte_end":275319,"line_start":5508,"line_end":5508,"column_start":41,"column_end":52},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":277671,"byte_end":277679,"line_start":5595,"line_end":5595,"column_start":56,"column_end":64},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":285374,"byte_end":285382,"line_start":5846,"line_end":5846,"column_start":65,"column_end":73},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":286408,"byte_end":286424,"line_start":5879,"line_end":5879,"column_start":56,"column_end":72},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1223},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":297913,"byte_end":297927,"line_start":6237,"line_end":6237,"column_start":56,"column_end":70},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1258},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":300560,"byte_end":300567,"line_start":6333,"line_end":6333,"column_start":43,"column_end":50},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":554},"to":{"krate":1,"index":7718}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":301211,"byte_end":301218,"line_start":6353,"line_end":6353,"column_start":37,"column_end":44},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":554},"to":{"krate":1,"index":7731}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":304174,"byte_end":304181,"line_start":6436,"line_end":6436,"column_start":49,"column_end":56},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":554},"to":{"krate":1,"index":7731}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/map.rs","byte_start":306506,"byte_end":306513,"line_start":6501,"line_end":6501,"column_start":45,"column_end":52},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":554},"to":{"krate":1,"index":7731}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/scopeguard.rs","byte_start":361472,"byte_end":361482,"line_start":24,"line_end":24,"column_start":12,"column_end":22},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1637},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/scopeguard.rs","byte_start":362189,"byte_end":362199,"line_start":45,"line_end":45,"column_start":22,"column_end":32},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1637},"to":{"krate":1,"index":3242}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/scopeguard.rs","byte_start":362352,"byte_end":362362,"line_start":56,"line_end":56,"column_start":25,"column_end":35},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1637},"to":{"krate":1,"index":3255}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/scopeguard.rs","byte_start":362506,"byte_end":362516,"line_start":66,"line_end":66,"column_start":21,"column_end":31},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1637},"to":{"krate":1,"index":3266}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":366800,"byte_end":366807,"line_start":119,"line_end":119,"column_start":58,"column_end":65},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1734},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":367050,"byte_end":367057,"line_start":132,"line_end":132,"column_start":9,"column_end":16},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":368204,"byte_end":368211,"line_start":172,"line_end":172,"column_start":42,"column_end":49},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":369369,"byte_end":369376,"line_start":211,"line_end":211,"column_start":34,"column_end":41},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":373926,"byte_end":373933,"line_start":385,"line_end":385,"column_start":12,"column_end":19},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":376385,"byte_end":376392,"line_start":453,"line_end":453,"column_start":15,"column_end":22},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":379174,"byte_end":379181,"line_start":538,"line_end":538,"column_start":15,"column_end":22},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":399411,"byte_end":399418,"line_start":1147,"line_end":1147,"column_start":29,"column_end":36},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":1734},"to":{"krate":1,"index":2675}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":399698,"byte_end":399705,"line_start":1162,"line_end":1162,"column_start":22,"column_end":29},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":1734},"to":{"krate":1,"index":2680}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":399819,"byte_end":399826,"line_start":1170,"line_end":1170,"column_start":30,"column_end":37},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":1734},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":400058,"byte_end":400065,"line_start":1180,"line_end":1180,"column_start":46,"column_end":53},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":1734},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":400222,"byte_end":400229,"line_start":1189,"line_end":1189,"column_start":35,"column_end":42},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":1734},"to":{"krate":1,"index":7718}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":400716,"byte_end":400723,"line_start":1205,"line_end":1205,"column_start":45,"column_end":52},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":1734},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":401141,"byte_end":401148,"line_start":1224,"line_end":1224,"column_start":29,"column_end":36},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":1734},"to":{"krate":1,"index":7731}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":401746,"byte_end":401753,"line_start":1248,"line_end":1248,"column_start":37,"column_end":44},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":1734},"to":{"krate":1,"index":7731}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":402350,"byte_end":402357,"line_start":1272,"line_end":1272,"column_start":27,"column_end":34},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":1734},"to":{"krate":1,"index":3002}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":409580,"byte_end":409587,"line_start":1524,"line_end":1524,"column_start":51,"column_end":58},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":1734},"to":{"krate":1,"index":7722}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":410471,"byte_end":410475,"line_start":1556,"line_end":1556,"column_start":19,"column_end":23},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":1897},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":410659,"byte_end":410663,"line_start":1564,"line_end":1564,"column_start":26,"column_end":30},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":1897},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":410992,"byte_end":410996,"line_start":1576,"line_end":1576,"column_start":35,"column_end":39},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":1897},"to":{"krate":1,"index":7791}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":411142,"byte_end":411146,"line_start":1582,"line_end":1582,"column_start":27,"column_end":31},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":1897},"to":{"krate":1,"index":8187}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":411193,"byte_end":411197,"line_start":1584,"line_end":1584,"column_start":36,"column_end":40},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":1897},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":411376,"byte_end":411384,"line_start":1590,"line_end":1590,"column_start":44,"column_end":52},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":1901},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":411861,"byte_end":411869,"line_start":1606,"line_end":1606,"column_start":53,"column_end":61},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":1901},"to":{"krate":1,"index":7791}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":412036,"byte_end":412044,"line_start":1612,"line_end":1612,"column_start":49,"column_end":57},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":1901},"to":{"krate":1,"index":8187}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":412112,"byte_end":412120,"line_start":1614,"line_end":1614,"column_start":58,"column_end":66},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":1901},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":412359,"byte_end":412364,"line_start":1621,"line_end":1621,"column_start":44,"column_end":49},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":1905},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":412845,"byte_end":412850,"line_start":1637,"line_end":1637,"column_start":53,"column_end":58},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":1905},"to":{"krate":1,"index":7791}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":413021,"byte_end":413026,"line_start":1643,"line_end":1643,"column_start":49,"column_end":54},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":1905},"to":{"krate":1,"index":8187}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":413098,"byte_end":413103,"line_start":1645,"line_end":1645,"column_start":58,"column_end":63},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":1905},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":413349,"byte_end":413360,"line_start":1652,"line_end":1652,"column_start":47,"column_end":58},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":1910},"to":{"krate":1,"index":3266}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":413696,"byte_end":413707,"line_start":1666,"line_end":1666,"column_start":47,"column_end":58},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":1910},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":414149,"byte_end":414160,"line_start":1685,"line_end":1685,"column_start":52,"column_end":63},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":1910},"to":{"krate":1,"index":8187}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":414253,"byte_end":414265,"line_start":1690,"line_end":1690,"column_start":44,"column_end":56},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":1917},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":414490,"byte_end":414502,"line_start":1700,"line_end":1700,"column_start":32,"column_end":44},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":1917},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":415072,"byte_end":415084,"line_start":1725,"line_end":1725,"column_start":30,"column_end":42},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":1917},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":415341,"byte_end":415353,"line_start":1736,"line_end":1736,"column_start":33,"column_end":45},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":1917},"to":{"krate":1,"index":8187}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":415485,"byte_end":415495,"line_start":1744,"line_end":1744,"column_start":44,"column_end":54},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":1924},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":415718,"byte_end":415728,"line_start":1754,"line_end":1754,"column_start":32,"column_end":42},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":1924},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":416302,"byte_end":416312,"line_start":1779,"line_end":1779,"column_start":33,"column_end":43},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":1924},"to":{"krate":1,"index":8187}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":416430,"byte_end":416440,"line_start":1787,"line_end":1787,"column_start":30,"column_end":40},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":1924},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":416708,"byte_end":416727,"line_start":1798,"line_end":1798,"column_start":44,"column_end":63},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":1931},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":416939,"byte_end":416958,"line_start":1807,"line_end":1807,"column_start":32,"column_end":51},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":1931},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":417362,"byte_end":417381,"line_start":1825,"line_end":1825,"column_start":33,"column_end":52},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":1931},"to":{"krate":1,"index":8187}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":417499,"byte_end":417518,"line_start":1833,"line_end":1833,"column_start":30,"column_end":49},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":1931},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":417786,"byte_end":417791,"line_start":1844,"line_end":1844,"column_start":44,"column_end":49},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":1937},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":417990,"byte_end":417995,"line_start":1853,"line_end":1853,"column_start":33,"column_end":38},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":1937},"to":{"krate":1,"index":8187}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":418113,"byte_end":418118,"line_start":1861,"line_end":1861,"column_start":30,"column_end":35},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":1937},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":418374,"byte_end":418379,"line_start":1872,"line_end":1872,"column_start":32,"column_end":37},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":1937},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":420740,"byte_end":420745,"line_start":1961,"line_end":1961,"column_start":61,"column_end":66},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":2118},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":422082,"byte_end":422095,"line_start":2010,"line_end":2010,"column_start":61,"column_end":74},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":2134},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":423162,"byte_end":423173,"line_start":2048,"line_end":2048,"column_start":61,"column_end":72},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":2145},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":423362,"byte_end":423367,"line_start":2054,"line_end":2054,"column_start":38,"column_end":43},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":2118},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":425423,"byte_end":425436,"line_start":2131,"line_end":2131,"column_start":34,"column_end":47},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":2134},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.12.3/src/set.rs","byte_start":428253,"byte_end":428264,"line_start":2218,"line_end":2218,"column_start":38,"column_end":49},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":2145},"to":{"krate":4294967295,"index":4294967295}}]}