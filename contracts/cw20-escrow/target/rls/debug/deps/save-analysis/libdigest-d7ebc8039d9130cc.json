{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5","program":"/Users/trevorclarke/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","digest","--edition=2018","/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"block-buffer\"","--cfg","feature=\"core-api\"","--cfg","feature=\"default\"","--cfg","feature=\"mac\"","--cfg","feature=\"subtle\"","-C","metadata=d7ebc8039d9130cc","-C","extra-filename=-d7ebc8039d9130cc","--out-dir","/Users/trevorclarke/code/cron/cw-purrbox/contracts/cw20-escrow/target/rls/debug/deps","-L","dependency=/Users/trevorclarke/code/cron/cw-purrbox/contracts/cw20-escrow/target/rls/debug/deps","--extern","block_buffer=/Users/trevorclarke/code/cron/cw-purrbox/contracts/cw20-escrow/target/rls/debug/deps/libblock_buffer-67ba8c948b4d6d05.rmeta","--extern","crypto_common=/Users/trevorclarke/code/cron/cw-purrbox/contracts/cw20-escrow/target/rls/debug/deps/libcrypto_common-8391b1dc30d97952.rmeta","--extern","subtle=/Users/trevorclarke/code/cron/cw-purrbox/contracts/cw20-escrow/target/rls/debug/deps/libsubtle-b97f54e6708d8225.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/trevorclarke/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/trevorclarke/code/cron/cw-purrbox/contracts/cw20-escrow/target/rls/debug/deps/libdigest-d7ebc8039d9130cc.rmeta"},"prelude":{"crate_id":{"name":"digest","disambiguator":[15049202732038179696,0]},"crate_root":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src","external_crates":[{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[16249227214258238047,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[13791225915815425008,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[455111089362928276,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","num":4,"id":{"name":"crypto_common","disambiguator":[14089165646673226514,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","num":5,"id":{"name":"generic_array","disambiguator":[7899941157077680329,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","num":6,"id":{"name":"typenum","disambiguator":[14585012641457782044,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","num":7,"id":{"name":"block_buffer","disambiguator":[5185094059600351175,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","num":8,"id":{"name":"subtle","disambiguator":[10187600383036868428,0]}}],"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":0,"byte_end":10638,"line_start":1,"line_end":301,"column_start":1,"column_end":48}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":57},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":10936,"byte_end":10949,"line_start":8,"line_end":8,"column_start":25,"column_end":38},"alias_span":null,"name":"AlgorithmName","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":4,"index":23},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":10951,"byte_end":10956,"line_start":8,"line_end":8,"column_start":40,"column_end":45},"alias_span":null,"name":"Block","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":4,"index":33},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":10958,"byte_end":10971,"line_start":8,"line_end":8,"column_start":47,"column_end":60},"alias_span":null,"name":"BlockSizeUser","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":4,"index":44},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":10973,"byte_end":10987,"line_start":8,"line_end":8,"column_start":62,"column_end":76},"alias_span":null,"name":"OutputSizeUser","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":4,"index":55},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":10989,"byte_end":10994,"line_start":8,"line_end":8,"column_start":78,"column_end":83},"alias_span":null,"name":"Reset","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":754},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":11207,"byte_end":11228,"line_start":21,"line_end":21,"column_start":22,"column_end":43},"alias_span":null,"name":"CtVariableCoreWrapper","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":765},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":11251,"byte_end":11272,"line_start":22,"line_end":22,"column_start":22,"column_end":43},"alias_span":null,"name":"RtVariableCoreWrapper","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":394},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":11292,"byte_end":11301,"line_start":23,"line_end":23,"column_start":19,"column_end":28},"alias_span":null,"name":"CoreProxy","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":773},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":11303,"byte_end":11314,"line_start":23,"line_end":23,"column_start":30,"column_end":41},"alias_span":null,"name":"CoreWrapper","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":783},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":11337,"byte_end":11357,"line_start":24,"line_end":24,"column_start":21,"column_end":41},"alias_span":null,"name":"XofReaderCoreWrapper","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":7,"index":0},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":2282,"byte_end":2294,"line_start":61,"line_end":61,"column_start":9,"column_end":21},"alias_span":null,"name":"block_buffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":0},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":2394,"byte_end":2407,"line_start":65,"line_end":65,"column_start":9,"column_end":22},"alias_span":null,"name":"crypto_common","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":501},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":2434,"byte_end":2440,"line_start":67,"line_end":67,"column_start":25,"column_end":31},"alias_span":null,"name":"Digest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":534},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":2442,"byte_end":2451,"line_start":67,"line_end":67,"column_start":33,"column_end":42},"alias_span":null,"name":"DynDigest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":500},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":2453,"byte_end":2463,"line_start":67,"line_end":67,"column_start":44,"column_end":54},"alias_span":null,"name":"HashMarker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":0},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":2490,"byte_end":2503,"line_start":68,"line_end":68,"column_start":25,"column_end":38},"alias_span":null,"name":"generic_array","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":6,"index":0},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":2505,"byte_end":2512,"line_start":68,"line_end":68,"column_start":40,"column_end":47},"alias_span":null,"name":"typenum","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":6,"index":2827},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":2523,"byte_end":2529,"line_start":68,"line_end":68,"column_start":58,"column_end":64},"alias_span":null,"name":"consts","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":27},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":2531,"byte_end":2537,"line_start":68,"line_end":68,"column_start":66,"column_end":72},"alias_span":null,"name":"Output","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":44},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":2539,"byte_end":2553,"line_start":68,"line_end":68,"column_start":74,"column_end":88},"alias_span":null,"name":"OutputSizeUser","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":55},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":2555,"byte_end":2560,"line_start":68,"line_end":68,"column_start":90,"column_end":95},"alias_span":null,"name":"Reset","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":65},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":2611,"byte_end":2620,"line_start":70,"line_end":70,"column_start":25,"column_end":34},"alias_span":null,"name":"InnerInit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":85},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":2622,"byte_end":2635,"line_start":70,"line_end":70,"column_start":36,"column_end":49},"alias_span":null,"name":"InvalidLength","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":86},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":2622,"byte_end":2635,"line_start":70,"line_end":70,"column_start":36,"column_end":49},"alias_span":null,"name":"InvalidLength","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":29},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":2637,"byte_end":2640,"line_start":70,"line_end":70,"column_start":51,"column_end":54},"alias_span":null,"name":"Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":59},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":2642,"byte_end":2649,"line_start":70,"line_end":70,"column_start":56,"column_end":63},"alias_span":null,"name":"KeyInit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":803},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":2690,"byte_end":2698,"line_start":72,"line_end":72,"column_start":15,"column_end":23},"alias_span":null,"name":"CtOutput","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":591},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":2700,"byte_end":2703,"line_start":72,"line_end":72,"column_start":25,"column_end":28},"alias_span":null,"name":"Mac","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":809},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":2705,"byte_end":2713,"line_start":72,"line_end":72,"column_start":30,"column_end":38},"alias_span":null,"name":"MacError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":810},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":2705,"byte_end":2713,"line_start":72,"line_end":72,"column_start":30,"column_end":38},"alias_span":null,"name":"MacError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":590},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":2715,"byte_end":2724,"line_start":72,"line_end":72,"column_start":40,"column_end":49},"alias_span":null,"name":"MacMarker","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":0,"byte_end":10638,"line_start":1,"line_end":301,"column_start":1,"column_end":48},"name":"","qualname":"::","value":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":473},{"krate":0,"index":547},{"krate":0,"index":639},{"krate":0,"index":642},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":649},{"krate":0,"index":652},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":659},{"krate":0,"index":662},{"krate":0,"index":665},{"krate":0,"index":668},{"krate":0,"index":671},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":681},{"krate":0,"index":684},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":691},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":697},{"krate":0,"index":700},{"krate":0,"index":703},{"krate":0,"index":707},{"krate":0,"index":710},{"krate":0,"index":713},{"krate":0,"index":715},{"krate":0,"index":721},{"krate":0,"index":724},{"krate":0,"index":732},{"krate":0,"index":824},{"krate":0,"index":826},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":831},{"krate":0,"index":734},{"krate":0,"index":833},{"krate":0,"index":835},{"krate":0,"index":837},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":736}],"decl_id":null,"docs":" This crate provides traits which describe functionality of cryptographic hash\n functions and Message Authentication algorithms.","sig":null,"attributes":[{"value":"/ This crate provides traits which describe functionality of cryptographic hash","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":0,"byte_end":81,"line_start":1,"line_end":1,"column_start":1,"column_end":82}},{"value":"/ functions and Message Authentication algorithms.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":82,"byte_end":134,"line_start":2,"line_end":2,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":135,"byte_end":138,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Traits in this repository are organized into the following levels:","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":139,"byte_end":209,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":210,"byte_end":213,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ - **High-level convenience traits**: [`Digest`], [`DynDigest`], [`Mac`].","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":214,"byte_end":290,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/   Wrappers around lower-level traits for most common use-cases. Users should","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":291,"byte_end":371,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/   usually prefer using these traits.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":372,"byte_end":412,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"/ - **Mid-level traits**: [`Update`], [`FixedOutput`], [`FixedOutputReset`],","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":413,"byte_end":491,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/   [`ExtendableOutput`], [`ExtendableOutputReset`], [`XofReader`],","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":492,"byte_end":561,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/   [`VariableOutput`], [`Reset`], [`KeyInit`], and [`InnerInit`]. These","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":562,"byte_end":636,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/   traits atomically describe available functionality of an algorithm.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":637,"byte_end":710,"line_start":12,"line_end":12,"column_start":1,"column_end":74}},{"value":"/ - **Marker traits**: [`HashMarker`], [`MacMarker`]. Used to distinguish","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":711,"byte_end":786,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/   different algorithm classes.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":787,"byte_end":821,"line_start":14,"line_end":14,"column_start":1,"column_end":35}},{"value":"/ - **Low-level traits** defined in the [`core_api`] module. These traits","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":822,"byte_end":897,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"/   operate at a block-level and do not contain any built-in buffering.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":898,"byte_end":971,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"/   They are intended to be implemented by low-level algorithm providers only.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":972,"byte_end":1052,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/   Usually they should not be used in application-level code.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":1053,"byte_end":1117,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":1118,"byte_end":1121,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Additionally hash functions implement traits from the standard library:","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":1122,"byte_end":1197,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ [`Default`], [`Clone`], [`Write`][std::io::Write]. The latter is","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":1198,"byte_end":1266,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/ feature-gated behind `std` feature, which is usually enabled by default","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":1267,"byte_end":1342,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ by hash implementation crates.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":1343,"byte_end":1377,"line_start":23,"line_end":23,"column_start":1,"column_end":35}},{"value":"no_std","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":1379,"byte_end":1389,"line_start":25,"line_end":25,"column_start":1,"column_end":11}},{"value":"forbid(unsafe_code)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":1429,"byte_end":1452,"line_start":27,"line_end":27,"column_start":1,"column_end":24}},{"value":"warn(missing_docs, rust_2018_idioms)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":1650,"byte_end":1690,"line_start":32,"line_end":32,"column_start":1,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"core_api","qualname":"::core_api","value":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":172},{"krate":0,"index":261},{"krate":0,"index":403},{"krate":0,"index":440},{"krate":0,"index":443},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":450},{"krate":0,"index":453},{"krate":0,"index":456},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":462},{"krate":0,"index":464},{"krate":0,"index":467},{"krate":0,"index":469},{"krate":0,"index":793},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":801}],"decl_id":null,"docs":" Low-level traits operating on blocks and wrappers around them.","sig":null,"attributes":[{"value":"cfg(feature = \"core-api\")","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":2048,"byte_end":2076,"line_start":52,"line_end":52,"column_start":1,"column_end":29}},{"value":"/ Low-level traits operating on blocks and wrappers around them.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":10640,"byte_end":10706,"line_start":1,"line_end":1,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":10707,"byte_end":10710,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Usage of traits in this module in user code is discouraged. Instead use","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":10711,"byte_end":10786,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ core algorithm wrapped by the wrapper types, which implement the","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":10787,"byte_end":10855,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"/ higher-level traits.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":10856,"byte_end":10880,"line_start":5,"line_end":5,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":738},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/ct_variable.rs","byte_start":15521,"byte_end":15526,"line_start":20,"line_end":20,"column_start":12,"column_end":17},"name":"NoOid","qualname":"::core_api::ct_variable::NoOid","value":"","parent":null,"children":[],"decl_id":null,"docs":" Dummy type used with [`CtVariableCoreWrapper`] in cases when\n resulting hash does not have a known OID.\n","sig":null,"attributes":[{"value":"/ Dummy type used with [`CtVariableCoreWrapper`] in cases when","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/ct_variable.rs","byte_start":15348,"byte_end":15412,"line_start":17,"line_end":17,"column_start":1,"column_end":65}},{"value":"/ resulting hash does not have a known OID.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/ct_variable.rs","byte_start":15413,"byte_end":15458,"line_start":18,"line_end":18,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":754},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/ct_variable.rs","byte_start":15646,"byte_end":15667,"line_start":25,"line_end":25,"column_start":12,"column_end":33},"name":"CtVariableCoreWrapper","qualname":"::core_api::ct_variable::CtVariableCoreWrapper","value":"CtVariableCoreWrapper {  }","parent":null,"children":[{"krate":0,"index":758},{"krate":0,"index":759}],"decl_id":null,"docs":" Wrapper around [`VariableOutputCore`] which selects output size\n at compile time.\n","sig":null,"attributes":[{"value":"/ Wrapper around [`VariableOutputCore`] which selects output size","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/ct_variable.rs","byte_start":15529,"byte_end":15596,"line_start":22,"line_end":22,"column_start":1,"column_end":68}},{"value":"/ at compile time.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/ct_variable.rs","byte_start":15597,"byte_end":15617,"line_start":23,"line_end":23,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":765},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/rt_variable.rs","byte_start":21395,"byte_end":21416,"line_start":13,"line_end":13,"column_start":12,"column_end":33},"name":"RtVariableCoreWrapper","qualname":"::core_api::rt_variable::RtVariableCoreWrapper","value":"RtVariableCoreWrapper {  }","parent":null,"children":[{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769}],"decl_id":null,"docs":" Wrapper around [`VariableOutputCore`] which selects output size\n at run time.\n","sig":null,"attributes":[{"value":"/ Wrapper around [`VariableOutputCore`] which selects output size","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/rt_variable.rs","byte_start":21282,"byte_end":21349,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/ at run time.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/rt_variable.rs","byte_start":21350,"byte_end":21366,"line_start":11,"line_end":11,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":773},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":26057,"byte_end":26068,"line_start":24,"line_end":24,"column_start":12,"column_end":23},"name":"CoreWrapper","qualname":"::core_api::wrapper::CoreWrapper","value":"CoreWrapper {  }","parent":null,"children":[{"krate":0,"index":775},{"krate":0,"index":776}],"decl_id":null,"docs":" Wrapper around [`BufferKindUser`].","sig":null,"attributes":[{"value":"/ Wrapper around [`BufferKindUser`].","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":25908,"byte_end":25946,"line_start":20,"line_end":20,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":25947,"byte_end":25950,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ It handles data buffering and implements the slice-based traits.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":25951,"byte_end":26019,"line_start":22,"line_end":22,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":27039,"byte_end":27048,"line_start":70,"line_end":70,"column_start":12,"column_end":21},"name":"from_core","qualname":"<CoreWrapper<T>>::from_core","value":"pub fn from_core(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new wrapper from `core`.\n","sig":null,"attributes":[{"value":"/ Create new wrapper from `core`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":26978,"byte_end":27013,"line_start":68,"line_end":68,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":27018,"byte_end":27027,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":27215,"byte_end":27224,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"decompose","qualname":"<CoreWrapper<T>>::decompose","value":"pub fn decompose(Self) -> (T, Buffer<T>)","parent":null,"children":[],"decl_id":null,"docs":" Decompose wrapper into inner parts.\n","sig":null,"attributes":[{"value":"/ Decompose wrapper into inner parts.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":27150,"byte_end":27189,"line_start":75,"line_end":75,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":27194,"byte_end":27203,"line_start":76,"line_end":76,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":394},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":31944,"byte_end":31953,"line_start":266,"line_end":266,"column_start":11,"column_end":20},"name":"CoreProxy","qualname":"::core_api::wrapper::CoreProxy","value":"CoreProxy: sealed::Sealed","parent":null,"children":[{"krate":0,"index":395}],"decl_id":null,"docs":" A proxy trait to a core type implemented by [`CoreWrapper`]\n","sig":null,"attributes":[{"value":"/ A proxy trait to a core type implemented by [`CoreWrapper`]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":31753,"byte_end":31816,"line_start":263,"line_end":263,"column_start":1,"column_end":64}}]},{"kind":"Type","id":{"krate":0,"index":395},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":32022,"byte_end":32026,"line_start":268,"line_end":268,"column_start":10,"column_end":14},"name":"Core","qualname":"::core_api::wrapper::CoreProxy::Core","value":"type Core;","parent":{"krate":0,"index":394},"children":[],"decl_id":null,"docs":" Type wrapped by [`CoreWrapper`].\n","sig":null,"attributes":[{"value":"/ Type wrapped by [`CoreWrapper`].","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":31976,"byte_end":32012,"line_start":267,"line_end":267,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":397},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":32058,"byte_end":32064,"line_start":272,"line_end":272,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::core_api::wrapper::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":783},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/xof_reader.rs","byte_start":32706,"byte_end":32726,"line_start":11,"line_end":11,"column_start":12,"column_end":32},"name":"XofReaderCoreWrapper","qualname":"::core_api::xof_reader::XofReaderCoreWrapper","value":"XofReaderCoreWrapper {  }","parent":null,"children":[{"krate":0,"index":785},{"krate":0,"index":786}],"decl_id":null,"docs":" Wrapper around [`XofReaderCore`] implementations.","sig":null,"attributes":[{"value":"/ Wrapper around [`XofReaderCore`] implementations.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/xof_reader.rs","byte_start":32544,"byte_end":32597,"line_start":7,"line_end":7,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/xof_reader.rs","byte_start":32598,"byte_end":32601,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ It handles data buffering and implements the mid-level traits.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/xof_reader.rs","byte_start":32602,"byte_end":32668,"line_start":9,"line_end":9,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":456},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":11435,"byte_end":11441,"line_start":27,"line_end":27,"column_start":10,"column_end":16},"name":"Buffer","qualname":"::core_api::Buffer","value":"BlockBuffer<<S as BlockSizeUser>::BlockSize,\n<S as BufferKindUser>::BufferKind>","parent":null,"children":[],"decl_id":null,"docs":" Buffer type used by type which implements [`BufferKindUser`].\n","sig":null,"attributes":[{"value":"/ Buffer type used by type which implements [`BufferKindUser`].","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":11360,"byte_end":11425,"line_start":26,"line_end":26,"column_start":1,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":458},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":11583,"byte_end":11593,"line_start":31,"line_end":31,"column_start":11,"column_end":21},"name":"UpdateCore","qualname":"::core_api::UpdateCore","value":"UpdateCore: BlockSizeUser","parent":null,"children":[{"krate":0,"index":459}],"decl_id":null,"docs":" Types which consume data in blocks.\n","sig":null,"attributes":[{"value":"/ Types which consume data in blocks.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":11533,"byte_end":11572,"line_start":30,"line_end":30,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":11671,"byte_end":11684,"line_start":33,"line_end":33,"column_start":8,"column_end":21},"name":"update_blocks","qualname":"::core_api::UpdateCore::update_blocks","value":"pub fn update_blocks(&mut Self, &[Block<Self>])","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":" Update state using the provided data blocks.\n","sig":null,"attributes":[{"value":"/ Update state using the provided data blocks.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":11615,"byte_end":11663,"line_start":32,"line_end":32,"column_start":5,"column_end":53}}]},{"kind":"Trait","id":{"krate":0,"index":460},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":11785,"byte_end":11799,"line_start":37,"line_end":37,"column_start":11,"column_end":25},"name":"BufferKindUser","qualname":"::core_api::BufferKindUser","value":"BufferKindUser: BlockSizeUser","parent":null,"children":[{"krate":0,"index":461}],"decl_id":null,"docs":" Types which use [`BlockBuffer`] functionality.\n","sig":null,"attributes":[{"value":"/ Types which use [`BlockBuffer`] functionality.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":11724,"byte_end":11774,"line_start":36,"line_end":36,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":461},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":11878,"byte_end":11888,"line_start":39,"line_end":39,"column_start":10,"column_end":20},"name":"BufferKind","qualname":"::core_api::BufferKindUser::BufferKind","value":"type BufferKind: BufferKind;","parent":{"krate":0,"index":460},"children":[],"decl_id":null,"docs":" Block buffer kind over which type operates.\n","sig":null,"attributes":[{"value":"/ Block buffer kind over which type operates.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":11821,"byte_end":11868,"line_start":38,"line_end":38,"column_start":5,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":462},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":11973,"byte_end":11988,"line_start":43,"line_end":43,"column_start":11,"column_end":26},"name":"FixedOutputCore","qualname":"::core_api::FixedOutputCore","value":"FixedOutputCore: UpdateCore + BufferKindUser + OutputSizeUser","parent":null,"children":[{"krate":0,"index":463}],"decl_id":null,"docs":" Core trait for hash functions with fixed output size.\n","sig":null,"attributes":[{"value":"/ Core trait for hash functions with fixed output size.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":11905,"byte_end":11962,"line_start":42,"line_end":42,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":12282,"byte_end":12301,"line_start":50,"line_end":50,"column_start":8,"column_end":27},"name":"finalize_fixed_core","qualname":"::core_api::FixedOutputCore::finalize_fixed_core","value":"pub fn finalize_fixed_core(&mut Self, &mut Buffer<Self>, &mut Output<Self>)","parent":{"krate":0,"index":462},"children":[],"decl_id":null,"docs":" Finalize state using remaining data stored in the provided block buffer,\n write result into provided array and leave `self` in a dirty state.\n","sig":null,"attributes":[{"value":"/ Finalize state using remaining data stored in the provided block buffer,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":12122,"byte_end":12198,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ write result into provided array and leave `self` in a dirty state.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":12203,"byte_end":12274,"line_start":49,"line_end":49,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":464},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":12447,"byte_end":12467,"line_start":54,"line_end":54,"column_start":11,"column_end":31},"name":"ExtendableOutputCore","qualname":"::core_api::ExtendableOutputCore","value":"ExtendableOutputCore: UpdateCore + BufferKindUser","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":466}],"decl_id":null,"docs":" Core trait for hash functions with extendable (XOF) output size.\n","sig":null,"attributes":[{"value":"/ Core trait for hash functions with extendable (XOF) output size.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":12368,"byte_end":12436,"line_start":53,"line_end":53,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":465},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":12620,"byte_end":12630,"line_start":60,"line_end":60,"column_start":10,"column_end":20},"name":"ReaderCore","qualname":"::core_api::ExtendableOutputCore::ReaderCore","value":"type ReaderCore: XofReaderCore;","parent":{"krate":0,"index":464},"children":[],"decl_id":null,"docs":" XOF reader core state.\n","sig":null,"attributes":[{"value":"/ XOF reader core state.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":12584,"byte_end":12610,"line_start":59,"line_end":59,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":12774,"byte_end":12791,"line_start":64,"line_end":64,"column_start":8,"column_end":25},"name":"finalize_xof_core","qualname":"::core_api::ExtendableOutputCore::finalize_xof_core","value":"pub fn finalize_xof_core(&mut Self, &mut Buffer<Self>) -> Self::ReaderCore","parent":{"krate":0,"index":464},"children":[],"decl_id":null,"docs":" Retrieve XOF reader using remaining data stored in the block buffer\n and leave hasher in a dirty state.\n","sig":null,"attributes":[{"value":"/ Retrieve XOF reader using remaining data stored in the block buffer","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":12652,"byte_end":12723,"line_start":62,"line_end":62,"column_start":5,"column_end":76}},{"value":"/ and leave hasher in a dirty state.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":12728,"byte_end":12766,"line_start":63,"line_end":63,"column_start":5,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":467},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":12931,"byte_end":12944,"line_start":68,"line_end":68,"column_start":11,"column_end":24},"name":"XofReaderCore","qualname":"::core_api::XofReaderCore","value":"XofReaderCore: BlockSizeUser","parent":null,"children":[{"krate":0,"index":468}],"decl_id":null,"docs":" Core reader trait for extendable-output function (XOF) result.\n","sig":null,"attributes":[{"value":"/ Core reader trait for extendable-output function (XOF) result.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":12854,"byte_end":12920,"line_start":67,"line_end":67,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":12998,"byte_end":13008,"line_start":70,"line_end":70,"column_start":8,"column_end":18},"name":"read_block","qualname":"::core_api::XofReaderCore::read_block","value":"pub fn read_block(&mut Self) -> Block<Self>","parent":{"krate":0,"index":467},"children":[],"decl_id":null,"docs":" Read next XOF block.\n","sig":null,"attributes":[{"value":"/ Read next XOF block.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":12966,"byte_end":12990,"line_start":69,"line_end":69,"column_start":5,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":469},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":13583,"byte_end":13601,"line_start":84,"line_end":84,"column_start":11,"column_end":29},"name":"VariableOutputCore","qualname":"::core_api::VariableOutputCore","value":"VariableOutputCore: UpdateCore + OutputSizeUser + BufferKindUser + Sized","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472}],"decl_id":null,"docs":" Core trait for hash functions with variable output size.","sig":null,"attributes":[{"value":"/ Core trait for hash functions with variable output size.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":13039,"byte_end":13099,"line_start":73,"line_end":73,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":13100,"byte_end":13103,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Maximum output size is equal to [`OutputSizeUser::OutputSize`].","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":13104,"byte_end":13171,"line_start":75,"line_end":75,"column_start":1,"column_end":68}},{"value":"/ Users are expected to truncate result returned by the","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":13172,"byte_end":13229,"line_start":76,"line_end":76,"column_start":1,"column_end":58}},{"value":"/ [`finalize_variable_core`] to `output_size` passed to the [`new`] method","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":13230,"byte_end":13306,"line_start":77,"line_end":77,"column_start":1,"column_end":77}},{"value":"/ during construction. Truncation side is defined by the [`TRUNC_SIDE`]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":13307,"byte_end":13380,"line_start":78,"line_end":78,"column_start":1,"column_end":74}},{"value":"/ associated constant.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":13381,"byte_end":13405,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":13406,"byte_end":13409,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ [`finalize_variable_core`]: VariableOutputCore::finalize_variable_core","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":13410,"byte_end":13484,"line_start":81,"line_end":81,"column_start":1,"column_end":75}},{"value":"/ [`new`]: VariableOutputCore::new","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":13485,"byte_end":13521,"line_start":82,"line_end":82,"column_start":1,"column_end":37}},{"value":"/ [`TRUNC_SIDE`]: VariableOutputCore::TRUNC_SIDE","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":13522,"byte_end":13572,"line_start":83,"line_end":83,"column_start":1,"column_end":51}}]},{"kind":"Const","id":{"krate":0,"index":470},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":13806,"byte_end":13816,"line_start":90,"line_end":90,"column_start":11,"column_end":21},"name":"TRUNC_SIDE","qualname":"::core_api::VariableOutputCore::TRUNC_SIDE","value":"TruncSide","parent":{"krate":0,"index":469},"children":[],"decl_id":null,"docs":" Side which should be used in a truncated result.\n","sig":null,"attributes":[{"value":"/ Side which should be used in a truncated result.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":13743,"byte_end":13795,"line_start":89,"line_end":89,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":14123,"byte_end":14126,"line_start":99,"line_end":99,"column_start":8,"column_end":11},"name":"new","qualname":"::core_api::VariableOutputCore::new","value":"pub fn new(usize) -> Result<Self, InvalidOutputSize>","parent":{"krate":0,"index":469},"children":[],"decl_id":null,"docs":" Initialize hasher state for given output size.","sig":null,"attributes":[{"value":"/ Initialize hasher state for given output size.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":13834,"byte_end":13884,"line_start":92,"line_end":92,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":13889,"byte_end":13892,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Returns [`InvalidOutputSize`] if `output_size` is not valid for","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":13897,"byte_end":13964,"line_start":94,"line_end":94,"column_start":5,"column_end":72}},{"value":"/ the algorithm, e.g. if it's bigger than the [`OutputSize`]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":13969,"byte_end":14031,"line_start":95,"line_end":95,"column_start":5,"column_end":67}},{"value":"/ associated type.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":14036,"byte_end":14056,"line_start":96,"line_end":96,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":14061,"byte_end":14064,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ [`OutputSize`]: OutputSizeUser::OutputSize","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":14069,"byte_end":14115,"line_start":98,"line_end":98,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":14512,"byte_end":14534,"line_start":108,"line_end":108,"column_start":8,"column_end":30},"name":"finalize_variable_core","qualname":"::core_api::VariableOutputCore::finalize_variable_core","value":"pub fn finalize_variable_core(&mut Self, &mut Buffer<Self>, &mut Output<Self>)","parent":{"krate":0,"index":469},"children":[],"decl_id":null,"docs":" Finalize hasher and write full hashing result into the `out` buffer.","sig":null,"attributes":[{"value":"/ Finalize hasher and write full hashing result into the `out` buffer.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":14188,"byte_end":14260,"line_start":101,"line_end":101,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":14265,"byte_end":14268,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ The result must be truncated to `output_size` used during hasher","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":14273,"byte_end":14341,"line_start":103,"line_end":103,"column_start":5,"column_end":73}},{"value":"/ construction. Truncation side is defined by the [`TRUNC_SIDE`]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":14346,"byte_end":14412,"line_start":104,"line_end":104,"column_start":5,"column_end":71}},{"value":"/ associated constant.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":14417,"byte_end":14441,"line_start":105,"line_end":105,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":14446,"byte_end":14449,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ [`TRUNC_SIDE`]: VariableOutputCore::TRUNC_SIDE","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":14454,"byte_end":14504,"line_start":107,"line_end":107,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":794},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":14792,"byte_end":14796,"line_start":116,"line_end":116,"column_start":5,"column_end":9},"name":"Left","qualname":"::core_api::TruncSide::Left","value":"TruncSide::Left","parent":{"krate":0,"index":793},"children":[],"decl_id":null,"docs":" Truncate left side, i.e. `&out[..n]`.\n","sig":null,"attributes":[{"value":"/ Truncate left side, i.e. `&out[..n]`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":14746,"byte_end":14787,"line_start":115,"line_end":115,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":796},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":14849,"byte_end":14854,"line_start":118,"line_end":118,"column_start":5,"column_end":10},"name":"Right","qualname":"::core_api::TruncSide::Right","value":"TruncSide::Right","parent":{"krate":0,"index":793},"children":[],"decl_id":null,"docs":" Truncate right side, i.e. `&out[m..]`.\n","sig":null,"attributes":[{"value":"/ Truncate right side, i.e. `&out[m..]`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":14802,"byte_end":14844,"line_start":117,"line_end":117,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":793},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":14730,"byte_end":14739,"line_start":114,"line_end":114,"column_start":10,"column_end":19},"name":"TruncSide","qualname":"::core_api::TruncSide","value":"pub enum TruncSide { Left, Right, }","parent":null,"children":[{"krate":0,"index":794},{"krate":0,"index":796}],"decl_id":null,"docs":" Type which used for defining truncation side in the [`VariableOutputCore`]\n trait.\n","sig":null,"attributes":[{"value":"/ Type which used for defining truncation side in the [`VariableOutputCore`]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":14601,"byte_end":14679,"line_start":111,"line_end":111,"column_start":1,"column_end":79}},{"value":"/ trait.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":14680,"byte_end":14690,"line_start":112,"line_end":112,"column_start":1,"column_end":11}}]},{"kind":"Trait","id":{"krate":0,"index":500},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":34238,"byte_end":34248,"line_start":8,"line_end":8,"column_start":11,"column_end":21},"name":"HashMarker","qualname":"::digest::HashMarker","value":"HashMarker","parent":null,"children":[],"decl_id":null,"docs":" Marker trait for cryptographic hash functions.\n","sig":null,"attributes":[{"value":"/ Marker trait for cryptographic hash functions.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":34177,"byte_end":34227,"line_start":7,"line_end":7,"column_start":1,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":501},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":34518,"byte_end":34524,"line_start":15,"line_end":15,"column_start":11,"column_end":17},"name":"Digest","qualname":"::digest::Digest","value":"Digest: OutputSizeUser","parent":null,"children":[{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":505},{"krate":0,"index":507},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515}],"decl_id":null,"docs":" Convinience wrapper trait covering functionality of cryptographic hash\n functions with fixed output size.","sig":null,"attributes":[{"value":"/ Convinience wrapper trait covering functionality of cryptographic hash","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":34253,"byte_end":34327,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ functions with fixed output size.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":34328,"byte_end":34365,"line_start":11,"line_end":11,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":34366,"byte_end":34369,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This trait wraps [`Update`], [`FixedOutput`], [`Default`], and","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":34370,"byte_end":34436,"line_start":13,"line_end":13,"column_start":1,"column_end":67}},{"value":"/ [`HashMarker`] traits and provides additional convenience methods.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":34437,"byte_end":34507,"line_start":14,"line_end":14,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":34586,"byte_end":34589,"line_start":17,"line_end":17,"column_start":8,"column_end":11},"name":"new","qualname":"::digest::Digest::new","value":"pub fn new() -> Self","parent":{"krate":0,"index":501},"children":[],"decl_id":null,"docs":" Create new hasher instance.\n","sig":null,"attributes":[{"value":"/ Create new hasher instance.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":34547,"byte_end":34578,"line_start":16,"line_end":16,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":34683,"byte_end":34698,"line_start":20,"line_end":20,"column_start":8,"column_end":23},"name":"new_with_prefix","qualname":"::digest::Digest::new_with_prefix","value":"pub fn new_with_prefix<impl AsRef<[u8]>: AsRef<[u8]>>(impl AsRef<[u8]>)\n-> Self","parent":{"krate":0,"index":501},"children":[],"decl_id":null,"docs":" Create new hasher instance which has processed the provided data.\n","sig":null,"attributes":[{"value":"/ Create new hasher instance which has processed the provided data.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":34606,"byte_end":34675,"line_start":19,"line_end":19,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":34791,"byte_end":34797,"line_start":23,"line_end":23,"column_start":8,"column_end":14},"name":"update","qualname":"::digest::Digest::update","value":"pub fn update<impl AsRef<[u8]>: AsRef<[u8]>>(&mut Self, impl AsRef<[u8]>)","parent":{"krate":0,"index":501},"children":[],"decl_id":null,"docs":" Process data, updating the internal state.\n","sig":null,"attributes":[{"value":"/ Process data, updating the internal state.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":34737,"byte_end":34783,"line_start":22,"line_end":22,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":34906,"byte_end":34918,"line_start":27,"line_end":27,"column_start":8,"column_end":20},"name":"chain_update","qualname":"::digest::Digest::chain_update","value":"pub fn chain_update<impl AsRef<[u8]>: AsRef<[u8]>>(Self, impl AsRef<[u8]>)\n-> Self","parent":{"krate":0,"index":501},"children":[],"decl_id":null,"docs":" Process input data in a chained manner.\n","sig":null,"attributes":[{"value":"/ Process input data in a chained manner.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":34839,"byte_end":34882,"line_start":25,"line_end":25,"column_start":5,"column_end":48}},{"value":"must_use","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":34887,"byte_end":34898,"line_start":26,"line_end":26,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":35019,"byte_end":35027,"line_start":30,"line_end":30,"column_start":8,"column_end":16},"name":"finalize","qualname":"::digest::Digest::finalize","value":"pub fn finalize(Self) -> Output<Self>","parent":{"krate":0,"index":501},"children":[],"decl_id":null,"docs":" Retrieve result and consume hasher instance.\n","sig":null,"attributes":[{"value":"/ Retrieve result and consume hasher instance.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":34963,"byte_end":35011,"line_start":29,"line_end":29,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":35133,"byte_end":35146,"line_start":33,"line_end":33,"column_start":8,"column_end":21},"name":"finalize_into","qualname":"::digest::Digest::finalize_into","value":"pub fn finalize_into(Self, &mut Output<Self>)","parent":{"krate":0,"index":501},"children":[],"decl_id":null,"docs":" Write result into provided array and consume the hasher instance.\n","sig":null,"attributes":[{"value":"/ Write result into provided array and consume the hasher instance.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":35056,"byte_end":35125,"line_start":32,"line_end":32,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":35237,"byte_end":35251,"line_start":36,"line_end":36,"column_start":8,"column_end":22},"name":"finalize_reset","qualname":"::digest::Digest::finalize_reset","value":"pub fn finalize_reset(&mut Self) -> Output<Self> where Self: FixedOutputReset","parent":{"krate":0,"index":501},"children":[],"decl_id":null,"docs":" Retrieve result and reset hasher instance.\n","sig":null,"attributes":[{"value":"/ Retrieve result and reset hasher instance.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":35183,"byte_end":35229,"line_start":35,"line_end":35,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":35401,"byte_end":35420,"line_start":41,"line_end":41,"column_start":8,"column_end":27},"name":"finalize_into_reset","qualname":"::digest::Digest::finalize_into_reset","value":"pub fn finalize_into_reset(&mut Self, &mut Output<Self>) where\nSelf: FixedOutputReset","parent":{"krate":0,"index":501},"children":[],"decl_id":null,"docs":" Write result into provided array and reset the hasher instance.\n","sig":null,"attributes":[{"value":"/ Write result into provided array and reset the hasher instance.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":35326,"byte_end":35393,"line_start":40,"line_end":40,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":35558,"byte_end":35563,"line_start":46,"line_end":46,"column_start":8,"column_end":13},"name":"reset","qualname":"::digest::Digest::reset","value":"pub fn reset(&mut Self) where Self: Reset","parent":{"krate":0,"index":501},"children":[],"decl_id":null,"docs":" Reset hasher instance to its initial state.\n","sig":null,"attributes":[{"value":"/ Reset hasher instance to its initial state.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":35503,"byte_end":35550,"line_start":45,"line_end":45,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":35652,"byte_end":35663,"line_start":51,"line_end":51,"column_start":8,"column_end":19},"name":"output_size","qualname":"::digest::Digest::output_size","value":"pub fn output_size() -> usize","parent":{"krate":0,"index":501},"children":[],"decl_id":null,"docs":" Get output size of the hasher\n","sig":null,"attributes":[{"value":"/ Get output size of the hasher","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":35611,"byte_end":35644,"line_start":50,"line_end":50,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":35716,"byte_end":35722,"line_start":54,"line_end":54,"column_start":8,"column_end":14},"name":"digest","qualname":"::digest::Digest::digest","value":"pub fn digest<impl AsRef<[u8]>: AsRef<[u8]>>(impl AsRef<[u8]>) -> Output<Self>","parent":{"krate":0,"index":501},"children":[],"decl_id":null,"docs":" Compute hash of `data`.\n","sig":null,"attributes":[{"value":"/ Compute hash of `data`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":35681,"byte_end":35708,"line_start":53,"line_end":53,"column_start":5,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":534},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":37418,"byte_end":37427,"line_start":132,"line_end":132,"column_start":11,"column_end":20},"name":"DynDigest","qualname":"::digest::DynDigest","value":"DynDigest","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539}],"decl_id":null,"docs":" Modification of the [`Digest`] trait suitable for trait objects.\n","sig":null,"attributes":[{"value":"/ Modification of the [`Digest`] trait suitable for trait objects.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":37339,"byte_end":37407,"line_start":131,"line_end":131,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":37550,"byte_end":37556,"line_start":136,"line_end":136,"column_start":8,"column_end":14},"name":"update","qualname":"::digest::DynDigest::update","value":"pub fn update(&mut Self, &[u8])","parent":{"krate":0,"index":534},"children":[],"decl_id":null,"docs":" Digest input data.","sig":null,"attributes":[{"value":"/ Digest input data.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":37434,"byte_end":37456,"line_start":133,"line_end":133,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":37461,"byte_end":37464,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ This method can be called repeatedly for use with streaming messages.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":37469,"byte_end":37542,"line_start":135,"line_end":135,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":38452,"byte_end":38465,"line_start":160,"line_end":160,"column_start":8,"column_end":21},"name":"finalize_into","qualname":"::digest::DynDigest::finalize_into","value":"pub fn finalize_into(Self, &mut [u8]) -> Result<(), InvalidBufferSize>","parent":{"krate":0,"index":534},"children":[],"decl_id":null,"docs":" Write result into provided array and consume the hasher instance.","sig":null,"attributes":[{"value":"/ Write result into provided array and consume the hasher instance.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":38297,"byte_end":38366,"line_start":157,"line_end":157,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":38371,"byte_end":38374,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ Returns error if buffer length is not equal to `output_size`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":38379,"byte_end":38444,"line_start":159,"line_end":159,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":38680,"byte_end":38699,"line_start":165,"line_end":165,"column_start":8,"column_end":27},"name":"finalize_into_reset","qualname":"::digest::DynDigest::finalize_into_reset","value":"pub fn finalize_into_reset(&mut Self, &mut [u8])\n-> Result<(), InvalidBufferSize>","parent":{"krate":0,"index":534},"children":[],"decl_id":null,"docs":" Write result into provided array and reset the hasher instance.","sig":null,"attributes":[{"value":"/ Write result into provided array and reset the hasher instance.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":38527,"byte_end":38594,"line_start":162,"line_end":162,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":38599,"byte_end":38602,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ Returns error if buffer length is not equal to `output_size`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":38607,"byte_end":38672,"line_start":164,"line_end":164,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":38821,"byte_end":38826,"line_start":168,"line_end":168,"column_start":8,"column_end":13},"name":"reset","qualname":"::digest::DynDigest::reset","value":"pub fn reset(&mut Self)","parent":{"krate":0,"index":534},"children":[],"decl_id":null,"docs":" Reset hasher instance to its initial state.\n","sig":null,"attributes":[{"value":"/ Reset hasher instance to its initial state.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":38766,"byte_end":38813,"line_start":167,"line_end":167,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":38885,"byte_end":38896,"line_start":171,"line_end":171,"column_start":8,"column_end":19},"name":"output_size","qualname":"::digest::DynDigest::output_size","value":"pub fn output_size(&Self) -> usize","parent":{"krate":0,"index":534},"children":[],"decl_id":null,"docs":" Get output size of the hasher\n","sig":null,"attributes":[{"value":"/ Get output size of the hasher","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":38844,"byte_end":38877,"line_start":170,"line_end":170,"column_start":5,"column_end":38}}]},{"kind":"Trait","id":{"krate":0,"index":590},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":41115,"byte_end":41124,"line_start":12,"line_end":12,"column_start":11,"column_end":20},"name":"MacMarker","qualname":"::mac::MacMarker","value":"MacMarker","parent":null,"children":[],"decl_id":null,"docs":" Marker trait for Message Authentication algorithms.\n","sig":null,"attributes":[{"value":"/ Marker trait for Message Authentication algorithms.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":41002,"byte_end":41057,"line_start":10,"line_end":10,"column_start":1,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":591},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":41418,"byte_end":41421,"line_start":19,"line_end":19,"column_start":11,"column_end":14},"name":"Mac","qualname":"::mac::Mac","value":"Mac: OutputSizeUser + Sized","parent":null,"children":[{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603}],"decl_id":null,"docs":" Convinience wrapper trait covering functionality of Message Authentication algorithms.","sig":null,"attributes":[{"value":"/ Convinience wrapper trait covering functionality of Message Authentication algorithms.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":41129,"byte_end":41219,"line_start":14,"line_end":14,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":41220,"byte_end":41223,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This trait wraps [`KeyInit`], [`Update`], [`FixedOutput`], and [`MacMarker`]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":41224,"byte_end":41304,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ traits and provides additional convenience methods.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":41305,"byte_end":41360,"line_start":17,"line_end":17,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":41501,"byte_end":41504,"line_start":21,"line_end":21,"column_start":8,"column_end":11},"name":"new","qualname":"::mac::Mac::new","value":"pub fn new(&Key<Self>) -> Self where Self: KeyInit","parent":{"krate":0,"index":591},"children":[],"decl_id":null,"docs":" Create new value from fixed size key.\n","sig":null,"attributes":[{"value":"/ Create new value from fixed size key.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":41452,"byte_end":41493,"line_start":20,"line_end":20,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":41871,"byte_end":41885,"line_start":33,"line_end":33,"column_start":8,"column_end":22},"name":"new_from_slice","qualname":"::mac::Mac::new_from_slice","value":"pub fn new_from_slice(&[u8]) -> Result<Self, InvalidLength> where\nSelf: KeyInit","parent":{"krate":0,"index":591},"children":[],"decl_id":null,"docs":" Create new value from variable size key.\n","sig":null,"attributes":[{"value":"/ Create new value from variable size key.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":41819,"byte_end":41863,"line_start":32,"line_end":32,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":42016,"byte_end":42022,"line_start":38,"line_end":38,"column_start":8,"column_end":14},"name":"update","qualname":"::mac::Mac::update","value":"pub fn update(&mut Self, &[u8])","parent":{"krate":0,"index":591},"children":[],"decl_id":null,"docs":" Update state using the provided data.\n","sig":null,"attributes":[{"value":"/ Update state using the provided data.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":41967,"byte_end":42008,"line_start":37,"line_end":37,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":42120,"byte_end":42132,"line_start":42,"line_end":42,"column_start":8,"column_end":20},"name":"chain_update","qualname":"::mac::Mac::chain_update","value":"pub fn chain_update<impl AsRef<[u8]>: AsRef<[u8]>>(Self, impl AsRef<[u8]>)\n-> Self","parent":{"krate":0,"index":591},"children":[],"decl_id":null,"docs":" Process input data in a chained manner.\n","sig":null,"attributes":[{"value":"/ Process input data in a chained manner.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":42053,"byte_end":42096,"line_start":40,"line_end":40,"column_start":5,"column_end":48}},{"value":"must_use","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":42101,"byte_end":42112,"line_start":41,"line_end":41,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":42287,"byte_end":42295,"line_start":46,"line_end":46,"column_start":8,"column_end":16},"name":"finalize","qualname":"::mac::Mac::finalize","value":"pub fn finalize(Self) -> CtOutput<Self>","parent":{"krate":0,"index":591},"children":[],"decl_id":null,"docs":" Obtain the result of a [`Mac`] computation as a [`CtOutput`] and consume\n [`Mac`] instance.\n","sig":null,"attributes":[{"value":"/ Obtain the result of a [`Mac`] computation as a [`CtOutput`] and consume","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":42177,"byte_end":42253,"line_start":44,"line_end":44,"column_start":5,"column_end":81}},{"value":"/ [`Mac`] instance.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":42258,"byte_end":42279,"line_start":45,"line_end":45,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":42434,"byte_end":42448,"line_start":50,"line_end":50,"column_start":8,"column_end":22},"name":"finalize_reset","qualname":"::mac::Mac::finalize_reset","value":"pub fn finalize_reset(&mut Self) -> CtOutput<Self> where\nSelf: FixedOutputReset","parent":{"krate":0,"index":591},"children":[],"decl_id":null,"docs":" Obtain the result of a [`Mac`] computation as a [`CtOutput`] and reset\n [`Mac`] instance.\n","sig":null,"attributes":[{"value":"/ Obtain the result of a [`Mac`] computation as a [`CtOutput`] and reset","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":42326,"byte_end":42400,"line_start":48,"line_end":48,"column_start":5,"column_end":79}},{"value":"/ [`Mac`] instance.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":42405,"byte_end":42426,"line_start":49,"line_end":49,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":42577,"byte_end":42582,"line_start":55,"line_end":55,"column_start":8,"column_end":13},"name":"reset","qualname":"::mac::Mac::reset","value":"pub fn reset(&mut Self) where Self: Reset","parent":{"krate":0,"index":591},"children":[],"decl_id":null,"docs":" Reset MAC instance to its initial state.\n","sig":null,"attributes":[{"value":"/ Reset MAC instance to its initial state.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":42525,"byte_end":42569,"line_start":54,"line_end":54,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":42701,"byte_end":42707,"line_start":60,"line_end":60,"column_start":8,"column_end":14},"name":"verify","qualname":"::mac::Mac::verify","value":"pub fn verify(Self, &Output<Self>) -> Result<(), MacError>","parent":{"krate":0,"index":591},"children":[],"decl_id":null,"docs":" Check if tag/code value is correct for the processed input.\n","sig":null,"attributes":[{"value":"/ Check if tag/code value is correct for the processed input.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":42630,"byte_end":42693,"line_start":59,"line_end":59,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":42952,"byte_end":42964,"line_start":67,"line_end":67,"column_start":8,"column_end":20},"name":"verify_slice","qualname":"::mac::Mac::verify_slice","value":"pub fn verify_slice(Self, &[u8]) -> Result<(), MacError>","parent":{"krate":0,"index":591},"children":[],"decl_id":null,"docs":" Check truncated tag correctness using all bytes\n of calculated tag.","sig":null,"attributes":[{"value":"/ Check truncated tag correctness using all bytes","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":42764,"byte_end":42815,"line_start":62,"line_end":62,"column_start":5,"column_end":56}},{"value":"/ of calculated tag.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":42820,"byte_end":42842,"line_start":63,"line_end":63,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":42847,"byte_end":42850,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Returns `Error` if `tag` is not valid or not equal in length","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":42855,"byte_end":42919,"line_start":65,"line_end":65,"column_start":5,"column_end":69}},{"value":"/ to MAC's output.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":42924,"byte_end":42944,"line_start":66,"line_end":66,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":43187,"byte_end":43208,"line_start":73,"line_end":73,"column_start":8,"column_end":29},"name":"verify_truncated_left","qualname":"::mac::Mac::verify_truncated_left","value":"pub fn verify_truncated_left(Self, &[u8]) -> Result<(), MacError>","parent":{"krate":0,"index":591},"children":[],"decl_id":null,"docs":" Check truncated tag correctness using left side bytes\n (i.e. `tag[..n]`) of calculated tag.","sig":null,"attributes":[{"value":"/ Check truncated tag correctness using left side bytes","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":43013,"byte_end":43070,"line_start":69,"line_end":69,"column_start":5,"column_end":62}},{"value":"/ (i.e. `tag[..n]`) of calculated tag.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":43075,"byte_end":43115,"line_start":70,"line_end":70,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":43120,"byte_end":43123,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Returns `Error` if `tag` is not valid or empty.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":43128,"byte_end":43179,"line_start":72,"line_end":72,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":43432,"byte_end":43454,"line_start":79,"line_end":79,"column_start":8,"column_end":30},"name":"verify_truncated_right","qualname":"::mac::Mac::verify_truncated_right","value":"pub fn verify_truncated_right(Self, &[u8]) -> Result<(), MacError>","parent":{"krate":0,"index":591},"children":[],"decl_id":null,"docs":" Check truncated tag correctness using right side bytes\n (i.e. `tag[n..]`) of calculated tag.","sig":null,"attributes":[{"value":"/ Check truncated tag correctness using right side bytes","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":43257,"byte_end":43315,"line_start":75,"line_end":75,"column_start":5,"column_end":63}},{"value":"/ (i.e. `tag[n..]`) of calculated tag.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":43320,"byte_end":43360,"line_start":76,"line_end":76,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":43365,"byte_end":43368,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Returns `Error` if `tag` is not valid or empty.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":43373,"byte_end":43424,"line_start":78,"line_end":78,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":803},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":46333,"byte_end":46341,"line_start":200,"line_end":200,"column_start":12,"column_end":20},"name":"CtOutput","qualname":"::mac::CtOutput","value":"CtOutput {  }","parent":null,"children":[{"krate":0,"index":805}],"decl_id":null,"docs":" Fixed size output value which provides a safe [`Eq`] implementation that\n runs in constant time.","sig":null,"attributes":[{"value":"/ Fixed size output value which provides a safe [`Eq`] implementation that","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":46079,"byte_end":46155,"line_start":194,"line_end":194,"column_start":1,"column_end":77}},{"value":"/ runs in constant time.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":46156,"byte_end":46182,"line_start":195,"line_end":195,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":46183,"byte_end":46186,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ It is useful for implementing Message Authentication Codes (MACs).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":46187,"byte_end":46257,"line_start":197,"line_end":197,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":46500,"byte_end":46503,"line_start":207,"line_end":207,"column_start":12,"column_end":15},"name":"new","qualname":"<CtOutput<T>>::new","value":"pub fn new(Output<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`CtOutput`] value.\n","sig":null,"attributes":[{"value":"/ Create a new [`CtOutput`] value.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":46430,"byte_end":46466,"line_start":205,"line_end":205,"column_start":5,"column_end":41}},{"value":"inline(always)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":46471,"byte_end":46488,"line_start":206,"line_end":206,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":46651,"byte_end":46661,"line_start":213,"line_end":213,"column_start":12,"column_end":22},"name":"into_bytes","qualname":"<CtOutput<T>>::into_bytes","value":"pub fn into_bytes(Self) -> Output<T>","parent":null,"children":[],"decl_id":null,"docs":" Get the inner [`Output`] array this type wraps.\n","sig":null,"attributes":[{"value":"/ Get the inner [`Output`] array this type wraps.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":46566,"byte_end":46617,"line_start":211,"line_end":211,"column_start":5,"column_end":56}},{"value":"inline(always)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":46622,"byte_end":46639,"line_start":212,"line_end":212,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":809},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":47613,"byte_end":47621,"line_start":252,"line_end":252,"column_start":12,"column_end":20},"name":"MacError","qualname":"::mac::MacError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error type for when the [`Output`] of a [`Mac`]\n is not equal to the expected value.\n","sig":null,"attributes":[{"value":"/ Error type for when the [`Output`] of a [`Mac`]","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":47409,"byte_end":47460,"line_start":248,"line_end":248,"column_start":1,"column_end":52}},{"value":"/ is not equal to the expected value.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":47461,"byte_end":47500,"line_start":249,"line_end":249,"column_start":1,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":703},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":2806,"byte_end":2812,"line_start":77,"line_end":77,"column_start":11,"column_end":17},"name":"Update","qualname":"::Update","value":"Update","parent":null,"children":[{"krate":0,"index":704},{"krate":0,"index":705}],"decl_id":null,"docs":" Types which consume data with byte granularity.\n","sig":null,"attributes":[{"value":"/ Types which consume data with byte granularity.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":2744,"byte_end":2795,"line_start":76,"line_end":76,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":2868,"byte_end":2874,"line_start":79,"line_end":79,"column_start":8,"column_end":14},"name":"update","qualname":"::Update::update","value":"pub fn update(&mut Self, &[u8])","parent":{"krate":0,"index":703},"children":[],"decl_id":null,"docs":" Update state using the provided data.\n","sig":null,"attributes":[{"value":"/ Update state using the provided data.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":2819,"byte_end":2860,"line_start":78,"line_end":78,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":2971,"byte_end":2976,"line_start":83,"line_end":83,"column_start":8,"column_end":13},"name":"chain","qualname":"::Update::chain","value":"pub fn chain<impl AsRef<[u8]>: AsRef<[u8]>>(Self, impl AsRef<[u8]>) -> Self\nwhere Self: Sized","parent":{"krate":0,"index":703},"children":[],"decl_id":null,"docs":" Digest input data in a chained manner.\n","sig":null,"attributes":[{"value":"/ Digest input data in a chained manner.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":2905,"byte_end":2947,"line_start":81,"line_end":81,"column_start":5,"column_end":47}},{"value":"must_use","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":2952,"byte_end":2963,"line_start":82,"line_end":82,"column_start":5,"column_end":16}}]},{"kind":"Trait","id":{"krate":0,"index":707},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":3177,"byte_end":3188,"line_start":93,"line_end":93,"column_start":11,"column_end":22},"name":"FixedOutput","qualname":"::FixedOutput","value":"FixedOutput: Update + OutputSizeUser + Sized","parent":null,"children":[{"krate":0,"index":708},{"krate":0,"index":709}],"decl_id":null,"docs":" Trait for hash functions with fixed-size output.\n","sig":null,"attributes":[{"value":"/ Trait for hash functions with fixed-size output.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":3114,"byte_end":3166,"line_start":92,"line_end":92,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":3291,"byte_end":3304,"line_start":95,"line_end":95,"column_start":8,"column_end":21},"name":"finalize_into","qualname":"::FixedOutput::finalize_into","value":"pub fn finalize_into(Self, &mut Output<Self>)","parent":{"krate":0,"index":707},"children":[],"decl_id":null,"docs":" Consume value and write result into provided array.\n","sig":null,"attributes":[{"value":"/ Consume value and write result into provided array.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":3228,"byte_end":3283,"line_start":94,"line_end":94,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":3415,"byte_end":3429,"line_start":99,"line_end":99,"column_start":8,"column_end":22},"name":"finalize_fixed","qualname":"::FixedOutput::finalize_fixed","value":"pub fn finalize_fixed(Self) -> Output<Self>","parent":{"krate":0,"index":707},"children":[],"decl_id":null,"docs":" Retrieve result and consume the hasher instance.\n","sig":null,"attributes":[{"value":"/ Retrieve result and consume the hasher instance.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":3341,"byte_end":3393,"line_start":97,"line_end":97,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":3398,"byte_end":3407,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":710},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":3643,"byte_end":3659,"line_start":107,"line_end":107,"column_start":11,"column_end":27},"name":"FixedOutputReset","qualname":"::FixedOutputReset","value":"FixedOutputReset: FixedOutput + Reset","parent":null,"children":[{"krate":0,"index":711},{"krate":0,"index":712}],"decl_id":null,"docs":" Trait for hash functions with fixed-size output able to reset themselves.\n","sig":null,"attributes":[{"value":"/ Trait for hash functions with fixed-size output able to reset themselves.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":3555,"byte_end":3632,"line_start":106,"line_end":106,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":3759,"byte_end":3778,"line_start":109,"line_end":109,"column_start":8,"column_end":27},"name":"finalize_into_reset","qualname":"::FixedOutputReset::finalize_into_reset","value":"pub fn finalize_into_reset(&mut Self, &mut Output<Self>)","parent":{"krate":0,"index":710},"children":[],"decl_id":null,"docs":" Write result into provided array and reset the hasher state.\n","sig":null,"attributes":[{"value":"/ Write result into provided array and reset the hasher state.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":3687,"byte_end":3751,"line_start":108,"line_end":108,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":3889,"byte_end":3909,"line_start":113,"line_end":113,"column_start":8,"column_end":28},"name":"finalize_fixed_reset","qualname":"::FixedOutputReset::finalize_fixed_reset","value":"pub fn finalize_fixed_reset(&mut Self) -> Output<Self>","parent":{"krate":0,"index":710},"children":[],"decl_id":null,"docs":" Retrieve result and reset the hasher state.\n","sig":null,"attributes":[{"value":"/ Retrieve result and reset the hasher state.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":3820,"byte_end":3867,"line_start":111,"line_end":111,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":3872,"byte_end":3881,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":713},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":4179,"byte_end":4188,"line_start":122,"line_end":122,"column_start":11,"column_end":20},"name":"XofReader","qualname":"::XofReader","value":"XofReader","parent":null,"children":[{"krate":0,"index":714}],"decl_id":null,"docs":" Trait for reader types which are used to extract extendable output\n from a XOF (extendable-output function) result.\n","sig":null,"attributes":[{"value":"/ Trait for reader types which are used to extract extendable output","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":4046,"byte_end":4116,"line_start":120,"line_end":120,"column_start":1,"column_end":71}},{"value":"/ from a XOF (extendable-output function) result.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":4117,"byte_end":4168,"line_start":121,"line_end":121,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":4281,"byte_end":4285,"line_start":124,"line_end":124,"column_start":8,"column_end":12},"name":"read","qualname":"::XofReader::read","value":"pub fn read(&mut Self, &mut [u8])","parent":{"krate":0,"index":713},"children":[],"decl_id":null,"docs":" Read output into the `buffer`. Can be called an unlimited number of times.\n","sig":null,"attributes":[{"value":"/ Read output into the `buffer`. Can be called an unlimited number of times.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":4195,"byte_end":4273,"line_start":123,"line_end":123,"column_start":5,"column_end":83}}]},{"kind":"Trait","id":{"krate":0,"index":715},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":4916,"byte_end":4932,"line_start":142,"line_end":142,"column_start":11,"column_end":27},"name":"ExtendableOutput","qualname":"::ExtendableOutput","value":"ExtendableOutput: Sized + Update","parent":null,"children":[{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719}],"decl_id":null,"docs":" Trait for hash functions with extendable-output (XOF).\n","sig":null,"attributes":[{"value":"/ Trait for hash functions with extendable-output (XOF).","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":4847,"byte_end":4905,"line_start":141,"line_end":141,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":716},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":4975,"byte_end":4981,"line_start":144,"line_end":144,"column_start":10,"column_end":16},"name":"Reader","qualname":"::ExtendableOutput::Reader","value":"type Reader: XofReader;","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Reader\n","sig":null,"attributes":[{"value":"/ Reader","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":4955,"byte_end":4965,"line_start":143,"line_end":143,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":5059,"byte_end":5071,"line_start":147,"line_end":147,"column_start":8,"column_end":20},"name":"finalize_xof","qualname":"::ExtendableOutput::finalize_xof","value":"pub fn finalize_xof(Self) -> Self::Reader","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Retrieve XOF reader and consume hasher instance.\n","sig":null,"attributes":[{"value":"/ Retrieve XOF reader and consume hasher instance.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":4999,"byte_end":5051,"line_start":146,"line_end":146,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":5153,"byte_end":5170,"line_start":150,"line_end":150,"column_start":8,"column_end":25},"name":"finalize_xof_into","qualname":"::ExtendableOutput::finalize_xof_into","value":"pub fn finalize_xof_into(Self, &mut [u8])","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Finalize XOF and write result into `out`.\n","sig":null,"attributes":[{"value":"/ Finalize XOF and write result into `out`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":5100,"byte_end":5145,"line_start":149,"line_end":149,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":5307,"byte_end":5317,"line_start":155,"line_end":155,"column_start":8,"column_end":18},"name":"digest_xof","qualname":"::ExtendableOutput::digest_xof","value":"pub fn digest_xof<impl AsRef<[u8]>: AsRef<[u8]>>(impl AsRef<[u8]>, &mut [u8])\nwhere Self: Default","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Compute hash of `data` and write it into `output`.\n","sig":null,"attributes":[{"value":"/ Compute hash of `data` and write it into `output`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":5245,"byte_end":5299,"line_start":154,"line_end":154,"column_start":5,"column_end":59}}]},{"kind":"Trait","id":{"krate":0,"index":721},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":6138,"byte_end":6159,"line_start":179,"line_end":179,"column_start":11,"column_end":32},"name":"ExtendableOutputReset","qualname":"::ExtendableOutputReset","value":"ExtendableOutputReset: ExtendableOutput + Reset","parent":null,"children":[{"krate":0,"index":722},{"krate":0,"index":723}],"decl_id":null,"docs":" Trait for hash functions with extendable-output (XOF) able to reset themselves.\n","sig":null,"attributes":[{"value":"/ Trait for hash functions with extendable-output (XOF) able to reset themselves.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":6044,"byte_end":6127,"line_start":178,"line_end":178,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":6256,"byte_end":6274,"line_start":181,"line_end":181,"column_start":8,"column_end":26},"name":"finalize_xof_reset","qualname":"::ExtendableOutputReset::finalize_xof_reset","value":"pub fn finalize_xof_reset(&mut Self) -> Self::Reader","parent":{"krate":0,"index":721},"children":[],"decl_id":null,"docs":" Retrieve XOF reader and reset hasher instance state.\n","sig":null,"attributes":[{"value":"/ Retrieve XOF reader and reset hasher instance state.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":6192,"byte_end":6248,"line_start":180,"line_end":180,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":6386,"byte_end":6409,"line_start":184,"line_end":184,"column_start":8,"column_end":31},"name":"finalize_xof_reset_into","qualname":"::ExtendableOutputReset::finalize_xof_reset_into","value":"pub fn finalize_xof_reset_into(&mut Self, &mut [u8])","parent":{"krate":0,"index":721},"children":[],"decl_id":null,"docs":" Finalize XOF, write result into `out`, and reset the hasher state.\n","sig":null,"attributes":[{"value":"/ Finalize XOF, write result into `out`, and reset the hasher state.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":6308,"byte_end":6378,"line_start":183,"line_end":183,"column_start":5,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":724},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":7089,"byte_end":7103,"line_start":203,"line_end":203,"column_start":11,"column_end":25},"name":"VariableOutput","qualname":"::VariableOutput","value":"VariableOutput: Sized + Update","parent":null,"children":[{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729}],"decl_id":null,"docs":" Trait for hash functions with variable-size output.\n","sig":null,"attributes":[{"value":"/ Trait for hash functions with variable-size output.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":7023,"byte_end":7078,"line_start":202,"line_end":202,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":725},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":7169,"byte_end":7184,"line_start":205,"line_end":205,"column_start":11,"column_end":26},"name":"MAX_OUTPUT_SIZE","qualname":"::VariableOutput::MAX_OUTPUT_SIZE","value":"usize","parent":{"krate":0,"index":724},"children":[],"decl_id":null,"docs":" Maximum size of output hash.\n","sig":null,"attributes":[{"value":"/ Maximum size of output hash.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":7126,"byte_end":7158,"line_start":204,"line_end":204,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":7396,"byte_end":7399,"line_start":211,"line_end":211,"column_start":8,"column_end":11},"name":"new","qualname":"::VariableOutput::new","value":"pub fn new(usize) -> Result<Self, InvalidOutputSize>","parent":{"krate":0,"index":724},"children":[],"decl_id":null,"docs":" Create new hasher instance with the given output size.","sig":null,"attributes":[{"value":"/ Create new hasher instance with the given output size.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":7198,"byte_end":7256,"line_start":207,"line_end":207,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":7261,"byte_end":7264,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ It will return `Err(InvalidOutputSize)` in case if hasher can not return","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":7269,"byte_end":7345,"line_start":209,"line_end":209,"column_start":5,"column_end":81}},{"value":"/ hash of the specified output size.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":7350,"byte_end":7388,"line_start":210,"line_end":210,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":7540,"byte_end":7551,"line_start":214,"line_end":214,"column_start":8,"column_end":19},"name":"output_size","qualname":"::VariableOutput::output_size","value":"pub fn output_size(&Self) -> usize","parent":{"krate":0,"index":724},"children":[],"decl_id":null,"docs":" Get output size of the hasher instance provided to the `new` method\n","sig":null,"attributes":[{"value":"/ Get output size of the hasher instance provided to the `new` method","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":7461,"byte_end":7532,"line_start":213,"line_end":213,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":7731,"byte_end":7748,"line_start":220,"line_end":220,"column_start":8,"column_end":25},"name":"finalize_variable","qualname":"::VariableOutput::finalize_variable","value":"pub fn finalize_variable(Self, &mut [u8]) -> Result<(), InvalidBufferSize>","parent":{"krate":0,"index":724},"children":[],"decl_id":null,"docs":" Write result into the output buffer.","sig":null,"attributes":[{"value":"/ Write result into the output buffer.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":7574,"byte_end":7614,"line_start":216,"line_end":216,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":7619,"byte_end":7622,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(InvalidOutputSize)` if `out` size is not equal to","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":7627,"byte_end":7693,"line_start":218,"line_end":218,"column_start":5,"column_end":71}},{"value":"/ `self.output_size()`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":7698,"byte_end":7723,"line_start":219,"line_end":219,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":8048,"byte_end":8063,"line_start":227,"line_end":227,"column_start":8,"column_end":23},"name":"digest_variable","qualname":"::VariableOutput::digest_variable","value":"pub fn digest_variable<impl AsRef<[u8]>: AsRef<[u8]>>(impl AsRef<[u8]>,\n&mut [u8]) -> Result<(), InvalidOutputSize>","parent":{"krate":0,"index":724},"children":[],"decl_id":null,"docs":" Compute hash of `data` and write it to `output`.","sig":null,"attributes":[{"value":"/ Compute hash of `data` and write it to `output`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":7810,"byte_end":7862,"line_start":222,"line_end":222,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":7867,"byte_end":7870,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ Length of the output hash is determined by `output`. If `output` is","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":7875,"byte_end":7946,"line_start":224,"line_end":224,"column_start":5,"column_end":76}},{"value":"/ bigger than `Self::MAX_OUTPUT_SIZE`, this method returns","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":7951,"byte_end":8011,"line_start":225,"line_end":225,"column_start":5,"column_end":65}},{"value":"/ `InvalidOutputSize`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":8016,"byte_end":8040,"line_start":226,"line_end":226,"column_start":5,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":732},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":8991,"byte_end":9010,"line_start":254,"line_end":254,"column_start":11,"column_end":30},"name":"VariableOutputReset","qualname":"::VariableOutputReset","value":"VariableOutputReset: VariableOutput + Reset","parent":null,"children":[{"krate":0,"index":733}],"decl_id":null,"docs":" Trait for hash functions with variable-size output able to reset themselves.\n","sig":null,"attributes":[{"value":"/ Trait for hash functions with variable-size output able to reset themselves.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":8900,"byte_end":8980,"line_start":253,"line_end":253,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":9225,"byte_end":9248,"line_start":259,"line_end":259,"column_start":8,"column_end":31},"name":"finalize_variable_reset","qualname":"::VariableOutputReset::finalize_variable_reset","value":"pub fn finalize_variable_reset(&mut Self, &mut [u8])\n-> Result<(), InvalidBufferSize>","parent":{"krate":0,"index":732},"children":[],"decl_id":null,"docs":" Write result into the output buffer and reset the hasher state.","sig":null,"attributes":[{"value":"/ Write result into the output buffer and reset the hasher state.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":9041,"byte_end":9108,"line_start":255,"line_end":255,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":9113,"byte_end":9116,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(InvalidOutputSize)` if `out` size is not equal to","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":9121,"byte_end":9187,"line_start":257,"line_end":257,"column_start":5,"column_end":71}},{"value":"/ `self.output_size()`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":9192,"byte_end":9217,"line_start":258,"line_end":258,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":824},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":9974,"byte_end":9991,"line_start":278,"line_end":278,"column_start":12,"column_end":29},"name":"InvalidOutputSize","qualname":"::InvalidOutputSize","value":"","parent":null,"children":[],"decl_id":null,"docs":" The error type used in variable hash traits.\n","sig":null,"attributes":[{"value":"/ The error type used in variable hash traits.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":9875,"byte_end":9923,"line_start":276,"line_end":276,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":833},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":10388,"byte_end":10405,"line_start":292,"line_end":292,"column_start":12,"column_end":29},"name":"InvalidBufferSize","qualname":"::InvalidBufferSize","value":"","parent":null,"children":[],"decl_id":null,"docs":" Buffer length is not equal to hash output size.\n","sig":null,"attributes":[{"value":"/ Buffer length is not equal to hash output size.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":10271,"byte_end":10322,"line_start":290,"line_end":290,"column_start":1,"column_end":52}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/ct_variable.rs","byte_start":15988,"byte_end":16009,"line_start":37,"line_end":37,"column_start":36,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/ct_variable.rs","byte_start":16307,"byte_end":16328,"line_start":48,"line_end":48,"column_start":35,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/ct_variable.rs","byte_start":16605,"byte_end":16626,"line_start":58,"line_end":58,"column_start":39,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/ct_variable.rs","byte_start":16923,"byte_end":16944,"line_start":69,"line_end":69,"column_start":36,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/ct_variable.rs","byte_start":17330,"byte_end":17351,"line_start":83,"line_end":83,"column_start":40,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/ct_variable.rs","byte_start":17658,"byte_end":17679,"line_start":94,"line_end":94,"column_start":40,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/ct_variable.rs","byte_start":17983,"byte_end":18004,"line_start":105,"line_end":105,"column_start":41,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/ct_variable.rs","byte_start":18790,"byte_end":18811,"line_start":130,"line_end":130,"column_start":33,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/ct_variable.rs","byte_start":19223,"byte_end":19244,"line_start":147,"line_end":147,"column_start":31,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/ct_variable.rs","byte_start":19591,"byte_end":19612,"line_start":161,"line_end":161,"column_start":39,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/rt_variable.rs","byte_start":21639,"byte_end":21660,"line_start":24,"line_end":24,"column_start":9,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/rt_variable.rs","byte_start":22489,"byte_end":22510,"line_start":52,"line_end":52,"column_start":24,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/rt_variable.rs","byte_start":22727,"byte_end":22748,"line_start":62,"line_end":62,"column_start":23,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/rt_variable.rs","byte_start":22889,"byte_end":22910,"line_start":70,"line_end":70,"column_start":19,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/rt_variable.rs","byte_start":23163,"byte_end":23184,"line_start":83,"line_end":83,"column_start":20,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/rt_variable.rs","byte_start":23516,"byte_end":23537,"line_start":96,"line_end":96,"column_start":28,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":253},{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/rt_variable.rs","byte_start":24181,"byte_end":24202,"line_start":122,"line_end":122,"column_start":33,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/rt_variable.rs","byte_start":24562,"byte_end":24583,"line_start":136,"line_end":136,"column_start":24,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":26265,"byte_end":26276,"line_start":34,"line_end":34,"column_start":24,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":26489,"byte_end":26500,"line_start":44,"line_end":44,"column_start":23,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":26685,"byte_end":26696,"line_start":53,"line_end":53,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":26859,"byte_end":26870,"line_start":62,"line_end":62,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":27349,"byte_end":27360,"line_start":83,"line_end":83,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":27532,"byte_end":27543,"line_start":92,"line_end":92,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":366},{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":28037,"byte_end":28048,"line_start":115,"line_end":115,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":28345,"byte_end":28356,"line_start":128,"line_end":128,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":28592,"byte_end":28603,"line_start":141,"line_end":141,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":28927,"byte_end":28938,"line_start":154,"line_end":154,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":29123,"byte_end":29134,"line_start":163,"line_end":163,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":29442,"byte_end":29453,"line_start":176,"line_end":176,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":29817,"byte_end":29828,"line_start":191,"line_end":191,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":30416,"byte_end":30427,"line_start":210,"line_end":210,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":32098,"byte_end":32109,"line_start":275,"line_end":275,"column_start":28,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":32238,"byte_end":32249,"line_start":283,"line_end":283,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/xof_reader.rs","byte_start":32929,"byte_end":32949,"line_start":21,"line_end":21,"column_start":24,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/xof_reader.rs","byte_start":33235,"byte_end":33255,"line_start":33,"line_end":33,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":35831,"byte_end":35832,"line_start":57,"line_end":57,"column_start":65,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":522},{"krate":0,"index":524},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":39176,"byte_end":39177,"line_start":179,"line_end":179,"column_start":76,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":43551,"byte_end":43552,"line_start":82,"line_end":82,"column_start":51,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":46412,"byte_end":46420,"line_start":204,"line_end":204,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":620},{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":46755,"byte_end":46763,"line_start":218,"line_end":218,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":46915,"byte_end":46923,"line_start":225,"line_end":225,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":47076,"byte_end":47084,"line_start":232,"line_end":232,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":47244,"byte_end":47252,"line_start":239,"line_end":239,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":47393,"byte_end":47401,"line_start":246,"line_end":246,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":47646,"byte_end":47654,"line_start":254,"line_end":254,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":10016,"byte_end":10033,"line_start":280,"line_end":280,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":735}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":10430,"byte_end":10447,"line_start":294,"line_end":294,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":2137,"byte_end":2145,"line_start":54,"line_end":54,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":4}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/ct_variable.rs","byte_start":15988,"byte_end":16009,"line_start":37,"line_end":37,"column_start":36,"column_end":57},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":754},"to":{"krate":0,"index":500}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/ct_variable.rs","byte_start":16307,"byte_end":16328,"line_start":48,"line_end":48,"column_start":35,"column_end":56},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":754},"to":{"krate":0,"index":590}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/ct_variable.rs","byte_start":16605,"byte_end":16626,"line_start":58,"line_end":58,"column_start":39,"column_end":60},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":754},"to":{"krate":4,"index":33}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/ct_variable.rs","byte_start":16923,"byte_end":16944,"line_start":69,"line_end":69,"column_start":36,"column_end":57},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":754},"to":{"krate":0,"index":458}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/ct_variable.rs","byte_start":17330,"byte_end":17351,"line_start":83,"line_end":83,"column_start":40,"column_end":61},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":754},"to":{"krate":4,"index":44}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/ct_variable.rs","byte_start":17658,"byte_end":17679,"line_start":94,"line_end":94,"column_start":40,"column_end":61},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":754},"to":{"krate":0,"index":460}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/ct_variable.rs","byte_start":17983,"byte_end":18004,"line_start":105,"line_end":105,"column_start":41,"column_end":62},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":754},"to":{"krate":0,"index":462}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/ct_variable.rs","byte_start":18790,"byte_end":18811,"line_start":130,"line_end":130,"column_start":33,"column_end":54},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":3002}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/ct_variable.rs","byte_start":19223,"byte_end":19244,"line_start":147,"line_end":147,"column_start":31,"column_end":52},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":754},"to":{"krate":4,"index":55}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/ct_variable.rs","byte_start":19591,"byte_end":19612,"line_start":161,"line_end":161,"column_start":39,"column_end":60},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":754},"to":{"krate":4,"index":57}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/rt_variable.rs","byte_start":21639,"byte_end":21660,"line_start":24,"line_end":24,"column_start":9,"column_end":30},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":765},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/rt_variable.rs","byte_start":22489,"byte_end":22510,"line_start":52,"line_end":52,"column_start":24,"column_end":45},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":765},"to":{"krate":0,"index":500}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/rt_variable.rs","byte_start":22727,"byte_end":22748,"line_start":62,"line_end":62,"column_start":23,"column_end":44},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":765},"to":{"krate":0,"index":590}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/rt_variable.rs","byte_start":22889,"byte_end":22910,"line_start":70,"line_end":70,"column_start":19,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":765},"to":{"krate":4,"index":55}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/rt_variable.rs","byte_start":23163,"byte_end":23184,"line_start":83,"line_end":83,"column_start":20,"column_end":41},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":765},"to":{"krate":0,"index":703}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/rt_variable.rs","byte_start":23516,"byte_end":23537,"line_start":96,"line_end":96,"column_start":28,"column_end":49},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":765},"to":{"krate":0,"index":724}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/rt_variable.rs","byte_start":24181,"byte_end":24202,"line_start":122,"line_end":122,"column_start":33,"column_end":54},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":765},"to":{"krate":0,"index":732}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/rt_variable.rs","byte_start":24562,"byte_end":24583,"line_start":136,"line_end":136,"column_start":24,"column_end":45},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":765},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":26265,"byte_end":26276,"line_start":34,"line_end":34,"column_start":24,"column_end":35},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":773},"to":{"krate":0,"index":500}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":26489,"byte_end":26500,"line_start":44,"line_end":44,"column_start":23,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":773},"to":{"krate":0,"index":590}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":26685,"byte_end":26696,"line_start":53,"line_end":53,"column_start":27,"column_end":38},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":773},"to":{"krate":4,"index":33}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":26859,"byte_end":26870,"line_start":62,"line_end":62,"column_start":9,"column_end":20},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":773},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":27349,"byte_end":27360,"line_start":83,"line_end":83,"column_start":25,"column_end":36},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":773},"to":{"krate":4,"index":47}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":27532,"byte_end":27543,"line_start":92,"line_end":92,"column_start":21,"column_end":32},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":773},"to":{"krate":4,"index":59}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":28037,"byte_end":28048,"line_start":115,"line_end":115,"column_start":24,"column_end":35},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":773},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":28345,"byte_end":28356,"line_start":128,"line_end":128,"column_start":19,"column_end":30},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":773},"to":{"krate":4,"index":55}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":28592,"byte_end":28603,"line_start":141,"line_end":141,"column_start":20,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":773},"to":{"krate":0,"index":703}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":28927,"byte_end":28938,"line_start":154,"line_end":154,"column_start":28,"column_end":39},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":773},"to":{"krate":4,"index":44}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":29123,"byte_end":29134,"line_start":163,"line_end":163,"column_start":25,"column_end":36},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":773},"to":{"krate":0,"index":707}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":29442,"byte_end":29453,"line_start":176,"line_end":176,"column_start":30,"column_end":41},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":773},"to":{"krate":0,"index":710}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":29817,"byte_end":29828,"line_start":191,"line_end":191,"column_start":30,"column_end":41},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":773},"to":{"krate":0,"index":715}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":30416,"byte_end":30427,"line_start":210,"line_end":210,"column_start":35,"column_end":46},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":773},"to":{"krate":0,"index":721}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":31963,"byte_end":31969,"line_start":266,"line_end":266,"column_start":30,"column_end":36},"kind":"SuperTrait","from":{"krate":0,"index":397},"to":{"krate":0,"index":394}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":32098,"byte_end":32109,"line_start":275,"line_end":275,"column_start":28,"column_end":39},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":773},"to":{"krate":0,"index":397}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/wrapper.rs","byte_start":32238,"byte_end":32249,"line_start":283,"line_end":283,"column_start":23,"column_end":34},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":773},"to":{"krate":0,"index":394}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/xof_reader.rs","byte_start":32929,"byte_end":32949,"line_start":21,"line_end":21,"column_start":24,"column_end":44},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":783},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api/xof_reader.rs","byte_start":33235,"byte_end":33255,"line_start":33,"line_end":33,"column_start":23,"column_end":43},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":783},"to":{"krate":0,"index":713}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":11595,"byte_end":11608,"line_start":31,"line_end":31,"column_start":23,"column_end":36},"kind":"SuperTrait","from":{"krate":4,"index":33},"to":{"krate":0,"index":458}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":11801,"byte_end":11814,"line_start":37,"line_end":37,"column_start":27,"column_end":40},"kind":"SuperTrait","from":{"krate":4,"index":33},"to":{"krate":0,"index":460}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":11990,"byte_end":12000,"line_start":43,"line_end":43,"column_start":28,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":458},"to":{"krate":0,"index":462}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":12003,"byte_end":12017,"line_start":43,"line_end":43,"column_start":41,"column_end":55},"kind":"SuperTrait","from":{"krate":0,"index":460},"to":{"krate":0,"index":462}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":12020,"byte_end":12034,"line_start":43,"line_end":43,"column_start":58,"column_end":72},"kind":"SuperTrait","from":{"krate":4,"index":44},"to":{"krate":0,"index":462}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":12469,"byte_end":12479,"line_start":54,"line_end":54,"column_start":33,"column_end":43},"kind":"SuperTrait","from":{"krate":0,"index":458},"to":{"krate":0,"index":464}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":12482,"byte_end":12496,"line_start":54,"line_end":54,"column_start":46,"column_end":60},"kind":"SuperTrait","from":{"krate":0,"index":460},"to":{"krate":0,"index":464}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":12946,"byte_end":12959,"line_start":68,"line_end":68,"column_start":26,"column_end":39},"kind":"SuperTrait","from":{"krate":4,"index":33},"to":{"krate":0,"index":467}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":13603,"byte_end":13613,"line_start":84,"line_end":84,"column_start":31,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":458},"to":{"krate":0,"index":469}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":13616,"byte_end":13630,"line_start":84,"line_end":84,"column_start":44,"column_end":58},"kind":"SuperTrait","from":{"krate":4,"index":44},"to":{"krate":0,"index":469}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":13633,"byte_end":13647,"line_start":84,"line_end":84,"column_start":61,"column_end":75},"kind":"SuperTrait","from":{"krate":0,"index":460},"to":{"krate":0,"index":469}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/core_api.rs","byte_start":13650,"byte_end":13655,"line_start":84,"line_end":84,"column_start":78,"column_end":83},"kind":"SuperTrait","from":{"krate":1,"index":3029},"to":{"krate":0,"index":469}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":34526,"byte_end":34540,"line_start":15,"line_end":15,"column_start":19,"column_end":33},"kind":"SuperTrait","from":{"krate":4,"index":44},"to":{"krate":0,"index":501}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":35831,"byte_end":35832,"line_start":57,"line_end":57,"column_start":65,"column_end":66},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":518},"to":{"krate":0,"index":501}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/digest.rs","byte_start":39176,"byte_end":39177,"line_start":179,"line_end":179,"column_start":76,"column_end":77},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":541},"to":{"krate":0,"index":534}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":41423,"byte_end":41437,"line_start":19,"line_end":19,"column_start":16,"column_end":30},"kind":"SuperTrait","from":{"krate":4,"index":44},"to":{"krate":0,"index":591}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":41440,"byte_end":41445,"line_start":19,"line_end":19,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":1,"index":3029},"to":{"krate":0,"index":591}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":43551,"byte_end":43552,"line_start":82,"line_end":82,"column_start":51,"column_end":52},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":605},"to":{"krate":0,"index":591}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":46412,"byte_end":46420,"line_start":204,"line_end":204,"column_start":25,"column_end":33},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":803},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":46755,"byte_end":46763,"line_start":218,"line_end":218,"column_start":45,"column_end":53},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":803},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":46915,"byte_end":46923,"line_start":225,"line_end":225,"column_start":53,"column_end":61},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":803},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":47076,"byte_end":47084,"line_start":232,"line_end":232,"column_start":44,"column_end":52},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":803},"to":{"krate":8,"index":57}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":47244,"byte_end":47252,"line_start":239,"line_end":239,"column_start":39,"column_end":47},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":803},"to":{"krate":1,"index":2675}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":47393,"byte_end":47401,"line_start":246,"line_end":246,"column_start":32,"column_end":40},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":803},"to":{"krate":1,"index":2680}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/mac.rs","byte_start":47646,"byte_end":47654,"line_start":254,"line_end":254,"column_start":23,"column_end":31},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":809},"to":{"krate":1,"index":9611}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":3190,"byte_end":3196,"line_start":93,"line_end":93,"column_start":24,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":703},"to":{"krate":0,"index":707}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":3199,"byte_end":3213,"line_start":93,"line_end":93,"column_start":33,"column_end":47},"kind":"SuperTrait","from":{"krate":4,"index":44},"to":{"krate":0,"index":707}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":3216,"byte_end":3221,"line_start":93,"line_end":93,"column_start":50,"column_end":55},"kind":"SuperTrait","from":{"krate":1,"index":3029},"to":{"krate":0,"index":707}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":3661,"byte_end":3672,"line_start":107,"line_end":107,"column_start":29,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":707},"to":{"krate":0,"index":710}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":3675,"byte_end":3680,"line_start":107,"line_end":107,"column_start":43,"column_end":48},"kind":"SuperTrait","from":{"krate":4,"index":55},"to":{"krate":0,"index":710}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":4934,"byte_end":4939,"line_start":142,"line_end":142,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":3029},"to":{"krate":0,"index":715}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":4942,"byte_end":4948,"line_start":142,"line_end":142,"column_start":37,"column_end":43},"kind":"SuperTrait","from":{"krate":0,"index":703},"to":{"krate":0,"index":715}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":6161,"byte_end":6177,"line_start":179,"line_end":179,"column_start":34,"column_end":50},"kind":"SuperTrait","from":{"krate":0,"index":715},"to":{"krate":0,"index":721}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":6180,"byte_end":6185,"line_start":179,"line_end":179,"column_start":53,"column_end":58},"kind":"SuperTrait","from":{"krate":4,"index":55},"to":{"krate":0,"index":721}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":7105,"byte_end":7110,"line_start":203,"line_end":203,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":1,"index":3029},"to":{"krate":0,"index":724}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":7113,"byte_end":7119,"line_start":203,"line_end":203,"column_start":35,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":703},"to":{"krate":0,"index":724}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":9012,"byte_end":9026,"line_start":254,"line_end":254,"column_start":32,"column_end":46},"kind":"SuperTrait","from":{"krate":0,"index":724},"to":{"krate":0,"index":732}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":9029,"byte_end":9034,"line_start":254,"line_end":254,"column_start":49,"column_end":54},"kind":"SuperTrait","from":{"krate":4,"index":55},"to":{"krate":0,"index":732}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":10016,"byte_end":10033,"line_start":280,"line_end":280,"column_start":23,"column_end":40},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":824},"to":{"krate":1,"index":9611}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.10.5/src/lib.rs","byte_start":10430,"byte_end":10447,"line_start":294,"line_end":294,"column_start":23,"column_end":40},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":833},"to":{"krate":1,"index":9611}}]}