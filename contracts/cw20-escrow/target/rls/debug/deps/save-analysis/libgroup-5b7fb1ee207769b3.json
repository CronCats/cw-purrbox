{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1","program":"/Users/trevorclarke/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","group","--edition=2021","/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=5b7fb1ee207769b3","-C","extra-filename=-5b7fb1ee207769b3","--out-dir","/Users/trevorclarke/code/cron/cw-purrbox/contracts/cw20-escrow/target/rls/debug/deps","-L","dependency=/Users/trevorclarke/code/cron/cw-purrbox/contracts/cw20-escrow/target/rls/debug/deps","--extern","ff=/Users/trevorclarke/code/cron/cw-purrbox/contracts/cw20-escrow/target/rls/debug/deps/libff-e392d193814ea464.rmeta","--extern","rand_core=/Users/trevorclarke/code/cron/cw-purrbox/contracts/cw20-escrow/target/rls/debug/deps/librand_core-75db2d0a7842c128.rmeta","--extern","subtle=/Users/trevorclarke/code/cron/cw-purrbox/contracts/cw20-escrow/target/rls/debug/deps/libsubtle-b97f54e6708d8225.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/trevorclarke/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/trevorclarke/code/cron/cw-purrbox/contracts/cw20-escrow/target/rls/debug/deps/libgroup-5b7fb1ee207769b3.rmeta"},"prelude":{"crate_id":{"name":"group","disambiguator":[4059414381887118030,0]},"crate_root":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src","external_crates":[{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[16249227214258238047,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[13791225915815425008,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[455111089362928276,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","num":4,"id":{"name":"ff","disambiguator":[6689642643876023332,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","num":5,"id":{"name":"subtle","disambiguator":[10187600383036868428,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","num":6,"id":{"name":"rand_core","disambiguator":[41299114264952942,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","num":7,"id":{"name":"std","disambiguator":[9602236740471282608,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","num":8,"id":{"name":"alloc","disambiguator":[740641686899810413,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","num":9,"id":{"name":"libc","disambiguator":[1452182208797737205,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","num":10,"id":{"name":"unwind","disambiguator":[4474361821197688885,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","num":11,"id":{"name":"cfg_if","disambiguator":[11146593528668201643,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[7026141623111916022,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[11096207044195207047,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","num":14,"id":{"name":"std_detect","disambiguator":[16946906222655600942,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","num":15,"id":{"name":"rustc_demangle","disambiguator":[9670608472714711915,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","num":16,"id":{"name":"addr2line","disambiguator":[3075685271658393714,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","num":17,"id":{"name":"gimli","disambiguator":[7553277853646633394,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","num":18,"id":{"name":"object","disambiguator":[5387634511767759158,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","num":19,"id":{"name":"memchr","disambiguator":[10401181353817371068,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","num":20,"id":{"name":"panic_unwind","disambiguator":[14296571408058143832,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","num":21,"id":{"name":"getrandom","disambiguator":[7826760453764783728,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","num":22,"id":{"name":"cfg_if","disambiguator":[13037983282529128945,0]}},{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","num":23,"id":{"name":"libc","disambiguator":[12525383312641221777,0]}}],"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":0,"byte_end":6178,"line_start":1,"line_end":174,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":0},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":225,"byte_end":227,"line_start":10,"line_end":10,"column_start":9,"column_end":11},"alias_span":null,"name":"ff","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":0,"byte_end":6178,"line_start":1,"line_end":174,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":105},{"krate":0,"index":144},{"krate":0,"index":147},{"krate":0,"index":151},{"krate":0,"index":155},{"krate":0,"index":160},{"krate":0,"index":163},{"krate":0,"index":167},{"krate":0,"index":171},{"krate":0,"index":176},{"krate":0,"index":185},{"krate":0,"index":189},{"krate":0,"index":194}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":0,"byte_end":10,"line_start":1,"line_end":1,"column_start":1,"column_end":11}},{"value":"deny(rustdoc :: broken_intra_doc_links)","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":65,"byte_end":106,"line_start":3,"line_end":3,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":48},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cofactor","qualname":"::cofactor","value":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":94},{"krate":0,"index":97}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":88},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":6508,"byte_end":6521,"line_start":10,"line_end":10,"column_start":11,"column_end":24},"name":"CofactorGroup","qualname":"::cofactor::CofactorGroup","value":"CofactorGroup: Group + GroupEncoding + GroupOps<<Self as CofactorGroup>::Subgroup> +\nGroupOpsOwned<<Self as CofactorGroup>::Subgroup>","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93}],"decl_id":null,"docs":" This trait represents an element of a cryptographic group with a large prime-order\n subgroup and a comparatively-small cofactor.\n","sig":null,"attributes":[{"value":"/ This trait represents an element of a cryptographic group with a large prime-order","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":6362,"byte_end":6448,"line_start":8,"line_end":8,"column_start":1,"column_end":87}},{"value":"/ subgroup and a comparatively-small cofactor.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":6449,"byte_end":6497,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":89},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":6837,"byte_end":6845,"line_start":18,"line_end":18,"column_start":10,"column_end":18},"name":"Subgroup","qualname":"::cofactor::CofactorGroup::Subgroup","value":"type Subgroup: PrimeGroup<Scalar = Self::Scalar> + Into<Self>;","parent":{"krate":0,"index":88},"children":[],"decl_id":null,"docs":" The large prime-order subgroup in which cryptographic operations are performed.\n If `Self` implements `PrimeGroup`, then `Self::Subgroup` may be `Self`.\n","sig":null,"attributes":[{"value":"/ The large prime-order subgroup in which cryptographic operations are performed.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":6664,"byte_end":6747,"line_start":16,"line_end":16,"column_start":5,"column_end":88}},{"value":"/ If `Self` implements `PrimeGroup`, then `Self::Subgroup` may be `Self`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":6752,"byte_end":6827,"line_start":17,"line_end":17,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":7395,"byte_end":7409,"line_start":29,"line_end":29,"column_start":8,"column_end":22},"name":"clear_cofactor","qualname":"::cofactor::CofactorGroup::clear_cofactor","value":"pub fn clear_cofactor(&Self) -> Self::Subgroup","parent":{"krate":0,"index":88},"children":[],"decl_id":null,"docs":" Maps `self` to the prime-order subgroup by multiplying this element by some\n `k`-multiple of the cofactor.","sig":null,"attributes":[{"value":"/ Maps `self` to the prime-order subgroup by multiplying this element by some","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":6900,"byte_end":6979,"line_start":20,"line_end":20,"column_start":5,"column_end":84}},{"value":"/ `k`-multiple of the cofactor.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":6984,"byte_end":7017,"line_start":21,"line_end":21,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":7022,"byte_end":7025,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ The value `k` does not vary between inputs for a given implementation, but may","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":7030,"byte_end":7112,"line_start":23,"line_end":23,"column_start":5,"column_end":87}},{"value":"/ vary between different implementations of `CofactorGroup` because some groups have","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":7117,"byte_end":7203,"line_start":24,"line_end":24,"column_start":5,"column_end":91}},{"value":"/ more efficient methods of clearing the cofactor when `k` is allowed to be","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":7208,"byte_end":7285,"line_start":25,"line_end":25,"column_start":5,"column_end":82}},{"value":"/ different than `1`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":7290,"byte_end":7313,"line_start":26,"line_end":26,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":7318,"byte_end":7321,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ If `Self` implements [`PrimeGroup`], this returns `self`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":7326,"byte_end":7387,"line_start":28,"line_end":28,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":7595,"byte_end":7608,"line_start":34,"line_end":34,"column_start":8,"column_end":21},"name":"into_subgroup","qualname":"::cofactor::CofactorGroup::into_subgroup","value":"pub fn into_subgroup(Self) -> CtOption<Self::Subgroup>","parent":{"krate":0,"index":88},"children":[],"decl_id":null,"docs":" Returns `self` if it is contained in the prime-order subgroup.","sig":null,"attributes":[{"value":"/ Returns `self` if it is contained in the prime-order subgroup.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":7441,"byte_end":7507,"line_start":31,"line_end":31,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":7512,"byte_end":7515,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ If `Self` implements [`PrimeGroup`], this returns `Some(self)`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":7520,"byte_end":7587,"line_start":33,"line_end":33,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":7846,"byte_end":7860,"line_start":41,"line_end":41,"column_start":8,"column_end":22},"name":"is_small_order","qualname":"::cofactor::CofactorGroup::is_small_order","value":"pub fn is_small_order(&Self) -> Choice","parent":{"krate":0,"index":88},"children":[],"decl_id":null,"docs":" Determines if this element is of small order.","sig":null,"attributes":[{"value":"/ Determines if this element is of small order.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":7649,"byte_end":7698,"line_start":36,"line_end":36,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":7703,"byte_end":7706,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Returns:","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":7711,"byte_end":7723,"line_start":38,"line_end":38,"column_start":5,"column_end":17}},{"value":"/ - `true` if `self` is in the torsion subgroup.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":7728,"byte_end":7778,"line_start":39,"line_end":39,"column_start":5,"column_end":55}},{"value":"/ - `false` if `self` is not in the torsion subgroup.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":7783,"byte_end":7838,"line_start":40,"line_end":40,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":8265,"byte_end":8280,"line_start":52,"line_end":52,"column_start":8,"column_end":23},"name":"is_torsion_free","qualname":"::cofactor::CofactorGroup::is_torsion_free","value":"pub fn is_torsion_free(&Self) -> Choice","parent":{"krate":0,"index":88},"children":[],"decl_id":null,"docs":" Determines if this element is \"torsion free\", i.e., is contained in the\n prime-order subgroup.","sig":null,"attributes":[{"value":"/ Determines if this element is \"torsion free\", i.e., is contained in the","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":7935,"byte_end":8010,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ prime-order subgroup.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":8015,"byte_end":8040,"line_start":46,"line_end":46,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":8045,"byte_end":8048,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Returns:","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":8053,"byte_end":8065,"line_start":48,"line_end":48,"column_start":5,"column_end":17}},{"value":"/ - `true` if `self` has trivial torsion and is in the prime-order subgroup.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":8070,"byte_end":8148,"line_start":49,"line_end":49,"column_start":5,"column_end":83}},{"value":"/ - `false` if `self` has non-zero torsion component and is not in the prime-order","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":8153,"byte_end":8237,"line_start":50,"line_end":50,"column_start":5,"column_end":89}},{"value":"/   subgroup.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":8242,"byte_end":8257,"line_start":51,"line_end":51,"column_start":5,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":94},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":8426,"byte_end":8439,"line_start":57,"line_end":57,"column_start":11,"column_end":24},"name":"CofactorCurve","qualname":"::cofactor::CofactorCurve","value":"CofactorCurve: Curve<AffineRepr = <Self as CofactorCurve>::Affine> + CofactorGroup","parent":null,"children":[{"krate":0,"index":95}],"decl_id":null,"docs":" Efficient representation of an elliptic curve point guaranteed to be\n in the correct prime order subgroup.\n","sig":null,"attributes":[{"value":"/ Efficient representation of an elliptic curve point guaranteed to be","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":8302,"byte_end":8374,"line_start":55,"line_end":55,"column_start":1,"column_end":73}},{"value":"/ in the correct prime order subgroup.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":8375,"byte_end":8415,"line_start":56,"line_end":56,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":95},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":8524,"byte_end":8530,"line_start":60,"line_end":60,"column_start":10,"column_end":16},"name":"Affine","qualname":"::cofactor::CofactorCurve::Affine","value":"type Affine: CofactorCurveAffine<Curve = Self, Scalar = Self::Scalar>\n        + Mul<Self::Scalar, Output = Self>\n        + for<'r> Mul<&'r Self::Scalar, Output = Self>;","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":97},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":8812,"byte_end":8831,"line_start":67,"line_end":67,"column_start":11,"column_end":30},"name":"CofactorCurveAffine","qualname":"::cofactor::CofactorCurveAffine","value":"CofactorCurveAffine: GroupEncoding + Copy + Clone + Sized + Send + Sync + fmt::Debug + PartialEq +\nEq + 'static + Neg<Output = Self> + Mul<<Self as CofactorCurveAffine>::Scalar,\nOutput = <Self as CofactorCurveAffine>::Curve> +\nfor<'r> Mul<&'r <Self as CofactorCurveAffine>::Scalar, Output =\n<Self as CofactorCurveAffine>::Curve>","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104}],"decl_id":null,"docs":" Affine representation of an elliptic curve point guaranteed to be\n in the correct prime order subgroup.\n","sig":null,"attributes":[{"value":"/ Affine representation of an elliptic curve point guaranteed to be","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":8691,"byte_end":8760,"line_start":65,"line_end":65,"column_start":1,"column_end":70}},{"value":"/ in the correct prime order subgroup.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":8761,"byte_end":8801,"line_start":66,"line_end":66,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":99},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":9227,"byte_end":9233,"line_start":85,"line_end":85,"column_start":10,"column_end":16},"name":"Scalar","qualname":"::cofactor::CofactorCurveAffine::Scalar","value":"type Scalar: PrimeField;","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":100},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":9256,"byte_end":9261,"line_start":86,"line_end":86,"column_start":10,"column_end":15},"name":"Curve","qualname":"::cofactor::CofactorCurveAffine::Curve","value":"type Curve: CofactorCurve<Affine = Self, Scalar = Self::Scalar>;","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":9363,"byte_end":9371,"line_start":89,"line_end":89,"column_start":8,"column_end":16},"name":"identity","qualname":"::cofactor::CofactorCurveAffine::identity","value":"pub fn identity() -> Self","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":" Returns the additive identity.\n","sig":null,"attributes":[{"value":"/ Returns the additive identity.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":9321,"byte_end":9355,"line_start":88,"line_end":88,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":9446,"byte_end":9455,"line_start":92,"line_end":92,"column_start":8,"column_end":17},"name":"generator","qualname":"::cofactor::CofactorCurveAffine::generator","value":"pub fn generator() -> Self","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":" Returns a fixed generator of unknown exponent.\n","sig":null,"attributes":[{"value":"/ Returns a fixed generator of unknown exponent.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":9388,"byte_end":9438,"line_start":91,"line_end":91,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":9573,"byte_end":9584,"line_start":96,"line_end":96,"column_start":8,"column_end":19},"name":"is_identity","qualname":"::cofactor::CofactorCurveAffine::is_identity","value":"pub fn is_identity(&Self) -> Choice","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":" Determines if this point represents the point at infinity; the\n additive identity.\n","sig":null,"attributes":[{"value":"/ Determines if this point represents the point at infinity; the","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":9472,"byte_end":9538,"line_start":94,"line_end":94,"column_start":5,"column_end":71}},{"value":"/ additive identity.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":9543,"byte_end":9565,"line_start":95,"line_end":95,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":9670,"byte_end":9678,"line_start":99,"line_end":99,"column_start":8,"column_end":16},"name":"to_curve","qualname":"::cofactor::CofactorCurveAffine::to_curve","value":"pub fn to_curve(&Self) -> Self::Curve","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":" Converts this element to its curve representation.\n","sig":null,"attributes":[{"value":"/ Converts this element to its curve representation.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":9608,"byte_end":9662,"line_start":98,"line_end":98,"column_start":5,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":105},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/prime.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prime","qualname":"::prime","value":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/prime.rs","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":136}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":132},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/prime.rs","byte_start":9916,"byte_end":9926,"line_start":9,"line_end":9,"column_start":11,"column_end":21},"name":"PrimeGroup","qualname":"::prime::PrimeGroup","value":"PrimeGroup: Group + GroupEncoding","parent":null,"children":[],"decl_id":null,"docs":" This trait represents an element of a prime-order cryptographic group.\n","sig":null,"attributes":[{"value":"/ This trait represents an element of a prime-order cryptographic group.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/prime.rs","byte_start":9831,"byte_end":9905,"line_start":8,"line_end":8,"column_start":1,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":133},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/prime.rs","byte_start":10078,"byte_end":10088,"line_start":13,"line_end":13,"column_start":11,"column_end":21},"name":"PrimeCurve","qualname":"::prime::PrimeCurve","value":"PrimeCurve: Curve<AffineRepr = <Self as PrimeCurve>::Affine> + PrimeGroup","parent":null,"children":[{"krate":0,"index":134}],"decl_id":null,"docs":" Efficient representation of an elliptic curve point guaranteed to be\n in the correct prime order subgroup.\n","sig":null,"attributes":[{"value":"/ Efficient representation of an elliptic curve point guaranteed to be","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/prime.rs","byte_start":9954,"byte_end":10026,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/ in the correct prime order subgroup.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/prime.rs","byte_start":10027,"byte_end":10067,"line_start":12,"line_end":12,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":134},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/prime.rs","byte_start":10163,"byte_end":10169,"line_start":14,"line_end":14,"column_start":10,"column_end":16},"name":"Affine","qualname":"::prime::PrimeCurve::Affine","value":"type Affine: PrimeCurveAffine<Curve = Self, Scalar = Self::Scalar>\n        + Mul<Self::Scalar, Output = Self>\n        + for<'r> Mul<&'r Self::Scalar, Output = Self>;","parent":{"krate":0,"index":133},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":136},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/prime.rs","byte_start":10448,"byte_end":10464,"line_start":21,"line_end":21,"column_start":11,"column_end":27},"name":"PrimeCurveAffine","qualname":"::prime::PrimeCurveAffine","value":"PrimeCurveAffine: GroupEncoding + Copy + Clone + Sized + Send + Sync + fmt::Debug + PartialEq +\nEq + 'static + Neg<Output = Self> + Mul<<Self as PrimeCurveAffine>::Scalar,\nOutput = <Self as PrimeCurveAffine>::Curve> +\nfor<'r> Mul<&'r <Self as PrimeCurveAffine>::Scalar, Output =\n<Self as PrimeCurveAffine>::Curve>","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143}],"decl_id":null,"docs":" Affine representation of an elliptic curve point guaranteed to be\n in the correct prime order subgroup.\n","sig":null,"attributes":[{"value":"/ Affine representation of an elliptic curve point guaranteed to be","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/prime.rs","byte_start":10327,"byte_end":10396,"line_start":19,"line_end":19,"column_start":1,"column_end":70}},{"value":"/ in the correct prime order subgroup.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/prime.rs","byte_start":10397,"byte_end":10437,"line_start":20,"line_end":20,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":138},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/prime.rs","byte_start":10821,"byte_end":10827,"line_start":35,"line_end":35,"column_start":10,"column_end":16},"name":"Scalar","qualname":"::prime::PrimeCurveAffine::Scalar","value":"type Scalar: PrimeField;","parent":{"krate":0,"index":136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":139},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/prime.rs","byte_start":10850,"byte_end":10855,"line_start":36,"line_end":36,"column_start":10,"column_end":15},"name":"Curve","qualname":"::prime::PrimeCurveAffine::Curve","value":"type Curve: PrimeCurve<Affine = Self, Scalar = Self::Scalar>;","parent":{"krate":0,"index":136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/prime.rs","byte_start":10954,"byte_end":10962,"line_start":39,"line_end":39,"column_start":8,"column_end":16},"name":"identity","qualname":"::prime::PrimeCurveAffine::identity","value":"pub fn identity() -> Self","parent":{"krate":0,"index":136},"children":[],"decl_id":null,"docs":" Returns the additive identity.\n","sig":null,"attributes":[{"value":"/ Returns the additive identity.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/prime.rs","byte_start":10912,"byte_end":10946,"line_start":38,"line_end":38,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/prime.rs","byte_start":11037,"byte_end":11046,"line_start":42,"line_end":42,"column_start":8,"column_end":17},"name":"generator","qualname":"::prime::PrimeCurveAffine::generator","value":"pub fn generator() -> Self","parent":{"krate":0,"index":136},"children":[],"decl_id":null,"docs":" Returns a fixed generator of unknown exponent.\n","sig":null,"attributes":[{"value":"/ Returns a fixed generator of unknown exponent.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/prime.rs","byte_start":10979,"byte_end":11029,"line_start":41,"line_end":41,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/prime.rs","byte_start":11164,"byte_end":11175,"line_start":46,"line_end":46,"column_start":8,"column_end":19},"name":"is_identity","qualname":"::prime::PrimeCurveAffine::is_identity","value":"pub fn is_identity(&Self) -> Choice","parent":{"krate":0,"index":136},"children":[],"decl_id":null,"docs":" Determines if this point represents the point at infinity; the\n additive identity.\n","sig":null,"attributes":[{"value":"/ Determines if this point represents the point at infinity; the","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/prime.rs","byte_start":11063,"byte_end":11129,"line_start":44,"line_end":44,"column_start":5,"column_end":71}},{"value":"/ additive identity.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/prime.rs","byte_start":11134,"byte_end":11156,"line_start":45,"line_end":45,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/prime.rs","byte_start":11261,"byte_end":11269,"line_start":49,"line_end":49,"column_start":8,"column_end":16},"name":"to_curve","qualname":"::prime::PrimeCurveAffine::to_curve","value":"pub fn to_curve(&Self) -> Self::Curve","parent":{"krate":0,"index":136},"children":[],"decl_id":null,"docs":" Converts this element to its curve representation.\n","sig":null,"attributes":[{"value":"/ Converts this element to its curve representation.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/prime.rs","byte_start":11199,"byte_end":11253,"line_start":48,"line_end":48,"column_start":5,"column_end":59}}]},{"kind":"Trait","id":{"krate":0,"index":144},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":675,"byte_end":683,"line_start":30,"line_end":30,"column_start":11,"column_end":19},"name":"GroupOps","qualname":"::GroupOps","value":"GroupOps<Rhs = Self, Output = Self>: Add<Rhs, Output = Output> + Sub<Rhs, Output = Output> + AddAssign<Rhs> +\nSubAssign<Rhs>","parent":null,"children":[],"decl_id":null,"docs":" A helper trait for types with a group operation.\n","sig":null,"attributes":[{"value":"/ A helper trait for types with a group operation.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":612,"byte_end":664,"line_start":29,"line_end":29,"column_start":1,"column_end":53}}]},{"kind":"Trait","id":{"krate":0,"index":151},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":1032,"byte_end":1045,"line_start":41,"line_end":41,"column_start":11,"column_end":24},"name":"GroupOpsOwned","qualname":"::GroupOpsOwned","value":"GroupOpsOwned<Rhs = Self, Output = Self>: for<'r> GroupOps<&'r Rhs, Output>","parent":null,"children":[],"decl_id":null,"docs":" A helper trait for references with a group operation.\n","sig":null,"attributes":[{"value":"/ A helper trait for references with a group operation.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":964,"byte_end":1021,"line_start":40,"line_end":40,"column_start":1,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":160},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":1293,"byte_end":1302,"line_start":45,"line_end":45,"column_start":11,"column_end":20},"name":"ScalarMul","qualname":"::ScalarMul","value":"ScalarMul<Rhs, Output = Self>: Mul<Rhs, Output = Output> + MulAssign<Rhs>","parent":null,"children":[],"decl_id":null,"docs":" A helper trait for types implementing group scalar multiplication.\n","sig":null,"attributes":[{"value":"/ A helper trait for types implementing group scalar multiplication.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":1212,"byte_end":1282,"line_start":44,"line_end":44,"column_start":1,"column_end":71}}]},{"kind":"Trait","id":{"krate":0,"index":167},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":1563,"byte_end":1577,"line_start":51,"line_end":51,"column_start":11,"column_end":25},"name":"ScalarMulOwned","qualname":"::ScalarMulOwned","value":"ScalarMulOwned<Rhs, Output = Self>: for<'r> ScalarMul<&'r Rhs, Output>","parent":null,"children":[],"decl_id":null,"docs":" A helper trait for references implementing group scalar multiplication.\n","sig":null,"attributes":[{"value":"/ A helper trait for references implementing group scalar multiplication.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":1477,"byte_end":1552,"line_start":50,"line_end":50,"column_start":1,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":176},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":1813,"byte_end":1818,"line_start":55,"line_end":55,"column_start":11,"column_end":16},"name":"Group","qualname":"::Group","value":"Group: Clone + Copy + fmt::Debug + Eq + Sized + Send + Sync + 'static + Sum +\nfor<'a> Sum<&'a Self> + Neg<Output = Self> + GroupOps + GroupOpsOwned +\nScalarMul<<Self as Group>::Scalar> + ScalarMulOwned<<Self as Group>::Scalar>","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184}],"decl_id":null,"docs":" This trait represents an element of a cryptographic group.\n","sig":null,"attributes":[{"value":"/ This trait represents an element of a cryptographic group.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":1740,"byte_end":1802,"line_start":54,"line_end":54,"column_start":1,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":178},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":2174,"byte_end":2180,"line_start":73,"line_end":73,"column_start":10,"column_end":16},"name":"Scalar","qualname":"::Group::Scalar","value":"type Scalar: PrimeField;","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":" Scalars modulo the order of this group's scalar field.\n","sig":null,"attributes":[{"value":"/ Scalars modulo the order of this group's scalar field.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":2106,"byte_end":2164,"line_start":72,"line_end":72,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":2402,"byte_end":2408,"line_start":79,"line_end":79,"column_start":8,"column_end":14},"name":"random","qualname":"::Group::random","value":"pub fn random<impl RngCore: RngCore>(impl RngCore) -> Self","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":" Returns an element chosen uniformly at random from the non-identity elements of\n this group.","sig":null,"attributes":[{"value":"/ Returns an element chosen uniformly at random from the non-identity elements of","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":2199,"byte_end":2282,"line_start":75,"line_end":75,"column_start":5,"column_end":88}},{"value":"/ this group.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":2287,"byte_end":2302,"line_start":76,"line_end":76,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":2307,"byte_end":2310,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This function is non-deterministic, and samples from the user-provided RNG.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":2315,"byte_end":2394,"line_start":78,"line_end":78,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":2521,"byte_end":2529,"line_start":82,"line_end":82,"column_start":8,"column_end":16},"name":"identity","qualname":"::Group::identity","value":"pub fn identity() -> Self","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":" Returns the additive identity, also known as the \"neutral element\".\n","sig":null,"attributes":[{"value":"/ Returns the additive identity, also known as the \"neutral element\".","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":2442,"byte_end":2513,"line_start":81,"line_end":81,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":2612,"byte_end":2621,"line_start":85,"line_end":85,"column_start":8,"column_end":17},"name":"generator","qualname":"::Group::generator","value":"pub fn generator() -> Self","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":" Returns a fixed generator of the prime-order subgroup.\n","sig":null,"attributes":[{"value":"/ Returns a fixed generator of the prime-order subgroup.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":2546,"byte_end":2604,"line_start":84,"line_end":84,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":2691,"byte_end":2702,"line_start":88,"line_end":88,"column_start":8,"column_end":19},"name":"is_identity","qualname":"::Group::is_identity","value":"pub fn is_identity(&Self) -> Choice","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":" Determines if this point is the identity.\n","sig":null,"attributes":[{"value":"/ Determines if this point is the identity.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":2638,"byte_end":2683,"line_start":87,"line_end":87,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":2775,"byte_end":2781,"line_start":92,"line_end":92,"column_start":8,"column_end":14},"name":"double","qualname":"::Group::double","value":"pub fn double(&Self) -> Self","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":" Doubles this element.\n","sig":null,"attributes":[{"value":"/ Doubles this element.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":2726,"byte_end":2751,"line_start":90,"line_end":90,"column_start":5,"column_end":30}},{"value":"must_use","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":2756,"byte_end":2767,"line_start":91,"line_end":91,"column_start":5,"column_end":16}}]},{"kind":"Trait","id":{"krate":0,"index":185},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":2879,"byte_end":2884,"line_start":96,"line_end":96,"column_start":11,"column_end":16},"name":"Curve","qualname":"::Curve","value":"Curve: Group + GroupOps<<Self as Curve>::AffineRepr> +\nGroupOpsOwned<<Self as Curve>::AffineRepr>","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188}],"decl_id":null,"docs":" Efficient representation of an elliptic curve point guaranteed.\n","sig":null,"attributes":[{"value":"/ Efficient representation of an elliptic curve point guaranteed.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":2801,"byte_end":2868,"line_start":95,"line_end":95,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":186},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":3051,"byte_end":3061,"line_start":100,"line_end":100,"column_start":10,"column_end":20},"name":"AffineRepr","qualname":"::Curve::AffineRepr","value":"type AffineRepr;","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":" The affine representation for this elliptic curve.\n","sig":null,"attributes":[{"value":"/ The affine representation for this elliptic curve.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":2987,"byte_end":3041,"line_start":99,"line_end":99,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":3199,"byte_end":3214,"line_start":104,"line_end":104,"column_start":8,"column_end":23},"name":"batch_normalize","qualname":"::Curve::batch_normalize","value":"pub fn batch_normalize(&[Self], &mut [Self::AffineRepr])","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":" Converts a batch of projective elements into affine elements. This function will\n panic if `p.len() != q.len()`.\n","sig":null,"attributes":[{"value":"/ Converts a batch of projective elements into affine elements. This function will","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":3068,"byte_end":3152,"line_start":102,"line_end":102,"column_start":5,"column_end":89}},{"value":"/ panic if `p.len() != q.len()`.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":3157,"byte_end":3191,"line_start":103,"line_end":103,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":3465,"byte_end":3474,"line_start":113,"line_end":113,"column_start":8,"column_end":17},"name":"to_affine","qualname":"::Curve::to_affine","value":"pub fn to_affine(&Self) -> Self::AffineRepr","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":" Converts this element into its affine representation.\n","sig":null,"attributes":[{"value":"/ Converts this element into its affine representation.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":3400,"byte_end":3457,"line_start":112,"line_end":112,"column_start":5,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":189},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":3516,"byte_end":3529,"line_start":116,"line_end":116,"column_start":11,"column_end":24},"name":"GroupEncoding","qualname":"::GroupEncoding","value":"GroupEncoding: Sized","parent":null,"children":[{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":190},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":4446,"byte_end":4450,"line_start":137,"line_end":137,"column_start":10,"column_end":14},"name":"Repr","qualname":"::GroupEncoding::Repr","value":"type Repr: Copy + Default + Send + Sync + 'static + AsRef<[u8]> + AsMut<[u8]>;","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" The encoding of group elements.","sig":null,"attributes":[{"value":"/ The encoding of group elements.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":3543,"byte_end":3578,"line_start":117,"line_end":117,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":3583,"byte_end":3586,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ The `Default` implementation is not required to return a valid point encoding. The","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":3591,"byte_end":3677,"line_start":119,"line_end":119,"column_start":5,"column_end":91}},{"value":"/ bound is present to enable encodings to be constructed generically:","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":3682,"byte_end":3753,"line_start":120,"line_end":120,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":3758,"byte_end":3765,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ # use group::GroupEncoding;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":3770,"byte_end":3801,"line_start":122,"line_end":122,"column_start":5,"column_end":36}},{"value":"/ # use subtle::CtOption;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":3806,"byte_end":3833,"line_start":123,"line_end":123,"column_start":5,"column_end":32}},{"value":"/ # struct G;","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":3838,"byte_end":3853,"line_start":124,"line_end":124,"column_start":5,"column_end":20}},{"value":"/ # impl GroupEncoding for G {","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":3858,"byte_end":3890,"line_start":125,"line_end":125,"column_start":5,"column_end":37}},{"value":"/ #     type Repr = [u8; 0];","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":3895,"byte_end":3925,"line_start":126,"line_end":126,"column_start":5,"column_end":35}},{"value":"/ #     fn from_bytes(bytes: &Self::Repr) -> CtOption<Self> { unimplemented!() }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":3930,"byte_end":4012,"line_start":127,"line_end":127,"column_start":5,"column_end":87}},{"value":"/ #     fn from_bytes_unchecked(bytes: &Self::Repr) -> CtOption<Self> { unimplemented!() }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":4017,"byte_end":4109,"line_start":128,"line_end":128,"column_start":5,"column_end":97}},{"value":"/ #     fn to_bytes(&self) -> Self::Repr { unimplemented!() }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":4114,"byte_end":4177,"line_start":129,"line_end":129,"column_start":5,"column_end":68}},{"value":"/ # }","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":4182,"byte_end":4189,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ # let buf = &[0u8; 0][..];","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":4194,"byte_end":4224,"line_start":131,"line_end":131,"column_start":5,"column_end":35}},{"value":"/ let mut encoding = <G as GroupEncoding>::Repr::default();","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":4229,"byte_end":4290,"line_start":132,"line_end":132,"column_start":5,"column_end":66}},{"value":"/ encoding.as_mut().copy_from_slice(buf);","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":4295,"byte_end":4338,"line_start":133,"line_end":133,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":4343,"byte_end":4350,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":4355,"byte_end":4358,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ It is recommended that the default should be the all-zeroes encoding.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":4363,"byte_end":4436,"line_start":136,"line_end":136,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":4595,"byte_end":4605,"line_start":140,"line_end":140,"column_start":8,"column_end":18},"name":"from_bytes","qualname":"::GroupEncoding::from_bytes","value":"pub fn from_bytes(&Self::Repr) -> CtOption<Self>","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" Attempts to deserialize a group element from its encoding.\n","sig":null,"attributes":[{"value":"/ Attempts to deserialize a group element from its encoding.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":4525,"byte_end":4587,"line_start":139,"line_end":139,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":4948,"byte_end":4968,"line_start":147,"line_end":147,"column_start":8,"column_end":28},"name":"from_bytes_unchecked","qualname":"::GroupEncoding::from_bytes_unchecked","value":"pub fn from_bytes_unchecked(&Self::Repr) -> CtOption<Self>","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" Attempts to deserialize a group element, not checking if the element is valid.","sig":null,"attributes":[{"value":"/ Attempts to deserialize a group element, not checking if the element is valid.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":4650,"byte_end":4732,"line_start":142,"line_end":142,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":4737,"byte_end":4740,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ **This is dangerous to call unless you trust the bytes you are reading; otherwise,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":4745,"byte_end":4831,"line_start":144,"line_end":144,"column_start":5,"column_end":91}},{"value":"/ API invariants may be broken.** Please consider using","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":4836,"byte_end":4893,"line_start":145,"line_end":145,"column_start":5,"column_end":62}},{"value":"/ [`GroupEncoding::from_bytes`] instead.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":4898,"byte_end":4940,"line_start":146,"line_end":146,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":5198,"byte_end":5206,"line_start":152,"line_end":152,"column_start":8,"column_end":16},"name":"to_bytes","qualname":"::GroupEncoding::to_bytes","value":"pub fn to_bytes(&Self) -> Self::Repr","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" Converts this element into its byte encoding. This may or may not support\n encoding the identity.\n","sig":null,"attributes":[{"value":"/ Converts this element into its byte encoding. This may or may not support","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":5013,"byte_end":5090,"line_start":149,"line_end":149,"column_start":5,"column_end":82}},{"value":"/ encoding the identity.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":5095,"byte_end":5121,"line_start":150,"line_end":150,"column_start":5,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":194},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":5346,"byte_end":5366,"line_start":157,"line_end":157,"column_start":11,"column_end":31},"name":"UncompressedEncoding","qualname":"::UncompressedEncoding","value":"UncompressedEncoding: Sized","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198}],"decl_id":null,"docs":" Affine representation of a point on an elliptic curve that has a defined uncompressed\n encoding.\n","sig":null,"attributes":[{"value":"/ Affine representation of a point on an elliptic curve that has a defined uncompressed","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":5232,"byte_end":5321,"line_start":155,"line_end":155,"column_start":1,"column_end":90}},{"value":"/ encoding.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":5322,"byte_end":5335,"line_start":156,"line_end":156,"column_start":1,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":195},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":5385,"byte_end":5397,"line_start":158,"line_end":158,"column_start":10,"column_end":22},"name":"Uncompressed","qualname":"::UncompressedEncoding::Uncompressed","value":"type Uncompressed: Default + AsRef<[u8]> + AsMut<[u8]>;","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":5519,"byte_end":5536,"line_start":161,"line_end":161,"column_start":8,"column_end":25},"name":"from_uncompressed","qualname":"::UncompressedEncoding::from_uncompressed","value":"pub fn from_uncompressed(&Self::Uncompressed) -> CtOption<Self>","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":" Attempts to deserialize an element from its uncompressed encoding.\n","sig":null,"attributes":[{"value":"/ Attempts to deserialize an element from its uncompressed encoding.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":5441,"byte_end":5511,"line_start":160,"line_end":160,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":5935,"byte_end":5962,"line_start":169,"line_end":169,"column_start":8,"column_end":35},"name":"from_uncompressed_unchecked","qualname":"::UncompressedEncoding::from_uncompressed_unchecked","value":"pub fn from_uncompressed_unchecked(&Self::Uncompressed) -> CtOption<Self>","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":" Attempts to deserialize an uncompressed element, not checking if the element is in\n the correct subgroup.","sig":null,"attributes":[{"value":"/ Attempts to deserialize an uncompressed element, not checking if the element is in","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":5589,"byte_end":5675,"line_start":163,"line_end":163,"column_start":5,"column_end":91}},{"value":"/ the correct subgroup.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":5680,"byte_end":5705,"line_start":164,"line_end":164,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":5710,"byte_end":5713,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ **This is dangerous to call unless you trust the bytes you are reading; otherwise,","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":5718,"byte_end":5804,"line_start":166,"line_end":166,"column_start":5,"column_end":91}},{"value":"/ API invariants may be broken.** Please consider using","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":5809,"byte_end":5866,"line_start":167,"line_end":167,"column_start":5,"column_end":62}},{"value":"/ [`UncompressedEncoding::from_uncompressed`] instead.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":5871,"byte_end":5927,"line_start":168,"line_end":168,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":173,"line_end":173,"column_start":8,"column_end":23},"name":"to_uncompressed","qualname":"::UncompressedEncoding::to_uncompressed","value":"pub fn to_uncompressed(&Self) -> Self::Uncompressed","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":" Converts this element into its uncompressed encoding, so long as it's not\n the point at infinity.\n","sig":null,"attributes":[{"value":"/ Converts this element into its uncompressed encoding, so long as it's not","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":6015,"byte_end":6092,"line_start":171,"line_end":171,"column_start":5,"column_end":82}},{"value":"/ the point at infinity.","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":6097,"byte_end":6123,"line_start":172,"line_end":172,"column_start":5,"column_end":31}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":856,"byte_end":857,"line_start":35,"line_end":35,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":1163,"byte_end":1164,"line_start":42,"line_end":42,"column_start":53,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":1419,"byte_end":1420,"line_start":47,"line_end":47,"column_start":49,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":1690,"byte_end":1691,"line_start":52,"line_end":52,"column_start":54,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":421,"byte_end":429,"line_start":19,"line_end":19,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":48}},{"kind":"Mod","span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":439,"byte_end":444,"line_start":20,"line_end":20,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":105}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":6527,"byte_end":6532,"line_start":11,"line_end":11,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":0,"index":176},"to":{"krate":0,"index":88}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":6539,"byte_end":6552,"line_start":12,"line_end":12,"column_start":7,"column_end":20},"kind":"SuperTrait","from":{"krate":0,"index":189},"to":{"krate":0,"index":88}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":6559,"byte_end":6567,"line_start":13,"line_end":13,"column_start":7,"column_end":15},"kind":"SuperTrait","from":{"krate":0,"index":144},"to":{"krate":0,"index":88}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":6609,"byte_end":6622,"line_start":14,"line_end":14,"column_start":7,"column_end":20},"kind":"SuperTrait","from":{"krate":0,"index":151},"to":{"krate":0,"index":88}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":8445,"byte_end":8450,"line_start":58,"line_end":58,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":0,"index":185},"to":{"krate":0,"index":94}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":8499,"byte_end":8512,"line_start":58,"line_end":58,"column_start":59,"column_end":72},"kind":"SuperTrait","from":{"krate":0,"index":88},"to":{"krate":0,"index":94}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":8837,"byte_end":8850,"line_start":68,"line_end":68,"column_start":5,"column_end":18},"kind":"SuperTrait","from":{"krate":0,"index":189},"to":{"krate":0,"index":97}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":8857,"byte_end":8861,"line_start":69,"line_end":69,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":3034},"to":{"krate":0,"index":97}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":8868,"byte_end":8873,"line_start":70,"line_end":70,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":1,"index":2645},"to":{"krate":0,"index":97}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":8880,"byte_end":8885,"line_start":71,"line_end":71,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":1,"index":3029},"to":{"krate":0,"index":97}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":8892,"byte_end":8896,"line_start":72,"line_end":72,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":3024},"to":{"krate":0,"index":97}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":8903,"byte_end":8907,"line_start":73,"line_end":73,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":3036},"to":{"krate":0,"index":97}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":8919,"byte_end":8924,"line_start":74,"line_end":74,"column_start":12,"column_end":17},"kind":"SuperTrait","from":{"krate":1,"index":9604},"to":{"krate":0,"index":97}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":8931,"byte_end":8940,"line_start":75,"line_end":75,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":1,"index":2675},"to":{"krate":0,"index":97}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":8947,"byte_end":8949,"line_start":76,"line_end":76,"column_start":7,"column_end":9},"kind":"SuperTrait","from":{"krate":1,"index":2680},"to":{"krate":0,"index":97}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":8970,"byte_end":8973,"line_start":78,"line_end":78,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":3118},"to":{"krate":0,"index":97}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":8995,"byte_end":8998,"line_start":79,"line_end":79,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":3101},"to":{"krate":0,"index":97}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/cofactor.rs","byte_start":9099,"byte_end":9102,"line_start":80,"line_end":80,"column_start":15,"column_end":18},"kind":"SuperTrait","from":{"krate":1,"index":3101},"to":{"krate":0,"index":97}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/prime.rs","byte_start":9928,"byte_end":9933,"line_start":9,"line_end":9,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":176},"to":{"krate":0,"index":132}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/prime.rs","byte_start":9936,"byte_end":9949,"line_start":9,"line_end":9,"column_start":31,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":189},"to":{"krate":0,"index":132}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/prime.rs","byte_start":10090,"byte_end":10095,"line_start":13,"line_end":13,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":185},"to":{"krate":0,"index":133}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/prime.rs","byte_start":10141,"byte_end":10151,"line_start":13,"line_end":13,"column_start":74,"column_end":84},"kind":"SuperTrait","from":{"krate":0,"index":132},"to":{"krate":0,"index":133}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/prime.rs","byte_start":10466,"byte_end":10479,"line_start":21,"line_end":21,"column_start":29,"column_end":42},"kind":"SuperTrait","from":{"krate":0,"index":189},"to":{"krate":0,"index":136}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/prime.rs","byte_start":10486,"byte_end":10490,"line_start":22,"line_end":22,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":3034},"to":{"krate":0,"index":136}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/prime.rs","byte_start":10497,"byte_end":10502,"line_start":23,"line_end":23,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":1,"index":2645},"to":{"krate":0,"index":136}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/prime.rs","byte_start":10509,"byte_end":10514,"line_start":24,"line_end":24,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":1,"index":3029},"to":{"krate":0,"index":136}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/prime.rs","byte_start":10521,"byte_end":10525,"line_start":25,"line_end":25,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":3024},"to":{"krate":0,"index":136}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/prime.rs","byte_start":10532,"byte_end":10536,"line_start":26,"line_end":26,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":3036},"to":{"krate":0,"index":136}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/prime.rs","byte_start":10548,"byte_end":10553,"line_start":27,"line_end":27,"column_start":12,"column_end":17},"kind":"SuperTrait","from":{"krate":1,"index":9604},"to":{"krate":0,"index":136}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/prime.rs","byte_start":10560,"byte_end":10569,"line_start":28,"line_end":28,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":1,"index":2675},"to":{"krate":0,"index":136}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/prime.rs","byte_start":10576,"byte_end":10578,"line_start":29,"line_end":29,"column_start":7,"column_end":9},"kind":"SuperTrait","from":{"krate":1,"index":2680},"to":{"krate":0,"index":136}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/prime.rs","byte_start":10599,"byte_end":10602,"line_start":31,"line_end":31,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":3118},"to":{"krate":0,"index":136}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/prime.rs","byte_start":10624,"byte_end":10627,"line_start":32,"line_end":32,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":3101},"to":{"krate":0,"index":136}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/prime.rs","byte_start":10722,"byte_end":10725,"line_start":33,"line_end":33,"column_start":15,"column_end":18},"kind":"SuperTrait","from":{"krate":1,"index":3101},"to":{"krate":0,"index":136}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":716,"byte_end":719,"line_start":31,"line_end":31,"column_start":5,"column_end":8},"kind":"SuperTrait","from":{"krate":1,"index":3091},"to":{"krate":0,"index":144}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":744,"byte_end":747,"line_start":31,"line_end":31,"column_start":33,"column_end":36},"kind":"SuperTrait","from":{"krate":1,"index":3096},"to":{"krate":0,"index":144}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":772,"byte_end":781,"line_start":31,"line_end":31,"column_start":61,"column_end":70},"kind":"SuperTrait","from":{"krate":1,"index":3122},"to":{"krate":0,"index":144}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":789,"byte_end":798,"line_start":31,"line_end":31,"column_start":78,"column_end":87},"kind":"SuperTrait","from":{"krate":1,"index":3126},"to":{"krate":0,"index":144}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":856,"byte_end":857,"line_start":35,"line_end":35,"column_start":48,"column_end":49},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":148},"to":{"krate":0,"index":144}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":1082,"byte_end":1090,"line_start":41,"line_end":41,"column_start":61,"column_end":69},"kind":"SuperTrait","from":{"krate":0,"index":144},"to":{"krate":0,"index":151}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":1163,"byte_end":1164,"line_start":42,"line_end":42,"column_start":53,"column_end":54},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":156},"to":{"krate":0,"index":151}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":1324,"byte_end":1327,"line_start":45,"line_end":45,"column_start":42,"column_end":45},"kind":"SuperTrait","from":{"krate":1,"index":3101},"to":{"krate":0,"index":160}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":1352,"byte_end":1361,"line_start":45,"line_end":45,"column_start":70,"column_end":79},"kind":"SuperTrait","from":{"krate":1,"index":3130},"to":{"krate":0,"index":160}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":1419,"byte_end":1420,"line_start":47,"line_end":47,"column_start":49,"column_end":50},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":164},"to":{"krate":0,"index":160}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":1607,"byte_end":1616,"line_start":51,"line_end":51,"column_start":55,"column_end":64},"kind":"SuperTrait","from":{"krate":0,"index":160},"to":{"krate":0,"index":167}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":1690,"byte_end":1691,"line_start":52,"line_end":52,"column_start":54,"column_end":55},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":172},"to":{"krate":0,"index":167}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":1824,"byte_end":1829,"line_start":56,"line_end":56,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2645},"to":{"krate":0,"index":176}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":1836,"byte_end":1840,"line_start":57,"line_end":57,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":3034},"to":{"krate":0,"index":176}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":1852,"byte_end":1857,"line_start":58,"line_end":58,"column_start":12,"column_end":17},"kind":"SuperTrait","from":{"krate":1,"index":9604},"to":{"krate":0,"index":176}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":1864,"byte_end":1866,"line_start":59,"line_end":59,"column_start":7,"column_end":9},"kind":"SuperTrait","from":{"krate":1,"index":2680},"to":{"krate":0,"index":176}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":1873,"byte_end":1878,"line_start":60,"line_end":60,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":1,"index":3029},"to":{"krate":0,"index":176}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":1885,"byte_end":1889,"line_start":61,"line_end":61,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":3024},"to":{"krate":0,"index":176}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":1896,"byte_end":1900,"line_start":62,"line_end":62,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":3036},"to":{"krate":0,"index":176}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":1921,"byte_end":1924,"line_start":64,"line_end":64,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":7681},"to":{"krate":0,"index":176}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":1939,"byte_end":1942,"line_start":65,"line_end":65,"column_start":15,"column_end":18},"kind":"SuperTrait","from":{"krate":1,"index":7681},"to":{"krate":0,"index":176}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":1959,"byte_end":1962,"line_start":66,"line_end":66,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":3118},"to":{"krate":0,"index":176}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":1984,"byte_end":1992,"line_start":67,"line_end":67,"column_start":7,"column_end":15},"kind":"SuperTrait","from":{"krate":0,"index":144},"to":{"krate":0,"index":176}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":1999,"byte_end":2012,"line_start":68,"line_end":68,"column_start":7,"column_end":20},"kind":"SuperTrait","from":{"krate":0,"index":151},"to":{"krate":0,"index":176}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":2019,"byte_end":2028,"line_start":69,"line_end":69,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":0,"index":160},"to":{"krate":0,"index":176}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":2060,"byte_end":2074,"line_start":70,"line_end":70,"column_start":7,"column_end":21},"kind":"SuperTrait","from":{"krate":0,"index":167},"to":{"krate":0,"index":176}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":2890,"byte_end":2895,"line_start":97,"line_end":97,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":0,"index":176},"to":{"krate":0,"index":185}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":2898,"byte_end":2906,"line_start":97,"line_end":97,"column_start":13,"column_end":21},"kind":"SuperTrait","from":{"krate":0,"index":144},"to":{"krate":0,"index":185}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":2938,"byte_end":2951,"line_start":97,"line_end":97,"column_start":53,"column_end":66},"kind":"SuperTrait","from":{"krate":0,"index":151},"to":{"krate":0,"index":185}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":3531,"byte_end":3536,"line_start":116,"line_end":116,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":3029},"to":{"krate":0,"index":189}},{"span":{"file_name":"/Users/trevorclarke/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.12.1/src/lib.rs","byte_start":5368,"byte_end":5373,"line_start":157,"line_end":157,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":1,"index":3029},"to":{"krate":0,"index":194}}]}